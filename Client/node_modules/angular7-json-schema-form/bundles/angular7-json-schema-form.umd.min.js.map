{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular7-json-schema-form/lib/shared/validator.functions.ts","ng://angular7-json-schema-form/lib/shared/utility.functions.ts","ng://angular7-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://angular7-json-schema-form/lib/shared/merge-schemas.function.ts","ng://angular7-json-schema-form/lib/shared/json-schema.functions.ts","ng://angular7-json-schema-form/lib/shared/format-regex.constants.ts","ng://angular7-json-schema-form/lib/shared/json.validators.ts","ng://angular7-json-schema-form/lib/shared/form-group.functions.ts","ng://angular7-json-schema-form/lib/shared/layout.functions.ts","ng://angular7-json-schema-form/lib/locale/en-validation-messages.ts","ng://angular7-json-schema-form/lib/locale/fr-validation-messages.ts","ng://angular7-json-schema-form/lib/json-schema-form.service.ts","ng://angular7-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://angular7-json-schema-form/lib/framework-library/framework.ts","ng://angular7-json-schema-form/lib/widget-library/add-reference.component.ts","ng://angular7-json-schema-form/lib/widget-library/button.component.ts","ng://angular7-json-schema-form/lib/widget-library/checkbox.component.ts","ng://angular7-json-schema-form/lib/shared/date.functions.ts","ng://angular7-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://angular7-json-schema-form/lib/widget-library/file.component.ts","ng://angular7-json-schema-form/lib/widget-library/input.component.ts","ng://angular7-json-schema-form/lib/widget-library/message.component.ts","ng://angular7-json-schema-form/lib/widget-library/none.component.ts","ng://angular7-json-schema-form/lib/widget-library/number.component.ts","ng://angular7-json-schema-form/lib/widget-library/one-of.component.ts","ng://angular7-json-schema-form/lib/widget-library/radios.component.ts","ng://angular7-json-schema-form/lib/widget-library/root.component.ts","ng://angular7-json-schema-form/lib/widget-library/section.component.ts","ng://angular7-json-schema-form/lib/widget-library/select.component.ts","ng://angular7-json-schema-form/lib/widget-library/select-framework.component.ts","ng://angular7-json-schema-form/lib/widget-library/select-widget.component.ts","ng://angular7-json-schema-form/lib/widget-library/submit.component.ts","ng://angular7-json-schema-form/lib/widget-library/tabs.component.ts","ng://angular7-json-schema-form/lib/widget-library/template.component.ts","ng://angular7-json-schema-form/lib/widget-library/textarea.component.ts","ng://angular7-json-schema-form/lib/widget-library/widget-library.service.ts","ng://angular7-json-schema-form/lib/framework-library/framework-library.service.ts","ng://angular7-json-schema-form/lib/json-schema-form.component.ts","ng://angular7-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://angular7-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://angular7-json-schema-form/lib/widget-library/hidden.component.ts","ng://angular7-json-schema-form/lib/widget-library/tab.component.ts","ng://angular7-json-schema-form/lib/widget-library/orderable.directive.ts","ng://angular7-json-schema-form/lib/widget-library/index.ts","ng://angular7-json-schema-form/lib/widget-library/widget-library.module.ts","ng://angular7-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://angular7-json-schema-form/lib/json-schema-form.module.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://angular7-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://angular7-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","_executeValidators","control","validators","invert","map","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","tslib_1.__values","objects_1_1","currentObject","isObject","_c","keys","_d","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","undefined","hasValue","isArray","isString","isNumber","strict","isNaN","isInteger","option","item","toString","isDate","isMap","isSet","isType","type","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","slice","getTime","toSchemaType","includes","testValue","isPromise","object","then","isObservable","subscribe","toObservable","observable","from","Observable","array","allIn","subItem","value1","value2","addClasses","oldClasses","newClasses","badType","toSet","Set","split","combinedSet","forEach","add","join","copy","errors","Map","fn","recurse","rootObject","_b","forEachCopy","newObject","hasOwn","property","has","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","filter","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","keyArray","parse","subObject","keyArray_1","keyArray_1_1","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","toKey","every","test","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","schema","firstKey","shift","properties","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","charAt","nextCB","RegExp","Injectable","mergeSchemas","schemas","some","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","_","isEqual","allOf","item1","findIndex","item2","combinedObject","_e","_f","subKey","definitions","_g","_h","required","combinedDependency","schemaDependency","dependencies","gcd_1","multipleOf","Math","min","max","notAnyOf","reduce","notAnyOfArray","notSchema","anyOf","not","_j","_k","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_l","_m","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","newSchema","getFieldType","fieldType","integer","null","buildSubSchema","$schema","size","a","minItems","getFromSchema","returnType","subSchema","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","maxItems","getTitleMapFromOneOf","color","date","date-time","email","uri","format","oneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","options","newOptions","fixUiKeys","formOptions","defautWidgetOptions","_a","newTitleMap","flatList","titleMap","enum","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","const","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","exclusive","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","cloneDeep","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","jsonSchemaFormatTests","time","hostname","ipv4","ipv6","uri-reference","uri-template","url","uuid","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","allowedValues","enumValue","inputValue","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","requiredFormat","isValid","formatTest","minimum","minimumValue","exclusiveMinimum","exclusiveMinimumValue","maximum","maximumValue","exclusiveMaximum","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","minimumItems","currentItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","actual","requiredTrue","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","validatorFns","validatorFn","parameters","groupControls_1","newControl","FormGroup","FormArray","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","enValidationMessages","log10","frValidationMessages","JsonSchemaFormService","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","ajvOptions","jsonPointers","unknownFormats","ajv","Ajv","validateFormData","formGroupTemplate","framework","validData","ajvErrors","validationErrors","dataErrors","formValueSubscription","dataChanges","Subject","isValidChanges","validationErrorChanges","","language","defaultFormOptions","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","widgets","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","getData","getSchema","getLayout","resetAllValues","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","dataPath","message","compileAjvSchema","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","all","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","statusChanges","getDataPointer","addSpaces","string","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","convertSchemaToDraft6","draft","changed","simpleTypes","contentEncoding","media","binaryEncoding","extends","disallow","maxDecimal","pow","divisibleBy","minimumCanEqual","maximumCanEqual","properties_1","requiredKeys_1","optional","requires","dependencies_1","id","$id","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","number","newType","tslib_1.__spread","default","typeSchema","newKey_1","Framework","stylesheets","scripts","AddReferenceComponent","ngOnInit","event","preventDefault","parent","itemCount","tslib_1.__decorate","Input","Component","selector","changeDetection","ChangeDetectionStrategy","Default","ButtonComponent","onClick","CheckboxComponent","trueValue","falseValue","dateToString","dateFormat","stringToDate","getFullYear","getMonth","getDay","getDate","ordinal","last","1","2","3","dateString","findDate","dateParts","part","thisYear","Date","year","foundDate","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","autoCompleteList","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowNegative","allowDecimal","allowExponents","lastValidNumber","OneOfComponent","RadiosComponent","radiosList","RootComponent","isFlexItem","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","newComponent","updateComponent","ngOnChanges","widgetContainer","createComponent","resolveComponentFactory","instance","ViewChild","read","ViewContainerRef","ComponentFactoryResolver","SelectWidgetComponent","SubmitComponent","TabsComponent","selectedItem","showAddTab","updateControl","select","lastItem","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","defaultWidget","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","registeredWidgets","frameworkWidgets","activeWidgets","setActiveWidgets","widgetName","usedAliases","setDefaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","FrameworkLibraryService","frameworks","activeFramework","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","getFrameworkScripts","tslib_1.__param","Inject","JSON_SCHEMA_FORM_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JsonSchemaFormComponent","multi","changeDetector","sanitizer","formInitialized","objectWrap","previousInputs","form","JSONSchema","UISchema","onChanges","EventEmitter","onSubmit","formSchema","dataChange","modelChange","formDataChange","ngModelChange","setFormValues","bypassSecurityTrustResourceUrl","stylesheet","script","updateForm","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","changedInput","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","markForCheck","validateOnRender_1","touchAll_1","markAsTouched","Output","OnPush","providers","ChangeDetectorRef","DomSanitizer","NoFrameworkComponent","NoFramework","_super","tslib_1.__extends","HiddenComponent","TabComponent","OrderableDirective","elementRef","ngZone","overParentElement","overChildElement","element","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","sourceArrayIndex","sessionStorage","setItem","dropEffect","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","BASIC_WIDGETS","WidgetLibraryModule","forRoot","ngModule","WidgetLibraryModule_1","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkModule","useClass","FlexLayoutRootComponent","FlexLayoutSectionComponent","fxLayout","fxLayoutWrap","MaterialAddReferenceComponent","MaterialButtonComponent","MaterialButtonGroupComponent","vertical","MaterialCheckboxComponent","showSlideToggle","MaterialCheckboxesComponent","horizontalList","checkedItems","updateAllValues","MaterialChipListComponent","MaterialDatepickerComponent","setControlDate","placeholder","dateValue","MaterialDesignFrameworkComponent","frameworkInitialized","parentArray","dynamicTitle","widgetOptions","initializeFramework","updateTitle","widgetLayoutNode","MaterialFileComponent","MaterialInputComponent","MaterialNumberComponent","MaterialOneOfComponent","MaterialRadiosComponent","flexDirection","MaterialSelectComponent","MaterialSliderComponent","MaterialStepperComponent","MaterialTabsComponent","MaterialTextareaComponent","MaterialDesignFramework","button-group","chip-list","slider","stepper","any-of","card","expansion-panel","JsonSchemaFormModule","MATERIAL_FRAMEWORK_COMPONENTS","ANGULAR_MATERIAL_MODULES","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","MaterialDesignFrameworkModule","FlexLayoutModule","Bootstrap3FrameworkComponent","isInputWidget","setTitle","htmlClass","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","itemLabelHtmlClass","fieldHtmlClass","messageLocation","icon","updateHelpBlock","thisVar","helpBlock","dirty","Bootstrap3Framework","Bootstrap3FrameworkModule","Bootstrap4FrameworkComponent","Bootstrap4Framework","Bootstrap4FrameworkModule","isFunction","_toPromise","toPromise"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { from, Observable } from 'rxjs';\r\n\r\n/**\r\n * Validator utility function library:\r\n *\r\n * Validator and error utilities:\r\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\r\n *\r\n * Individual value checking:\r\n *   isDefined, hasValue, isEmpty\r\n *\r\n * Individual type checking:\r\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\r\n *   isMap, isSet, isPromise, isObservable\r\n *\r\n * Multiple type checking and fixing:\r\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\r\n *   _toPromise, toObservable\r\n *\r\n * Utility functions:\r\n *   inArray, xor\r\n *\r\n * Typescript types and interfaces:\r\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\r\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\r\n *\r\n * Note: 'IValidatorFn' is short for 'invertable validator function',\r\n *   which is a validator functions that accepts an optional second\r\n *   argument which, if set to TRUE, causes the validator to perform\r\n *   the opposite of its original function.\r\n */\r\n\r\nexport type SchemaPrimitiveType =\r\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\r\nexport type SchemaType =\r\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\r\nexport type JavaScriptPrimitiveType =\r\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\r\nexport type JavaScriptType =\r\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\r\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\r\n  'math' | 'regexp'; // Note: this list is incomplete\r\nexport type PrimitiveValue = string | number | boolean | null | undefined;\r\nexport interface PlainObject { [k: string]: any; }\r\n\r\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\r\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\r\n\r\n/**\r\n * '_executeValidators' utility function\r\n *\r\n * Validates a control against an array of validators, and returns\r\n * an array of the same length containing a combination of error messages\r\n * (from invalid validators) and null values (from valid validators)\r\n *\r\n * //  { AbstractControl } control - control to validate\r\n * //  { IValidatorFn[] } validators - array of validators\r\n * //  { boolean } invert - invert?\r\n * // { PlainObject[] } - array of nulls and error message\r\n */\r\nexport function _executeValidators(control, validators, invert = false) {\r\n  return validators.map(validator => validator(control, invert));\r\n}\r\n\r\n/**\r\n * '_executeAsyncValidators' utility function\r\n *\r\n * Validates a control against an array of async validators, and returns\r\n * an array of observabe results of the same length containing a combination of\r\n * error messages (from invalid validators) and null values (from valid ones)\r\n *\r\n * //  { AbstractControl } control - control to validate\r\n * //  { AsyncIValidatorFn[] } validators - array of async validators\r\n * //  { boolean } invert - invert?\r\n * //  - array of observable nulls and error message\r\n */\r\nexport function _executeAsyncValidators(control, validators, invert = false) {\r\n  return validators.map(validator => validator(control, invert));\r\n}\r\n\r\n/**\r\n * '_mergeObjects' utility function\r\n *\r\n * Recursively Merges one or more objects into a single object with combined keys.\r\n * Automatically detects and ignores null and undefined inputs.\r\n * Also detects duplicated boolean 'not' keys and XORs their values.\r\n *\r\n * //  { PlainObject[] } objects - one or more objects to merge\r\n * // { PlainObject } - merged object\r\n */\r\nexport function _mergeObjects(...objects) {\r\n  const mergedObject: PlainObject = { };\r\n  for (const currentObject of objects) {\r\n    if (isObject(currentObject)) {\r\n      for (const key of Object.keys(currentObject)) {\r\n        const currentValue = currentObject[key];\r\n        const mergedValue = mergedObject[key];\r\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\r\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\r\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\r\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\r\n            _mergeObjects(mergedValue, currentValue) :\r\n            currentValue;\r\n      }\r\n    }\r\n  }\r\n  return mergedObject;\r\n}\r\n\r\n/**\r\n * '_mergeErrors' utility function\r\n *\r\n * Merges an array of objects.\r\n * Used for combining the validator errors returned from 'executeValidators'\r\n *\r\n * //  { PlainObject[] } arrayOfErrors - array of objects\r\n * // { PlainObject } - merged object, or null if no usable input objectcs\r\n */\r\nexport function _mergeErrors(arrayOfErrors) {\r\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\r\n  return isEmpty(mergedErrors) ? null : mergedErrors;\r\n}\r\n\r\n/**\r\n * 'isDefined' utility function\r\n *\r\n * Checks if a variable contains a value of any type.\r\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\r\n *\r\n * //   value - the value to check\r\n * // { boolean } - false if undefined or null, otherwise true\r\n */\r\nexport function isDefined(value) {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\n/**\r\n * 'hasValue' utility function\r\n *\r\n * Checks if a variable contains a value.\r\n * Returs false for null, undefined, or a zero-length strng, '',\r\n * otherwise returns true.\r\n * (Stricter than 'isDefined' because it also returns false for '',\r\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\r\n *\r\n * //   value - the value to check\r\n * // { boolean } - false if undefined, null, or '', otherwise true\r\n */\r\nexport function hasValue(value) {\r\n  return value !== undefined && value !== null && value !== '';\r\n}\r\n\r\n/**\r\n * 'isEmpty' utility function\r\n *\r\n * Similar to !hasValue, but also returns true for empty arrays and objects.\r\n *\r\n * //   value - the value to check\r\n * // { boolean } - false if undefined, null, or '', otherwise true\r\n */\r\nexport function isEmpty(value) {\r\n  if (isArray(value)) { return !value.length; }\r\n  if (isObject(value)) { return !Object.keys(value).length; }\r\n  return value === undefined || value === null || value === '';\r\n}\r\n\r\n/**\r\n * 'isString' utility function\r\n *\r\n * Checks if a value is a string.\r\n *\r\n * //   value - the value to check\r\n * // { boolean } - true if string, false if not\r\n */\r\nexport function isString(value) {\r\n  return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * 'isNumber' utility function\r\n *\r\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\r\n *\r\n * //   value - the value to check\r\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\r\n * // { boolean } - true if number, false if not\r\n */\r\nexport function isNumber(value, strict: any = false) {\r\n  if (strict && typeof value !== 'number') { return false; }\r\n  return !isNaN(value) && value !== value / 0;\r\n}\r\n\r\n/**\r\n * 'isInteger' utility function\r\n *\r\n * Checks if a value is an integer.\r\n *\r\n * //   value - the value to check\r\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\r\n * // {boolean } - true if number, false if not\r\n */\r\nexport function isInteger(value, strict: any = false) {\r\n  if (strict && typeof value !== 'number') { return false; }\r\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\r\n}\r\n\r\n/**\r\n * 'isBoolean' utility function\r\n *\r\n * Checks if a value is a boolean.\r\n *\r\n * //   value - the value to check\r\n * //  { any = null } option - if 'strict', also checks JavaScript type\r\n *                              if TRUE or FALSE, checks only for that value\r\n * // { boolean } - true if boolean, false if not\r\n */\r\nexport function isBoolean(value, option: any = null) {\r\n  if (option === 'strict') { return value === true || value === false; }\r\n  if (option === true) {\r\n    return value === true || value === 1 || value === 'true' || value === '1';\r\n  }\r\n  if (option === false) {\r\n    return value === false || value === 0 || value === 'false' || value === '0';\r\n  }\r\n  return value === true || value === 1 || value === 'true' || value === '1' ||\r\n    value === false || value === 0 || value === 'false' || value === '0';\r\n}\r\n\r\nexport function isFunction(item: any): boolean {\r\n  return typeof item === 'function';\r\n}\r\n\r\nexport function isObject(item: any): boolean {\r\n  return item !== null && typeof item === 'object' &&\r\n    Object.prototype.toString.call(item) === '[object Object]';\r\n}\r\n\r\nexport function isArray(item: any): boolean {\r\n  return Array.isArray(item) ||\r\n    Object.prototype.toString.call(item) === '[object Array]';\r\n}\r\n\r\nexport function isDate(item: any): boolean {\r\n  return typeof item === 'object' &&\r\n    Object.prototype.toString.call(item) === '[object Date]';\r\n}\r\n\r\nexport function isMap(item: any): boolean {\r\n  return typeof item === 'object' &&\r\n    Object.prototype.toString.call(item) === '[object Map]';\r\n}\r\n\r\nexport function isSet(item: any): boolean {\r\n  return typeof item === 'object' &&\r\n    Object.prototype.toString.call(item) === '[object Set]';\r\n}\r\n\r\nexport function isSymbol(item: any): boolean {\r\n  return typeof item === 'symbol';\r\n}\r\n\r\n/**\r\n * 'getType' function\r\n *\r\n * Detects the JSON Schema Type of a value.\r\n * By default, detects numbers and integers even if formatted as strings.\r\n * (So all integers are also numbers, and any number may also be a string.)\r\n * However, it only detects true boolean values (to detect boolean values\r\n * in non-boolean formats, use isBoolean() instead).\r\n *\r\n * If passed a second optional parameter of 'strict', it will only detect\r\n * numbers and integers if they are formatted as JavaScript numbers.\r\n *\r\n * Examples:\r\n * getType('10.5') = 'number'\r\n * getType(10.5) = 'number'\r\n * getType('10') = 'integer'\r\n * getType(10) = 'integer'\r\n * getType('true') = 'string'\r\n * getType(true) = 'boolean'\r\n * getType(null) = 'null'\r\n * getType({ }) = 'object'\r\n * getType([]) = 'array'\r\n *\r\n * getType('10.5', 'strict') = 'string'\r\n * getType(10.5, 'strict') = 'number'\r\n * getType('10', 'strict') = 'string'\r\n * getType(10, 'strict') = 'integer'\r\n * getType('true', 'strict') = 'string'\r\n * getType(true, 'strict') = 'boolean'\r\n *\r\n * //   value - value to check\r\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\r\n * // { SchemaType }\r\n */\r\nexport function getType(value, strict: any = false) {\r\n  if (!isDefined(value)) { return 'null'; }\r\n  if (isArray(value)) { return 'array'; }\r\n  if (isObject(value)) { return 'object'; }\r\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\r\n  if (isInteger(value, strict)) { return 'integer'; }\r\n  if (isNumber(value, strict)) { return 'number'; }\r\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 'isType' function\r\n *\r\n * Checks wether an input (probably string) value contains data of\r\n * a specified JSON Schema type\r\n *\r\n * //  { PrimitiveValue } value - value to check\r\n * //  { SchemaPrimitiveType } type - type to check\r\n * // { boolean }\r\n */\r\nexport function isType(value, type) {\r\n  switch (type) {\r\n    case 'string':\r\n      return isString(value) || isDate(value);\r\n    case 'number':\r\n      return isNumber(value);\r\n    case 'integer':\r\n      return isInteger(value);\r\n    case 'boolean':\r\n      return isBoolean(value);\r\n    case 'null':\r\n      return !hasValue(value);\r\n    default:\r\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 'isPrimitive' function\r\n *\r\n * Checks wether an input value is a JavaScript primitive type:\r\n * string, number, boolean, or null.\r\n *\r\n * //   value - value to check\r\n * // { boolean }\r\n */\r\nexport function isPrimitive(value) {\r\n  return (isString(value) || isNumber(value) ||\r\n    isBoolean(value, 'strict') || value === null);\r\n}\r\n\r\n/**\r\n * 'toJavaScriptType' function\r\n *\r\n * Converts an input (probably string) value to a JavaScript primitive type -\r\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\r\n *\r\n * Does not coerce values (other than null), and only converts the types\r\n * of values that would otherwise be valid.\r\n *\r\n * If the optional third parameter 'strictIntegers' is TRUE, and the\r\n * JSON Schema type 'integer' is specified, it also verifies the input value\r\n * is an integer and, if it is, returns it as a JaveScript number.\r\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\r\n * exactly the same as 'number', and allows decimals.\r\n *\r\n * Valid Examples:\r\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\r\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\r\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\r\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\r\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\r\n *\r\n * Invalid Examples:\r\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\r\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\r\n *\r\n * //  { PrimitiveValue } value - value to convert\r\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\r\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\r\n * // { PrimitiveValue }\r\n */\r\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\r\n  if (!isDefined(value)) { return null; }\r\n  if (isString(types)) { types = [types]; }\r\n  if (strictIntegers && inArray('integer', types)) {\r\n    if (isInteger(value, 'strict')) { return value; }\r\n    if (isInteger(value)) { return parseInt(value, 10); }\r\n  }\r\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\r\n    if (isNumber(value, 'strict')) { return value; }\r\n    if (isNumber(value)) { return parseFloat(value); }\r\n  }\r\n  if (inArray('string', types)) {\r\n    if (isString(value)) { return value; }\r\n    // If value is a date, and types includes 'string',\r\n    // convert the date to a string\r\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\r\n    if (isNumber(value)) { return value.toString(); }\r\n  }\r\n  // If value is a date, and types includes 'integer' or 'number',\r\n  // but not 'string', convert the date to a number\r\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\r\n    return value.getTime();\r\n  }\r\n  if (inArray('boolean', types)) {\r\n    if (isBoolean(value, true)) { return true; }\r\n    if (isBoolean(value, false)) { return false; }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 'toSchemaType' function\r\n *\r\n * Converts an input (probably string) value to the \"best\" JavaScript\r\n * equivalent available from an allowed list of JSON Schema types, which may\r\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\r\n * If necssary, it does progressively agressive type coersion.\r\n * It will not return null unless null is in the list of allowed types.\r\n *\r\n * Number conversion examples:\r\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\r\n * toSchemaType('10', ['number','string']) = 10 // number\r\n * toSchemaType('10', ['string']) = '10' // string\r\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\r\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\r\n * toSchemaType('10.5', ['integer']) = 10 // integer\r\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\r\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\r\n *\r\n * String conversion examples:\r\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\r\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\r\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\r\n * toSchemaType('1.5x', ['boolean']) = true // boolean\r\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\r\n * toSchemaType('xyz', ['number','integer','null']) = null // null\r\n * toSchemaType('xyz', ['number','integer']) = 0 // number\r\n *\r\n * Boolean conversion examples:\r\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\r\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\r\n * toSchemaType('1', ['string','boolean']) = '1' // string\r\n * toSchemaType('1', ['boolean']) = true // boolean\r\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\r\n * toSchemaType('true', ['boolean']) = true // boolean\r\n * toSchemaType('true', ['number']) = 0 // number\r\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\r\n * toSchemaType(true, ['number','string']) = 'true' // string\r\n * toSchemaType(true, ['number']) = 1 // number\r\n *\r\n * //  { PrimitiveValue } value - value to convert\r\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\r\n * // { PrimitiveValue }\r\n */\r\nexport function toSchemaType(value, types) {\r\n  if (!isArray(<SchemaPrimitiveType>types)) {\r\n    types = <SchemaPrimitiveType[]>[types];\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\r\n    return null;\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\r\n    return value;\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\r\n    const testValue = toJavaScriptType(value, 'integer');\r\n    if (testValue !== null) { return +testValue; }\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\r\n    const testValue = toJavaScriptType(value, 'number');\r\n    if (testValue !== null) { return +testValue; }\r\n  }\r\n  if (\r\n    (isString(value) || isNumber(value, 'strict')) &&\r\n    (<SchemaPrimitiveType[]>types).includes('string')\r\n  ) { // Convert number to string\r\n    return toJavaScriptType(value, 'string');\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\r\n    return toJavaScriptType(value, 'boolean');\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\r\n    if (value === null) { return ''; }\r\n    const testValue = toJavaScriptType(value, 'string');\r\n    if (testValue !== null) { return testValue; }\r\n  }\r\n  if ((\r\n    (<SchemaPrimitiveType[]>types).includes('number') ||\r\n    (<SchemaPrimitiveType[]>types).includes('integer'))\r\n  ) {\r\n    if (value === true) { return 1; } // Convert boolean & null to number\r\n    if (value === false || value === null || value === '') { return 0; }\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\r\n    const testValue = parseFloat(<string>value);\r\n    if (!!testValue) { return testValue; }\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\r\n    const testValue = parseInt(<string>value, 10);\r\n    if (!!testValue) { return testValue; }\r\n  }\r\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\r\n    return !!value;\r\n  }\r\n  if ((\r\n      (<SchemaPrimitiveType[]>types).includes('number') ||\r\n      (<SchemaPrimitiveType[]>types).includes('integer')\r\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\r\n  ) {\r\n    return 0; // If null not allowed, return 0 for non-convertable values\r\n  }\r\n}\r\n\r\n/**\r\n * 'isPromise' function\r\n *\r\n * //   object\r\n * // { boolean }\r\n */\r\nexport function isPromise(object): object is Promise<any> {\r\n  return !!object && typeof object.then === 'function';\r\n}\r\n\r\n/**\r\n * 'isObservable' function\r\n *\r\n * //   object\r\n * // { boolean }\r\n */\r\nexport function isObservable(object): object is Observable<any> {\r\n  return !!object && typeof object.subscribe === 'function';\r\n}\r\n\r\n/**\r\n * '_toPromise' function\r\n *\r\n * //  { object } object\r\n * // { Promise<any> }\r\n */\r\nexport function _toPromise(object): Promise<any> {\r\n  return isPromise(object) ? object : object.toPromise();\r\n}\r\n\r\n/**\r\n * 'toObservable' function\r\n *\r\n * //  { object } object\r\n * // { Observable<any> }\r\n */\r\nexport function toObservable(object): Observable<any> {\r\n  const observable = isPromise(object) ? from(object) : object;\r\n  if (isObservable(observable)) { return observable; }\r\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\r\n  return new Observable();\r\n}\r\n\r\n/**\r\n * 'inArray' function\r\n *\r\n * Searches an array for an item, or one of a list of items, and returns true\r\n * as soon as a match is found, or false if no match.\r\n *\r\n * If the optional third parameter allIn is set to TRUE, and the item to find\r\n * is an array, then the function returns true only if all elements from item\r\n * are found in the array list, and false if any element is not found. If the\r\n * item to find is not an array, setting allIn to TRUE has no effect.\r\n *\r\n * //  { any|any[] } item - the item to search for\r\n * //   array - the array to search\r\n * //  { boolean = false } allIn - if TRUE, all items must be in array\r\n * // { boolean } - true if item(s) in array, false otherwise\r\n */\r\nexport function inArray(item, array, allIn = false) {\r\n  if (!isDefined(item) || !isArray(array)) { return false; }\r\n  return isArray(item) ?\r\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\r\n    array.includes(item);\r\n}\r\n\r\n/**\r\n * 'xor' utility function - exclusive or\r\n *\r\n * Returns true if exactly one of two values is truthy.\r\n *\r\n * //   value1 - first value to check\r\n * //   value2 - second value to check\r\n * // { boolean } - true if exactly one input value is truthy, false if not\r\n */\r\nexport function xor(value1, value2) {\r\n  return (!!value1 && !value2) || (!value1 && !!value2);\r\n}\r\n","import {\r\n  hasValue,\r\n  inArray,\r\n  isArray,\r\n  isDefined,\r\n  isEmpty,\r\n  isMap,\r\n  isObject,\r\n  isSet,\r\n  isString,\r\n  PlainObject\r\n  } from './validator.functions';\r\n\r\n/**\r\n * Utility function library:\r\n *\r\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\r\n * uniqueItems, commonItems, fixTitle, toTitleCase\r\n*/\r\n\r\n/**\r\n * 'addClasses' function\r\n *\r\n * Merges two space-delimited lists of CSS classes and removes duplicates.\r\n *\r\n * // {string | string[] | Set<string>} oldClasses\r\n * // {string | string[] | Set<string>} newClasses\r\n * // {string | string[] | Set<string>} - Combined classes\r\n */\r\nexport function addClasses(\r\n  oldClasses: string | string[] | Set<string>,\r\n  newClasses: string | string[] | Set<string>\r\n): string | string[] | Set<string> {\r\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\r\n  if (badType(newClasses)) { return oldClasses; }\r\n  if (badType(oldClasses)) { oldClasses = ''; }\r\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\r\n  const combinedSet: Set<any> = toSet(oldClasses);\r\n  const newSet: Set<any> = toSet(newClasses);\r\n  newSet.forEach(c => combinedSet.add(c));\r\n  if (isSet(oldClasses)) { return combinedSet; }\r\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\r\n  return Array.from(combinedSet).join(' ');\r\n}\r\n\r\n/**\r\n * 'copy' function\r\n *\r\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\r\n * If passed a JavaScript primitive value (string, number, boolean, or null),\r\n * it returns the value.\r\n *\r\n * // {Object|Array|string|number|boolean|null} object - The object to copy\r\n * // {boolean = false} errors - Show errors?\r\n * // {Object|Array|string|number|boolean|null} - The copied object\r\n */\r\nexport function copy(object: any, errors = false): any {\r\n  if (typeof object !== 'object' || object === null) { return object; }\r\n  if (isMap(object))    { return new Map(object); }\r\n  if (isSet(object))    { return new Set(object); }\r\n  if (isArray(object))  { return [ ...object ];   }\r\n  if (isObject(object)) { return { ...object };   }\r\n  if (errors) {\r\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\r\n  }\r\n  return object;\r\n}\r\n\r\n/**\r\n * 'forEach' function\r\n *\r\n * Iterates over all items in the first level of an object or array\r\n * and calls an iterator funciton on each item.\r\n *\r\n * The iterator function is called with four values:\r\n * 1. The current item's value\r\n * 2. The current item's key\r\n * 3. The parent object, which contains the current item\r\n * 4. The root object\r\n *\r\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\r\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\r\n * specified direction.\r\n *\r\n * // {Object|Array} object - The object or array to iterate over\r\n * // {function} fn - the iterator funciton to call on each item\r\n * // {boolean = false} errors - Show errors?\r\n * // {void}\r\n */\r\nexport function forEach(\r\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\r\n  recurse: boolean | string = false, rootObject: any = object, errors = false\r\n): void {\r\n  if (isEmpty(object)) { return; }\r\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\r\n    for (const key of Object.keys(object)) {\r\n      const value = object[key];\r\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\r\n        forEach(value, fn, recurse, rootObject);\r\n      }\r\n      fn(value, key, object, rootObject);\r\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\r\n        forEach(value, fn, recurse, rootObject);\r\n      }\r\n    }\r\n  }\r\n  if (errors) {\r\n    if (typeof fn !== 'function') {\r\n      console.error('forEach error: Iterator must be a function.');\r\n      console.error('function', fn);\r\n    }\r\n    if (!isObject(object) && !isArray(object)) {\r\n      console.error('forEach error: Input object must be an object or array.');\r\n      console.error('object', object);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 'forEachCopy' function\r\n *\r\n * Iterates over all items in the first level of an object or array\r\n * and calls an iterator function on each item. Returns a new object or array\r\n * with the same keys or indexes as the original, and values set to the results\r\n * of the iterator function.\r\n *\r\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\r\n *\r\n * // {Object | Array} object - The object or array to iterate over\r\n * // {function} fn - The iterator funciton to call on each item\r\n * // {boolean = false} errors - Show errors?\r\n * // {Object | Array} - The resulting object or array\r\n */\r\nexport function forEachCopy(\r\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\r\n  errors = false\r\n): any {\r\n  if (!hasValue(object)) { return; }\r\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\r\n    const newObject: any = isArray(object) ? [] : {};\r\n    for (const key of Object.keys(object)) {\r\n      newObject[key] = fn(object[key], key, object);\r\n    }\r\n    return newObject;\r\n  }\r\n  if (errors) {\r\n    if (typeof fn !== 'function') {\r\n      console.error('forEachCopy error: Iterator must be a function.');\r\n      console.error('function', fn);\r\n    }\r\n    if (!isObject(object) && !isArray(object)) {\r\n      console.error('forEachCopy error: Input object must be an object or array.');\r\n      console.error('object', object);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 'hasOwn' utility function\r\n *\r\n * Checks whether an object or array has a particular property.\r\n *\r\n * // {any} object - the object to check\r\n * // {string} property - the property to look for\r\n * // {boolean} - true if object has property, false if not\r\n */\r\nexport function hasOwn(object: any, property: string): boolean {\r\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\r\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\r\n  ) { return false; }\r\n  if (isMap(object) || isSet(object)) { return object.has(property); }\r\n  if (typeof property === 'number') {\r\n    if (isArray(object)) { return object[<number>property]; }\r\n    property = property + '';\r\n  }\r\n  return object.hasOwnProperty(property);\r\n}\r\n\r\n/**\r\n * 'mergeFilteredObject' utility function\r\n *\r\n * Shallowly merges two objects, setting key and values from source object\r\n * in target object, excluding specified keys.\r\n *\r\n * Optionally, it can also use functions to transform the key names and/or\r\n * the values of the merging object.\r\n *\r\n * // {PlainObject} targetObject - Target object to add keys and values to\r\n * // {PlainObject} sourceObject - Source object to copy keys and values from\r\n * // {string[]} excludeKeys - Array of keys to exclude\r\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\r\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\r\n * // {PlainObject} - Returns targetObject\r\n */\r\nexport function mergeFilteredObject(\r\n  targetObject: PlainObject,\r\n  sourceObject: PlainObject,\r\n  excludeKeys = <string[]>[],\r\n  keyFn = (key: string): string => key,\r\n  valFn = (val: any): any => val\r\n): PlainObject {\r\n  if (!isObject(sourceObject)) { return targetObject; }\r\n  if (!isObject(targetObject)) { targetObject = {}; }\r\n  for (const key of Object.keys(sourceObject)) {\r\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\r\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\r\n    }\r\n  }\r\n  return targetObject;\r\n}\r\n\r\n/**\r\n * 'uniqueItems' function\r\n *\r\n * Accepts any number of string value inputs,\r\n * and returns an array of all input vaues, excluding duplicates.\r\n *\r\n * // {...string} ...items -\r\n * // {string[]} -\r\n */\r\nexport function uniqueItems(...items): string[] {\r\n  const returnItems = [];\r\n  for (const item of items) {\r\n    if (!returnItems.includes(item)) { returnItems.push(item); }\r\n  }\r\n  return returnItems;\r\n}\r\n\r\n/**\r\n * 'commonItems' function\r\n *\r\n * Accepts any number of strings or arrays of string values,\r\n * and returns a single array containing only values present in all inputs.\r\n *\r\n * // {...string|string[]} ...arrays -\r\n * // {string[]} -\r\n */\r\nexport function commonItems(...arrays): string[] {\r\n  let returnItems = null;\r\n  for (let array of arrays) {\r\n    if (isString(array)) { array = [array]; }\r\n    returnItems = returnItems === null ? [ ...array ] :\r\n      returnItems.filter(item => array.includes(item));\r\n    if (!returnItems.length) { return []; }\r\n  }\r\n  return returnItems;\r\n}\r\n\r\n/**\r\n * 'fixTitle' function\r\n *\r\n *\r\n * // {string} input -\r\n * // {string} -\r\n */\r\nexport function fixTitle(name: string): string {\r\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\r\n}\r\n\r\n/**\r\n * 'toTitleCase' function\r\n *\r\n * Intelligently converts an input string to Title Case.\r\n *\r\n * Accepts an optional second parameter with a list of additional\r\n * words and abbreviations to force into a particular case.\r\n *\r\n * This function is built on prior work by John Gruber and David Gouch:\r\n * http://daringfireball.net/2008/08/title_case_update\r\n * https://github.com/gouch/to-title-case\r\n *\r\n * // {string} input -\r\n * // {string|string[]} forceWords? -\r\n * // {string} -\r\n */\r\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\r\n  if (!isString(input)) { return input; }\r\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\r\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\r\n   'vs', 'vs.', 'via'];\r\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\r\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\r\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\r\n  const noInitialCase: boolean =\r\n    input === input.toUpperCase() || input === input.toLowerCase();\r\n  let prevLastChar = '';\r\n  input = input.trim();\r\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\r\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\r\n      return word;\r\n    } else {\r\n      let newWord: string;\r\n      const forceWord: string =\r\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\r\n      if (!forceWord) {\r\n        if (noInitialCase) {\r\n          if (word.slice(1).search(/\\../) !== -1) {\r\n            newWord = word.toLowerCase();\r\n          } else {\r\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n          }\r\n        } else {\r\n          newWord = word[0].toUpperCase() + word.slice(1);\r\n        }\r\n      } else if (\r\n        forceWord === forceWord.toLowerCase() && (\r\n          idx === 0 || idx + word.length === input.length ||\r\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\r\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\r\n        )\r\n      ) {\r\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\r\n      } else {\r\n        newWord = forceWord;\r\n      }\r\n      prevLastChar = word.slice(-1);\r\n      return newWord;\r\n    }\r\n  });\r\n}\r\n","import { copy, hasOwn } from './utility.functions';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  isArray,\r\n  isDefined,\r\n  isEmpty,\r\n  isMap,\r\n  isNumber,\r\n  isObject,\r\n  isString\r\n  } from './validator.functions';\r\n\r\n\r\n/**\r\n * 'JsonPointer' class\r\n *\r\n * Some utilities for using JSON Pointers with JSON objects\r\n * https://tools.ietf.org/html/rfc6901\r\n *\r\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\r\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\r\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\r\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\r\n *\r\n * Some functions based on manuelstofer's json-pointer utilities\r\n * https://github.com/manuelstofer/json-pointer\r\n */\r\nexport type Pointer = string | string[];\r\n\r\n@Injectable()\r\nexport class JsonPointer {\r\n\r\n  /**\r\n   * 'get' function\r\n   *\r\n   * Uses a JSON Pointer to retrieve a value from an object.\r\n   *\r\n   * //  { object } object - Object to get value from\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\r\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\r\n   * //  { boolean = false } getBoolean - Return only true or false?\r\n   * //  { boolean = false } errors - Show error if not found?\r\n   * // { object } - Located value (or true or false if getBoolean = true)\r\n   */\r\n  static get(\r\n    object, pointer, startSlice = 0, endSlice: number = null,\r\n    getBoolean = false, errors = false\r\n  ) {\r\n    if (object === null) { return getBoolean ? false : undefined; }\r\n    let keyArray: any[] = this.parse(pointer, errors);\r\n    if (typeof object === 'object' && keyArray !== null) {\r\n      let subObject = object;\r\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\r\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\r\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\r\n      keyArray = keyArray.slice(startSlice, endSlice);\r\n      for (let key of keyArray) {\r\n        if (key === '-' && isArray(subObject) && subObject.length) {\r\n          key = subObject.length - 1;\r\n        }\r\n        if (isMap(subObject) && subObject.has(key)) {\r\n          subObject = subObject.get(key);\r\n        } else if (typeof subObject === 'object' && subObject !== null &&\r\n          hasOwn(subObject, key)\r\n        ) {\r\n          subObject = subObject[key];\r\n        } else {\r\n          if (errors) {\r\n            console.error(`get error: \"${key}\" key not found in object.`);\r\n            console.error(pointer);\r\n            console.error(object);\r\n          }\r\n          return getBoolean ? false : undefined;\r\n        }\r\n      }\r\n      return getBoolean ? true : subObject;\r\n    }\r\n    if (errors && keyArray === null) {\r\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\r\n    }\r\n    if (errors && typeof object !== 'object') {\r\n      console.error('get error: Invalid object:');\r\n      console.error(object);\r\n    }\r\n    return getBoolean ? false : undefined;\r\n  }\r\n\r\n  /**\r\n   * 'getCopy' function\r\n   *\r\n   * Uses a JSON Pointer to deeply clone a value from an object.\r\n   *\r\n   * //  { object } object - Object to get value from\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\r\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\r\n   * //  { boolean = false } getBoolean - Return only true or false?\r\n   * //  { boolean = false } errors - Show error if not found?\r\n   * // { object } - Located value (or true or false if getBoolean = true)\r\n   */\r\n  static getCopy(\r\n    object, pointer, startSlice = 0, endSlice: number = null,\r\n    getBoolean = false, errors = false\r\n  ) {\r\n    const objectToCopy =\r\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\r\n    return this.forEachDeepCopy(objectToCopy);\r\n  }\r\n\r\n  /**\r\n   * 'getFirst' function\r\n   *\r\n   * Takes an array of JSON Pointers and objects,\r\n   * checks each object for a value specified by the pointer,\r\n   * and returns the first value found.\r\n   *\r\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\r\n   * //  { any = null } defaultValue - Value to return if nothing found\r\n   * //  { boolean = false } getCopy - Return a copy instead?\r\n   * //  - First value found\r\n   */\r\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\r\n    if (isEmpty(items)) { return; }\r\n    if (isArray(items)) {\r\n      for (const item of items) {\r\n        if (isEmpty(item)) { continue; }\r\n        if (isArray(item) && item.length >= 2) {\r\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\r\n          const value = getCopy ?\r\n            this.getCopy(item[0], item[1]) :\r\n            this.get(item[0], item[1]);\r\n          if (value) { return value; }\r\n          continue;\r\n        }\r\n        console.error('getFirst error: Input not in correct format.\\n' +\r\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\r\n        return;\r\n      }\r\n      return defaultValue;\r\n    }\r\n    if (isMap(items)) {\r\n      for (const [object, pointer] of items) {\r\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\r\n        const value = getCopy ?\r\n          this.getCopy(object, pointer) :\r\n          this.get(object, pointer);\r\n        if (value) { return value; }\r\n      }\r\n      return defaultValue;\r\n    }\r\n    console.error('getFirst error: Input not in correct format.\\n' +\r\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 'getFirstCopy' function\r\n   *\r\n   * Similar to getFirst, but always returns a copy.\r\n   *\r\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\r\n   * //  { any = null } defaultValue - Value to return if nothing found\r\n   * //  - Copy of first value found\r\n   */\r\n  static getFirstCopy(items, defaultValue: any = null) {\r\n    const firstCopy = this.getFirst(items, defaultValue, true);\r\n    return firstCopy;\r\n  }\r\n\r\n  /**\r\n   * 'set' function\r\n   *\r\n   * Uses a JSON Pointer to set a value on an object.\r\n   * Also creates any missing sub objects or arrays to contain that value.\r\n   *\r\n   * If the optional fourth parameter is TRUE and the inner-most container\r\n   * is an array, the function will insert the value as a new item at the\r\n   * specified location in the array, rather than overwriting the existing\r\n   * value (if any) at that location.\r\n   *\r\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\r\n   * and\r\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\r\n   *\r\n   * //  { object } object - The object to set value in\r\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\r\n   * //   value - The new value to set\r\n   * //  { boolean } insert - insert value?\r\n   * // { object } - The original object, modified with the set value\r\n   */\r\n  static set(object, pointer, value, insert = false) {\r\n    const keyArray = this.parse(pointer);\r\n    if (keyArray !== null && keyArray.length) {\r\n      let subObject = object;\r\n      for (let i = 0; i < keyArray.length - 1; ++i) {\r\n        let key = keyArray[i];\r\n        if (key === '-' && isArray(subObject)) {\r\n          key = subObject.length;\r\n        }\r\n        if (isMap(subObject) && subObject.has(key)) {\r\n          subObject = subObject.get(key);\r\n        } else {\r\n          if (!hasOwn(subObject, key)) {\r\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\r\n          }\r\n          subObject = subObject[key];\r\n        }\r\n      }\r\n      const lastKey = keyArray[keyArray.length - 1];\r\n      if (isArray(subObject) && lastKey === '-') {\r\n        subObject.push(value);\r\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\r\n        subObject.splice(lastKey, 0, value);\r\n      } else if (isMap(subObject)) {\r\n        subObject.set(lastKey, value);\r\n      } else {\r\n        subObject[lastKey] = value;\r\n      }\r\n      return object;\r\n    }\r\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * 'setCopy' function\r\n   *\r\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\r\n   * Also creates any missing sub objects or arrays to contain that value.\r\n   *\r\n   * If the optional fourth parameter is TRUE and the inner-most container\r\n   * is an array, the function will insert the value as a new item at the\r\n   * specified location in the array, rather than overwriting the existing value.\r\n   *\r\n   * //  { object } object - The object to copy and set value in\r\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\r\n   * //   value - The value to set\r\n   * //  { boolean } insert - insert value?\r\n   * // { object } - The new object with the set value\r\n   */\r\n  static setCopy(object, pointer, value, insert = false) {\r\n    const keyArray = this.parse(pointer);\r\n    if (keyArray !== null) {\r\n      const newObject = copy(object);\r\n      let subObject = newObject;\r\n      for (let i = 0; i < keyArray.length - 1; ++i) {\r\n        let key = keyArray[i];\r\n        if (key === '-' && isArray(subObject)) {\r\n          key = subObject.length;\r\n        }\r\n        if (isMap(subObject) && subObject.has(key)) {\r\n          subObject.set(key, copy(subObject.get(key)));\r\n          subObject = subObject.get(key);\r\n        } else {\r\n          if (!hasOwn(subObject, key)) {\r\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\r\n          }\r\n          subObject[key] = copy(subObject[key]);\r\n          subObject = subObject[key];\r\n        }\r\n      }\r\n      const lastKey = keyArray[keyArray.length - 1];\r\n      if (isArray(subObject) && lastKey === '-') {\r\n        subObject.push(value);\r\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\r\n        subObject.splice(lastKey, 0, value);\r\n      } else if (isMap(subObject)) {\r\n        subObject.set(lastKey, value);\r\n      } else {\r\n        subObject[lastKey] = value;\r\n      }\r\n      return newObject;\r\n    }\r\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * 'insert' function\r\n   *\r\n   * Calls 'set' with insert = TRUE\r\n   *\r\n   * //  { object } object - object to insert value in\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //   value - value to insert\r\n   * // { object }\r\n   */\r\n  static insert(object, pointer, value) {\r\n    const updatedObject = this.set(object, pointer, value, true);\r\n    return updatedObject;\r\n  }\r\n\r\n  /**\r\n   * 'insertCopy' function\r\n   *\r\n   * Calls 'setCopy' with insert = TRUE\r\n   *\r\n   * //  { object } object - object to insert value in\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //   value - value to insert\r\n   * // { object }\r\n   */\r\n  static insertCopy(object, pointer, value) {\r\n    const updatedObject = this.setCopy(object, pointer, value, true);\r\n    return updatedObject;\r\n  }\r\n\r\n  /**\r\n   * 'remove' function\r\n   *\r\n   * Uses a JSON Pointer to remove a key and its attribute from an object\r\n   *\r\n   * //  { object } object - object to delete attribute from\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * // { object }\r\n   */\r\n  static remove(object, pointer) {\r\n    const keyArray = this.parse(pointer);\r\n    if (keyArray !== null && keyArray.length) {\r\n      let lastKey = keyArray.pop();\r\n      const parentObject = this.get(object, keyArray);\r\n      if (isArray(parentObject)) {\r\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\r\n        parentObject.splice(lastKey, 1);\r\n      } else if (isObject(parentObject)) {\r\n        delete parentObject[lastKey];\r\n      }\r\n      return object;\r\n    }\r\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * 'has' function\r\n   *\r\n   * Tests if an object has a value at the location specified by a JSON Pointer\r\n   *\r\n   * //  { object } object - object to chek for value\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * // { boolean }\r\n   */\r\n  static has(object, pointer) {\r\n    const hasValue = this.get(object, pointer, 0, null, true);\r\n    return hasValue;\r\n  }\r\n\r\n  /**\r\n   * 'dict' function\r\n   *\r\n   * Returns a (pointer -> value) dictionary for an object\r\n   *\r\n   * //  { object } object - The object to create a dictionary from\r\n   * // { object } - The resulting dictionary object\r\n   */\r\n  static dict(object) {\r\n    const results: any = {};\r\n    this.forEachDeep(object, (value, pointer) => {\r\n      if (typeof value !== 'object') { results[pointer] = value; }\r\n    });\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * 'forEachDeep' function\r\n   *\r\n   * Iterates over own enumerable properties of an object or items in an array\r\n   * and invokes an iteratee function for each key/value or index/value pair.\r\n   * By default, iterates over items within objects and arrays after calling\r\n   * the iteratee function on the containing object or array itself.\r\n   *\r\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\r\n   * where pointer is a JSON pointer indicating the location of the current\r\n   * value within the root object, and rootObject is the root object initially\r\n   * submitted to th function.\r\n   *\r\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\r\n   * function will be called on sub-objects and arrays after being\r\n   * called on their contents, rather than before, which is the default.\r\n   *\r\n   * This function can also optionally be called directly on a sub-object by\r\n   * including optional 4th and 5th parameterss to specify the initial\r\n   * root object and pointer.\r\n   *\r\n   * //  { object } object - the initial object or array\r\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\r\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\r\n   * //  { object = object } rootObject - optional, root object or array\r\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\r\n   * // { object } - The modified object\r\n   */\r\n  static forEachDeep(\r\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\r\n    bottomUp = false, pointer = '', rootObject = object\r\n  ) {\r\n    if (typeof fn !== 'function') {\r\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\r\n      return;\r\n    }\r\n    if (!bottomUp) { fn(object, pointer, rootObject); }\r\n    if (isObject(object) || isArray(object)) {\r\n      for (const key of Object.keys(object)) {\r\n        const newPointer = pointer + '/' + this.escape(key);\r\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\r\n      }\r\n    }\r\n    if (bottomUp) { fn(object, pointer, rootObject); }\r\n  }\r\n\r\n  /**\r\n   * 'forEachDeepCopy' function\r\n   *\r\n   * Similar to forEachDeep, but returns a copy of the original object, with\r\n   * the same keys and indexes, but with values replaced with the result of\r\n   * the iteratee function.\r\n   *\r\n   * //  { object } object - the initial object or array\r\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\r\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\r\n   * //  { object = object } rootObject - optional, root object or array\r\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\r\n   * // { object } - The copied object\r\n   */\r\n  static forEachDeepCopy(\r\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\r\n    bottomUp = false, pointer = '', rootObject = object\r\n  ) {\r\n    if (typeof fn !== 'function') {\r\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\r\n      return null;\r\n    }\r\n    if (isObject(object) || isArray(object)) {\r\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\r\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\r\n      for (const key of Object.keys(newObject)) {\r\n        const newPointer = pointer + '/' + this.escape(key);\r\n        newObject[key] = this.forEachDeepCopy(\r\n          newObject[key], fn, bottomUp, newPointer, rootObject\r\n        );\r\n      }\r\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\r\n      return newObject;\r\n    } else {\r\n      return fn(object, pointer, rootObject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'escape' function\r\n   *\r\n   * Escapes a string reference key\r\n   *\r\n   * //  { string } key - string key to escape\r\n   * // { string } - escaped key\r\n   */\r\n  static escape(key) {\r\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\r\n    return escaped;\r\n  }\r\n\r\n  /**\r\n   * 'unescape' function\r\n   *\r\n   * Unescapes a string reference key\r\n   *\r\n   * //  { string } key - string key to unescape\r\n   * // { string } - unescaped key\r\n   */\r\n  static unescape(key) {\r\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\r\n    return unescaped;\r\n  }\r\n\r\n  /**\r\n   * 'parse' function\r\n   *\r\n   * Converts a string JSON Pointer into a array of keys\r\n   * (if input is already an an array of keys, it is returned unchanged)\r\n   *\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //  { boolean = false } errors - Show error if invalid pointer?\r\n   * // { string[] } - JSON Pointer array of keys\r\n   */\r\n  static parse(pointer, errors = false) {\r\n    if (!this.isJsonPointer(pointer)) {\r\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\r\n      return null;\r\n    }\r\n    if (isArray(pointer)) { return <string[]>pointer; }\r\n    if (typeof pointer === 'string') {\r\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\r\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\r\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'compile' function\r\n   *\r\n   * Converts an array of keys into a JSON Pointer string\r\n   * (if input is already a string, it is normalized and returned)\r\n   *\r\n   * The optional second parameter is a default which will replace any empty keys.\r\n   *\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //  { string | number = '' } defaultValue - Default value\r\n   * //  { boolean = false } errors - Show error if invalid pointer?\r\n   * // { string } - JSON Pointer string\r\n   */\r\n  static compile(pointer, defaultValue = '', errors = false) {\r\n    if (pointer === '#') { return ''; }\r\n    if (!this.isJsonPointer(pointer)) {\r\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\r\n      return null;\r\n    }\r\n    if (isArray(pointer)) {\r\n      if ((<string[]>pointer).length === 0) { return ''; }\r\n      return '/' + (<string[]>pointer).map(\r\n        key => key === '' ? defaultValue : this.escape(key)\r\n      ).join('/');\r\n    }\r\n    if (typeof pointer === 'string') {\r\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\r\n      return pointer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'toKey' function\r\n   *\r\n   * Extracts name of the final key from a JSON Pointer.\r\n   *\r\n   * //  { Pointer } pointer - JSON Pointer (string or array)\r\n   * //  { boolean = false } errors - Show error if invalid pointer?\r\n   * // { string } - the extracted key\r\n   */\r\n  static toKey(pointer, errors = false) {\r\n    const keyArray = this.parse(pointer, errors);\r\n    if (keyArray === null) { return null; }\r\n    if (!keyArray.length) { return ''; }\r\n    return keyArray[keyArray.length - 1];\r\n  }\r\n\r\n  /**\r\n   * 'isJsonPointer' function\r\n   *\r\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\r\n   * Returns true if a string is empty, or starts with '/' or '#/'.\r\n   * Returns true if an array contains only string values.\r\n   *\r\n   * //   value - value to check\r\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\r\n   */\r\n  static isJsonPointer(value) {\r\n    if (isArray(value)) {\r\n      return value.every(key => typeof key === 'string');\r\n    } else if (isString(value)) {\r\n      if (value === '' || value === '#') { return true; }\r\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\r\n        return !/(~[^01]|~$)/g.test(value);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 'isSubPointer' function\r\n   *\r\n   * Checks whether one JSON Pointer is a subset of another.\r\n   *\r\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\r\n   * //  { Pointer } longPointer - potential superset JSON Pointer\r\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\r\n   * //  { boolean = false } errors - Show error if invalid pointer?\r\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\r\n   */\r\n  static isSubPointer(\r\n    shortPointer, longPointer, trueIfMatching = false, errors = false\r\n  ) {\r\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\r\n      if (errors) {\r\n        let invalid = '';\r\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\r\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\r\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\r\n      }\r\n      return;\r\n    }\r\n    shortPointer = this.compile(shortPointer, '', errors);\r\n    longPointer = this.compile(longPointer, '', errors);\r\n    return shortPointer === longPointer ? trueIfMatching :\r\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\r\n  }\r\n\r\n  /**\r\n   * 'toIndexedPointer' function\r\n   *\r\n   * Merges an array of numeric indexes and a generic pointer to create an\r\n   * indexed pointer for a specific item.\r\n   *\r\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\r\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\r\n   *\r\n   *\r\n   * //  { Pointer } genericPointer - The generic pointer\r\n   * //  { number[] } indexArray - The array of numeric indexes\r\n   * //  { Map<string, number> } arrayMap - An optional array map\r\n   * // { string } - The merged pointer with indexes\r\n   */\r\n  static toIndexedPointer(\r\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\r\n  ) {\r\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\r\n      let indexedPointer = this.compile(genericPointer);\r\n      if (isMap(arrayMap)) {\r\n        let arrayIndex = 0;\r\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\r\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\r\n            '/' + indexArray[arrayIndex++] : key\r\n        );\r\n      } else {\r\n        for (const pointerIndex of indexArray) {\r\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\r\n        }\r\n        return indexedPointer;\r\n      }\r\n    }\r\n    if (!this.isJsonPointer(genericPointer)) {\r\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\r\n    }\r\n    if (!isArray(indexArray)) {\r\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'toGenericPointer' function\r\n   *\r\n   * Compares an indexed pointer to an array map and removes list array\r\n   * indexes (but leaves tuple arrray indexes and all object keys, including\r\n   * numeric keys) to create a generic pointer.\r\n   *\r\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\r\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\r\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\r\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\r\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\r\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\r\n   *\r\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\r\n   *\r\n   *\r\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\r\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\r\n   * // { string } - The generic pointer with indexes removed\r\n   */\r\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\r\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\r\n      const pointerArray = this.parse(indexedPointer);\r\n      for (let i = 1; i < pointerArray.length; i++) {\r\n        const subPointer = this.compile(pointerArray.slice(0, i));\r\n        if (arrayMap.has(subPointer) &&\r\n          arrayMap.get(subPointer) <= +pointerArray[i]\r\n        ) {\r\n          pointerArray[i] = '-';\r\n        }\r\n      }\r\n      return this.compile(pointerArray);\r\n    }\r\n    if (!this.isJsonPointer(indexedPointer)) {\r\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\r\n    }\r\n    if (!isMap(arrayMap)) {\r\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'toControlPointer' function\r\n   *\r\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\r\n   * matching control in an Angular FormGroup.\r\n   *\r\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\r\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\r\n   * //  { boolean = false } controlMustExist - Only return if control exists?\r\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\r\n   */\r\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\r\n    const dataPointerArray = this.parse(dataPointer);\r\n    const controlPointerArray: string[] = [];\r\n    let subGroup = formGroup;\r\n    if (dataPointerArray !== null) {\r\n      for (const key of dataPointerArray) {\r\n        if (hasOwn(subGroup, 'controls')) {\r\n          controlPointerArray.push('controls');\r\n          subGroup = subGroup.controls;\r\n        }\r\n        if (isArray(subGroup) && (key === '-')) {\r\n          controlPointerArray.push((subGroup.length - 1).toString());\r\n          subGroup = subGroup[subGroup.length - 1];\r\n        } else if (hasOwn(subGroup, key)) {\r\n          controlPointerArray.push(key);\r\n          subGroup = subGroup[key];\r\n        } else if (controlMustExist) {\r\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\r\n          console.error(dataPointer);\r\n          console.error(formGroup);\r\n          return;\r\n        } else {\r\n          controlPointerArray.push(key);\r\n          subGroup = { controls: {} };\r\n        }\r\n      }\r\n      return this.compile(controlPointerArray);\r\n    }\r\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\r\n  }\r\n\r\n  /**\r\n   * 'toSchemaPointer' function\r\n   *\r\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\r\n   * for that object.\r\n   *\r\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\r\n   *\r\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\r\n   * //   schema - JSON schema for the object\r\n   * // { Pointer } - JSON Pointer (string) to the object's schema\r\n   */\r\n  static toSchemaPointer(dataPointer, schema) {\r\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\r\n      const pointerArray = this.parse(dataPointer);\r\n      if (!pointerArray.length) { return ''; }\r\n      const firstKey = pointerArray.shift();\r\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\r\n        if ((schema.properties || {})[firstKey]) {\r\n          return `/properties/${this.escape(firstKey)}` +\r\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\r\n        } else  if (schema.additionalProperties) {\r\n          return '/additionalProperties' +\r\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\r\n        }\r\n      }\r\n      if ((schema.type === 'array' || schema.items) &&\r\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\r\n      ) {\r\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\r\n        if (isArray(schema.items)) {\r\n          if (arrayItem < schema.items.length) {\r\n            return '/items/' + arrayItem +\r\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\r\n          } else if (schema.additionalItems) {\r\n            return '/additionalItems' +\r\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\r\n          }\r\n        } else if (isObject(schema.items)) {\r\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\r\n        } else if (isObject(schema.additionalItems)) {\r\n          return '/additionalItems' +\r\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\r\n        }\r\n      }\r\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\r\n        `not compatible with schema ${schema}`);\r\n      return null;\r\n    }\r\n    if (!this.isJsonPointer(dataPointer)) {\r\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\r\n    }\r\n    if (typeof schema !== 'object') {\r\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 'toDataPointer' function\r\n   *\r\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\r\n   *\r\n   * If possible, returns a generic Pointer to the corresponding value inside\r\n   * the data object described by the JSON schema.\r\n   *\r\n   * Returns null if the sub-schema is in an ambiguous location (such as\r\n   * definitions or additionalProperties) where the corresponding value\r\n   * location cannot be determined.\r\n   *\r\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\r\n   * //   schema - the JSON schema\r\n   * //  { boolean = false } errors - Show errors?\r\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\r\n   */\r\n  static toDataPointer(schemaPointer, schema, errors = false) {\r\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\r\n      this.has(schema, schemaPointer)\r\n    ) {\r\n      const pointerArray = this.parse(schemaPointer);\r\n      if (!pointerArray.length) { return ''; }\r\n      const firstKey = pointerArray.shift();\r\n      if (firstKey === 'properties' ||\r\n        (firstKey === 'items' && isArray(schema.items))\r\n      ) {\r\n        const secondKey = pointerArray.shift();\r\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\r\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\r\n      } else if (firstKey === 'additionalItems' ||\r\n        (firstKey === 'items' && isObject(schema.items))\r\n      ) {\r\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\r\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\r\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\r\n        const secondKey = pointerArray.shift();\r\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\r\n      } else if (firstKey === 'not') {\r\n        return this.toDataPointer(pointerArray, schema[firstKey]);\r\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\r\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\r\n      ) {\r\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\r\n      }\r\n      return '';\r\n    }\r\n    if (errors) {\r\n      if (!this.isJsonPointer(schemaPointer)) {\r\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\r\n      }\r\n      if (typeof schema !== 'object') {\r\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\r\n      }\r\n      if (typeof schema !== 'object') {\r\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 'parseObjectPath' function\r\n   *\r\n   * Parses a JavaScript object path into an array of keys, which\r\n   * can then be passed to compile() to convert into a string JSON Pointer.\r\n   *\r\n   * Based on mike-marcacci's excellent objectpath parse function:\r\n   * https://github.com/mike-marcacci/objectpath\r\n   *\r\n   * //  { Pointer } path - The object path to parse\r\n   * // { string[] } - The resulting array of keys\r\n   */\r\n  static parseObjectPath(path) {\r\n    if (isArray(path)) { return <string[]>path; }\r\n    if (this.isJsonPointer(path)) { return this.parse(path); }\r\n    if (typeof path === 'string') {\r\n      let index = 0;\r\n      const parts: string[] = [];\r\n      while (index < path.length) {\r\n        const nextDot = path.indexOf('.', index);\r\n        const nextOB = path.indexOf('[', index); // next open bracket\r\n        if (nextDot === -1 && nextOB === -1) { // last item\r\n          parts.push(path.slice(index));\r\n          index = path.length;\r\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\r\n          parts.push(path.slice(index, nextDot));\r\n          index = nextDot + 1;\r\n        } else { // bracket notation\r\n          if (nextOB > index) {\r\n            parts.push(path.slice(index, nextOB));\r\n            index = nextOB;\r\n          }\r\n          const quote = path.charAt(nextOB + 1);\r\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\r\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\r\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\r\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\r\n            }\r\n            if (nextCB === -1) { nextCB = path.length; }\r\n            parts.push(path.slice(index + 2, nextCB)\r\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\r\n            index = nextCB + 2;\r\n          } else { // no enclosing quotes\r\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\r\n            if (nextCB === -1) { nextCB = path.length; }\r\n            parts.push(path.slice(index + 1, nextCB));\r\n            index = nextCB + 1;\r\n          }\r\n          if (path.charAt(index) === '.') { index++; }\r\n        }\r\n      }\r\n      return parts;\r\n    }\r\n    console.error('parseObjectPath error: Input object path must be a string.');\r\n  }\r\n}\r\n","import _ from 'lodash';\r\n\r\nimport {\r\n  isArray, isEmpty, isNumber, isObject, isString\r\n} from './validator.functions';\r\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\r\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\r\n\r\n/**\r\n * 'mergeSchemas' function\r\n *\r\n * Merges multiple JSON schemas into a single schema with combined rules.\r\n *\r\n * If able to logically merge properties from all schemas,\r\n * returns a single schema object containing all merged properties.\r\n *\r\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\r\n *\r\n * If unable to logically merge, returns an allOf schema object containing\r\n * an array of the original schemas;\r\n *\r\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\r\n *\r\n * //   schemas - one or more input schemas\r\n * //  - merged schema\r\n */\r\nexport function mergeSchemas(...schemas) {\r\n  schemas = schemas.filter(schema => !isEmpty(schema));\r\n  if (schemas.some(schema => !isObject(schema))) { return null; }\r\n  const combinedSchema: any = {};\r\n  for (const schema of schemas) {\r\n    for (const key of Object.keys(schema)) {\r\n      const combinedValue = combinedSchema[key];\r\n      const schemaValue = schema[key];\r\n      if (!hasOwn(combinedSchema, key) || _.isEqual(combinedValue, schemaValue)) {\r\n        combinedSchema[key] = schemaValue;\r\n      } else {\r\n        switch (key) {\r\n          case 'allOf':\r\n            // Combine all items from both arrays\r\n            if (isArray(combinedValue) && isArray(schemaValue)) {\r\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'additionalItems': case 'additionalProperties':\r\n          case 'contains': case 'propertyNames':\r\n            // Merge schema objects\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\r\n            // additionalProperties == false in any schema overrides all other values\r\n            } else if (\r\n              key === 'additionalProperties' &&\r\n              (combinedValue === false || schemaValue === false)\r\n            ) {\r\n              combinedSchema.combinedSchema = false;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'anyOf': case 'oneOf': case 'enum':\r\n            // Keep only items that appear in both arrays\r\n            if (isArray(combinedValue) && isArray(schemaValue)) {\r\n              combinedSchema[key] = combinedValue.filter(item1 =>\r\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\r\n              );\r\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'definitions':\r\n            // Combine keys from both objects\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              const combinedObject = { ...combinedValue };\r\n              for (const subKey of Object.keys(schemaValue)) {\r\n                if (!hasOwn(combinedObject, subKey) ||\r\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\r\n                ) {\r\n                  combinedObject[subKey] = schemaValue[subKey];\r\n                // Don't combine matching keys with different values\r\n                } else {\r\n                  return { allOf: [ ...schemas ] };\r\n                }\r\n              }\r\n              combinedSchema.definitions = combinedObject;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'dependencies':\r\n            // Combine all keys from both objects\r\n            // and merge schemas on matching keys,\r\n            // converting from arrays to objects if necessary\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              const combinedObject = { ...combinedValue };\r\n              for (const subKey of Object.keys(schemaValue)) {\r\n                if (!hasOwn(combinedObject, subKey) ||\r\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\r\n                ) {\r\n                  combinedObject[subKey] = schemaValue[subKey];\r\n                // If both keys are arrays, include all items from both arrays,\r\n                // excluding duplicates\r\n                } else if (\r\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\r\n                ) {\r\n                  combinedObject[subKey] =\r\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\r\n                // If either key is an object, merge the schemas\r\n                } else if (\r\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\r\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\r\n                ) {\r\n                  // If either key is an array, convert it to an object first\r\n                  const required = isArray(combinedSchema.required) ?\r\n                    combinedSchema.required : [];\r\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\r\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\r\n                    combinedObject[subKey];\r\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\r\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\r\n                    schemaValue[subKey];\r\n                  combinedObject[subKey] =\r\n                    mergeSchemas(combinedDependency, schemaDependency);\r\n                } else {\r\n                  return { allOf: [ ...schemas ] };\r\n                }\r\n              }\r\n              combinedSchema.dependencies = combinedObject;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'items':\r\n            // If arrays, keep only items that appear in both arrays\r\n            if (isArray(combinedValue) && isArray(schemaValue)) {\r\n              combinedSchema.items = combinedValue.filter(item1 =>\r\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\r\n              );\r\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\r\n            // If both keys are objects, merge them\r\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\r\n            // If object + array, combine object with each array item\r\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\r\n              combinedSchema.items =\r\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\r\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\r\n              combinedSchema.items =\r\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'multipleOf':\r\n            // TODO: Adjust to correctly handle decimal values\r\n            // If numbers, set to least common multiple\r\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\r\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\r\n              const lcm = (x, y) => (x * y) / gcd(x, y);\r\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\r\n          case 'maxItems': case 'maxProperties':\r\n            // If numbers, set to lowest value\r\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\r\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\r\n          case 'minItems': case 'minProperties':\r\n            // If numbers, set to highest value\r\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\r\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'not':\r\n            // Combine not values into anyOf array\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              const notAnyOf = [combinedValue, schemaValue]\r\n                .reduce((notAnyOfArray, notSchema) =>\r\n                  isArray(notSchema.anyOf) &&\r\n                  Object.keys(notSchema).length === 1 ?\r\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\r\n                    [ ...notAnyOfArray, notSchema ]\r\n                , []);\r\n              // TODO: Remove duplicate items from array\r\n              combinedSchema.not = { anyOf: notAnyOf };\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'patternProperties':\r\n            // Combine all keys from both objects\r\n            // and merge schemas on matching keys\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              const combinedObject = { ...combinedValue };\r\n              for (const subKey of Object.keys(schemaValue)) {\r\n                if (!hasOwn(combinedObject, subKey) ||\r\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\r\n                ) {\r\n                  combinedObject[subKey] = schemaValue[subKey];\r\n                // If both keys are objects, merge them\r\n                } else if (\r\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\r\n                ) {\r\n                  combinedObject[subKey] =\r\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\r\n                } else {\r\n                  return { allOf: [ ...schemas ] };\r\n                }\r\n              }\r\n              combinedSchema.patternProperties = combinedObject;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'properties':\r\n            // Combine all keys from both objects\r\n            // unless additionalProperties === false\r\n            // and merge schemas on matching keys\r\n            if (isObject(combinedValue) && isObject(schemaValue)) {\r\n              const combinedObject = { ...combinedValue };\r\n              // If new schema has additionalProperties,\r\n              // merge or remove non-matching property keys in combined schema\r\n              if (hasOwn(schemaValue, 'additionalProperties')) {\r\n                Object.keys(combinedValue)\r\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\r\n                  .forEach(nonMatchingKey => {\r\n                    if (schemaValue.additionalProperties === false) {\r\n                      delete combinedObject[nonMatchingKey];\r\n                    } else if (isObject(schemaValue.additionalProperties)) {\r\n                      combinedObject[nonMatchingKey] = mergeSchemas(\r\n                        combinedObject[nonMatchingKey],\r\n                        schemaValue.additionalProperties\r\n                      );\r\n                    }\r\n                  });\r\n              }\r\n              for (const subKey of Object.keys(schemaValue)) {\r\n                if (_.isEqual(combinedObject[subKey], schemaValue[subKey]) || (\r\n                  !hasOwn(combinedObject, subKey) &&\r\n                  !hasOwn(combinedObject, 'additionalProperties')\r\n                )) {\r\n                  combinedObject[subKey] = schemaValue[subKey];\r\n                // If combined schema has additionalProperties,\r\n                // merge or ignore non-matching property keys in new schema\r\n                } else if (\r\n                  !hasOwn(combinedObject, subKey) &&\r\n                  hasOwn(combinedObject, 'additionalProperties')\r\n                ) {\r\n                  // If combinedObject.additionalProperties === false,\r\n                  // do nothing (don't set key)\r\n                  // If additionalProperties is object, merge with new key\r\n                  if (isObject(combinedObject.additionalProperties)) {\r\n                    combinedObject[subKey] = mergeSchemas(\r\n                      combinedObject.additionalProperties, schemaValue[subKey]\r\n                    );\r\n                  }\r\n                // If both keys are objects, merge them\r\n                } else if (\r\n                  isObject(schemaValue[subKey]) &&\r\n                  isObject(combinedObject[subKey])\r\n                ) {\r\n                  combinedObject[subKey] =\r\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\r\n                } else {\r\n                  return { allOf: [ ...schemas ] };\r\n                }\r\n              }\r\n              combinedSchema.properties = combinedObject;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'required':\r\n            // If arrays, include all items from both arrays, excluding duplicates\r\n            if (isArray(combinedValue) && isArray(schemaValue)) {\r\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\r\n            // If booleans, aet true if either true\r\n            } else if (\r\n              typeof schemaValue === 'boolean' &&\r\n              typeof combinedValue === 'boolean'\r\n            ) {\r\n              combinedSchema.required = !!combinedValue || !!schemaValue;\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case '$schema': case '$id': case 'id':\r\n            // Don't combine these keys\r\n          break;\r\n          case 'title': case 'description':\r\n            // Return the last value, overwriting any previous one\r\n            // These properties are not used for validation, so conflicts don't matter\r\n            combinedSchema[key] = schemaValue;\r\n          break;\r\n          case 'type':\r\n            if (\r\n              (isArray(schemaValue) || isString(schemaValue)) &&\r\n              (isArray(combinedValue) || isString(combinedValue))\r\n            ) {\r\n              const combinedTypes = commonItems(combinedValue, schemaValue);\r\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\r\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\r\n            } else {\r\n              return { allOf: [ ...schemas ] };\r\n            }\r\n          break;\r\n          case 'uniqueItems':\r\n            // Set true if either true\r\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\r\n          break;\r\n          default:\r\n            return { allOf: [ ...schemas ] };\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return combinedSchema;\r\n}\r\n","import _ from 'lodash';\r\nimport { forEach, hasOwn, mergeFilteredObject } from './utility.functions';\r\nimport {\r\n  getType,\r\n  hasValue,\r\n  inArray,\r\n  isArray,\r\n  isNumber,\r\n  isObject,\r\n  isString\r\n  } from './validator.functions';\r\nimport { JsonPointer } from './jsonpointer.functions';\r\nimport { mergeSchemas } from './merge-schemas.function';\r\n\r\n\r\n/**\r\n * JSON Schema function library:\r\n *\r\n * buildSchemaFromLayout:   TODO: Write this function\r\n *\r\n * buildSchemaFromData:\r\n *\r\n * getFromSchema:\r\n *\r\n * removeRecursiveReferences:\r\n *\r\n * getInputType:\r\n *\r\n * checkInlineType:\r\n *\r\n * isInputRequired:\r\n *\r\n * updateInputOptions:\r\n *\r\n * getTitleMapFromOneOf:\r\n *\r\n * getControlValidators:\r\n *\r\n * resolveSchemaReferences:\r\n *\r\n * getSubSchema:\r\n *\r\n * combineAllOf:\r\n *\r\n * fixRequiredArrayProperties:\r\n */\r\n\r\n/**\r\n * 'buildSchemaFromLayout' function\r\n *\r\n * TODO: Build a JSON Schema from a JSON Form layout\r\n *\r\n * //   layout - The JSON Form layout\r\n * //  - The new JSON Schema\r\n */\r\nexport function buildSchemaFromLayout(layout) {\r\n  return;\r\n  // let newSchema: any = { };\r\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\r\n  //   let returnArray: any[] = [];\r\n  //   for (let layoutItem of layoutItems) {\r\n  //     const returnItem: any = callback(layoutItem);\r\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\r\n  //     if (layoutItem.items) {\r\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\r\n  //     }\r\n  //   }\r\n  //   return returnArray;\r\n  // };\r\n  // walkLayout(layout, layoutItem => {\r\n  //   let itemKey: string;\r\n  //   if (typeof layoutItem === 'string') {\r\n  //     itemKey = layoutItem;\r\n  //   } else if (layoutItem.key) {\r\n  //     itemKey = layoutItem.key;\r\n  //   }\r\n  //   if (!itemKey) { return; }\r\n  //   //\r\n  // });\r\n}\r\n\r\n/**\r\n * 'buildSchemaFromData' function\r\n *\r\n * Build a JSON Schema from a data object\r\n *\r\n * //   data - The data object\r\n * //  { boolean = false } requireAllFields - Require all fields?\r\n * //  { boolean = true } isRoot - is root\r\n * //  - The new JSON Schema\r\n */\r\nexport function buildSchemaFromData(\r\n  data, requireAllFields = false, isRoot = true\r\n) {\r\n  const newSchema: any = {};\r\n  const getFieldType = (value: any): string => {\r\n    const fieldType = getType(value, 'strict');\r\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\r\n  };\r\n  const buildSubSchema = (value) =>\r\n    buildSchemaFromData(value, requireAllFields, false);\r\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\r\n  newSchema.type = getFieldType(data);\r\n  if (newSchema.type === 'object') {\r\n    newSchema.properties = {};\r\n    if (requireAllFields) { newSchema.required = []; }\r\n    for (const key of Object.keys(data)) {\r\n      newSchema.properties[key] = buildSubSchema(data[key]);\r\n      if (requireAllFields) { newSchema.required.push(key); }\r\n    }\r\n  } else if (newSchema.type === 'array') {\r\n    newSchema.items = data.map(buildSubSchema);\r\n    // If all items are the same type, use an object for items instead of an array\r\n    if ((new Set(data.map(getFieldType))).size === 1) {\r\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\r\n    }\r\n    if (requireAllFields) { newSchema.minItems = 1; }\r\n  }\r\n  return newSchema;\r\n}\r\n\r\n/**\r\n * 'getFromSchema' function\r\n *\r\n * Uses a JSON Pointer for a value within a data object to retrieve\r\n * the schema for that value within schema for the data object.\r\n *\r\n * The optional third parameter can also be set to return something else:\r\n * 'schema' (default): the schema for the value indicated by the data pointer\r\n * 'parentSchema': the schema for the value's parent object or array\r\n * 'schemaPointer': a pointer to the value's schema within the object's schema\r\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\r\n *\r\n * //   schema - The schema to get the sub-schema from\r\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\r\n * //  { string = 'schema' } returnType - what to return?\r\n * //  - The located sub-schema\r\n */\r\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\r\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\r\n  if (dataPointerArray === null) {\r\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\r\n    return null;\r\n  }\r\n  let subSchema = schema;\r\n  const schemaPointer = [];\r\n  const length = dataPointerArray.length;\r\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\r\n  for (let i = 0; i < length; ++i) {\r\n    const parentSchema = subSchema;\r\n    const key = dataPointerArray[i];\r\n    let subSchemaFound = false;\r\n    if (typeof subSchema !== 'object') {\r\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\r\n      console.error(schema);\r\n      console.error(dataPointer);\r\n      return null;\r\n    }\r\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\r\n      if (hasOwn(subSchema, 'items')) {\r\n        if (isObject(subSchema.items)) {\r\n          subSchemaFound = true;\r\n          subSchema = subSchema.items;\r\n          schemaPointer.push('items');\r\n        } else if (isArray(subSchema.items)) {\r\n          if (!isNaN(key) && subSchema.items.length >= +key) {\r\n            subSchemaFound = true;\r\n            subSchema = subSchema.items[+key];\r\n            schemaPointer.push('items', key);\r\n          }\r\n        }\r\n      }\r\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\r\n        subSchemaFound = true;\r\n        subSchema = subSchema.additionalItems;\r\n        schemaPointer.push('additionalItems');\r\n      } else if (subSchema.additionalItems !== false) {\r\n        subSchemaFound = true;\r\n        subSchema = { };\r\n        schemaPointer.push('additionalItems');\r\n      }\r\n    } else if (subSchema.type === 'object') {\r\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\r\n        subSchemaFound = true;\r\n        subSchema = subSchema.properties[key];\r\n        schemaPointer.push('properties', key);\r\n      } else if (isObject(subSchema.additionalProperties)) {\r\n        subSchemaFound = true;\r\n        subSchema = subSchema.additionalProperties;\r\n        schemaPointer.push('additionalProperties');\r\n      } else if (subSchema.additionalProperties !== false) {\r\n        subSchemaFound = true;\r\n        subSchema = { };\r\n        schemaPointer.push('additionalProperties');\r\n      }\r\n    }\r\n    if (!subSchemaFound) {\r\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\r\n      console.error(schema);\r\n      console.error(dataPointer);\r\n      return;\r\n    }\r\n  }\r\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\r\n}\r\n\r\n/**\r\n * 'removeRecursiveReferences' function\r\n *\r\n * Checks a JSON Pointer against a map of recursive references and returns\r\n * a JSON Pointer to the shallowest equivalent location in the same object.\r\n *\r\n * Using this functions enables an object to be constructed with unlimited\r\n * recursion, while maintaing a fixed set of metadata, such as field data types.\r\n * The object can grow as large as it wants, and deeply recursed nodes can\r\n * just refer to the metadata for their shallow equivalents, instead of having\r\n * to add additional redundant metadata for each recursively added node.\r\n *\r\n * Example:\r\n *\r\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\r\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\r\n * returned:        '/stuff/and/more/stuff'\r\n *\r\n * //  { Pointer } pointer -\r\n * //  { Map<string, string> } recursiveRefMap -\r\n * //  { Map<string, number> = new Map() } arrayMap - optional\r\n * // { string } -\r\n */\r\nexport function removeRecursiveReferences(\r\n  pointer, recursiveRefMap, arrayMap = new Map()\r\n) {\r\n  if (!pointer) { return ''; }\r\n  let genericPointer =\r\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\r\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\r\n  let possibleReferences = true;\r\n  while (possibleReferences) {\r\n    possibleReferences = false;\r\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\r\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\r\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\r\n          genericPointer = JsonPointer.toGenericPointer(\r\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\r\n          );\r\n          possibleReferences = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return genericPointer;\r\n}\r\n\r\n/**\r\n * 'getInputType' function\r\n *\r\n * //   schema\r\n * //  { any = null } layoutNode\r\n * // { string }\r\n */\r\nexport function getInputType(schema, layoutNode: any = null) {\r\n  // x-schema-form = Angular Schema Form compatibility\r\n  // widget & component = React Jsonschema Form compatibility\r\n  const controlType = JsonPointer.getFirst([\r\n    [schema, '/x-schema-form/type'],\r\n    [schema, '/x-schema-form/widget/component'],\r\n    [schema, '/x-schema-form/widget'],\r\n    [schema, '/widget/component'],\r\n    [schema, '/widget']\r\n  ]);\r\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\r\n  let schemaType = schema.type;\r\n  if (schemaType) {\r\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\r\n      schemaType =\r\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\r\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\r\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\r\n        inArray('string', schemaType) ? 'string' :\r\n        inArray('number', schemaType) ? 'number' :\r\n        inArray('integer', schemaType) ? 'integer' :\r\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\r\n    }\r\n    if (schemaType === 'boolean') { return 'checkbox'; }\r\n    if (schemaType === 'object') {\r\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\r\n        return 'section';\r\n      }\r\n      // TODO: Figure out how to handle additionalProperties\r\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\r\n    }\r\n    if (schemaType === 'array') {\r\n      const itemsObject = JsonPointer.getFirst([\r\n        [schema, '/items'],\r\n        [schema, '/additionalItems']\r\n      ]) || {};\r\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\r\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\r\n    }\r\n    if (schemaType === 'null') { return 'none'; }\r\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\r\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\r\n    ) { return 'select'; }\r\n    if (schemaType === 'number' || schemaType === 'integer') {\r\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\r\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\r\n    }\r\n    if (schemaType === 'string') {\r\n      return {\r\n        'color': 'color',\r\n        'date': 'date',\r\n        'date-time': 'datetime-local',\r\n        'email': 'email',\r\n        'uri': 'url',\r\n      }[schema.format] || 'text';\r\n    }\r\n  }\r\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\r\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\r\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\r\n  console.error('schema', schema);\r\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\r\n  return 'none';\r\n}\r\n\r\n/**\r\n * 'checkInlineType' function\r\n *\r\n * Checks layout and schema nodes for 'inline: true', and converts\r\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\r\n *\r\n * //  { string } controlType -\r\n * //   schema -\r\n * //  { any = null } layoutNode -\r\n * // { string }\r\n */\r\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\r\n  if (!isString(controlType) || (\r\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\r\n  )) {\r\n    return controlType;\r\n  }\r\n  if (\r\n    JsonPointer.getFirst([\r\n      [layoutNode, '/inline'],\r\n      [layoutNode, '/options/inline'],\r\n      [schema, '/inline'],\r\n      [schema, '/x-schema-form/inline'],\r\n      [schema, '/x-schema-form/options/inline'],\r\n      [schema, '/x-schema-form/widget/inline'],\r\n      [schema, '/x-schema-form/widget/component/inline'],\r\n      [schema, '/x-schema-form/widget/component/options/inline'],\r\n      [schema, '/widget/inline'],\r\n      [schema, '/widget/component/inline'],\r\n      [schema, '/widget/component/options/inline'],\r\n    ]) === true\r\n  ) {\r\n    return controlType.slice(0, 5) === 'radio' ?\r\n      'radios-inline' : 'checkboxes-inline';\r\n  } else {\r\n    return controlType;\r\n  }\r\n}\r\n\r\n/**\r\n * 'isInputRequired' function\r\n *\r\n * Checks a JSON Schema to see if an item is required\r\n *\r\n * //   schema - the schema to check\r\n * //  { string } schemaPointer - the pointer to the item to check\r\n * // { boolean } - true if the item is required, false if not\r\n */\r\nexport function isInputRequired(schema, schemaPointer) {\r\n  if (!isObject(schema)) {\r\n    console.error('isInputRequired error: Input schema must be an object.');\r\n    return false;\r\n  }\r\n  const listPointerArray = JsonPointer.parse(schemaPointer);\r\n  if (isArray(listPointerArray)) {\r\n    if (!listPointerArray.length) { return schema.required === true; }\r\n    const keyName = listPointerArray.pop();\r\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\r\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\r\n      .includes(nextToLastKey)\r\n    ) {\r\n      listPointerArray.pop();\r\n    }\r\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\r\n    if (isArray(parentSchema.required)) {\r\n      return parentSchema.required.includes(keyName);\r\n    }\r\n    if (parentSchema.type === 'array') {\r\n      return hasOwn(parentSchema, 'minItems') &&\r\n        isNumber(keyName) &&\r\n        +parentSchema.minItems > +keyName;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * 'updateInputOptions' function\r\n *\r\n * //   layoutNode\r\n * //   schema\r\n * //   jsf\r\n * // { void }\r\n */\r\nexport function updateInputOptions(layoutNode, schema, jsf) {\r\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\r\n\r\n  // Set all option values in layoutNode.options\r\n  const newOptions: any = { };\r\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\r\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\r\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\r\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\r\n    [ schema, [\r\n      'additionalProperties', 'additionalItems', 'properties', 'items',\r\n      'required', 'type', 'x-schema-form', '$ref'\r\n    ] ],\r\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\r\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\r\n    [ layoutNode, [\r\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\r\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\r\n    ] ],\r\n    [ layoutNode.options, [] ],\r\n  ].forEach(([ object, excludeKeys ]) =>\r\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\r\n  );\r\n  if (!hasOwn(newOptions, 'titleMap')) {\r\n    let newTitleMap: any = null;\r\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\r\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\r\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\r\n      if (JsonPointer.has(schema, '/items/titleMap')) {\r\n        newOptions.titleMap = schema.items.titleMap;\r\n      } else if (JsonPointer.has(schema, '/items/enum')) {\r\n        newOptions.enum = schema.items.enum;\r\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\r\n          newOptions.enumNames = schema.items.enumNames;\r\n        }\r\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\r\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\r\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If schema type is integer, enforce by setting multipleOf = 1\r\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\r\n    newOptions.multipleOf = 1;\r\n  }\r\n\r\n  // Copy any typeahead word lists to options.typeahead.source\r\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\r\n    newOptions.typeahead = newOptions.autocomplete;\r\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\r\n    newOptions.typeahead = newOptions.tagsinput;\r\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\r\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\r\n  }\r\n\r\n  layoutNode.options = newOptions;\r\n}\r\n\r\n/**\r\n * 'getTitleMapFromOneOf' function\r\n *\r\n * //  { schema } schema\r\n * //  { boolean = null } flatList\r\n * //  { boolean = false } validateOnly\r\n * // { validators }\r\n */\r\nexport function getTitleMapFromOneOf(\r\n  schema: any = {}, flatList: boolean = null, validateOnly = false\r\n) {\r\n  let titleMap = null;\r\n  const oneOf = schema.oneOf || schema.anyOf || null;\r\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\r\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\r\n      if (validateOnly) { return true; }\r\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\r\n    } else if (oneOf.every(item => item.const)) {\r\n      if (validateOnly) { return true; }\r\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\r\n    }\r\n\r\n    // if flatList !== false and some items have colons, make grouped map\r\n    if (flatList !== false && (titleMap || [])\r\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\r\n    ) {\r\n\r\n      // Split name on first colon to create grouped map (name -> group: name)\r\n      const newTitleMap = titleMap.map(title => {\r\n        const [group, name] = title.name.split(/: (.+)/);\r\n        return group && name ? { ...title, group, name } : title;\r\n      });\r\n\r\n      // If flatList === true or at least one group has multiple items, use grouped map\r\n      if (flatList === true || newTitleMap.some((title, index) => index &&\r\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\r\n      )) {\r\n        titleMap = newTitleMap;\r\n      }\r\n    }\r\n  }\r\n  return validateOnly ? false : titleMap;\r\n}\r\n\r\n/**\r\n * 'getControlValidators' function\r\n *\r\n * //  schema\r\n * // { validators }\r\n */\r\nexport function getControlValidators(schema) {\r\n  if (!isObject(schema)) { return null; }\r\n  const validators: any = { };\r\n  if (hasOwn(schema, 'type')) {\r\n    switch (schema.type) {\r\n      case 'string':\r\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\r\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\r\n        });\r\n      break;\r\n      case 'number': case 'integer':\r\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\r\n          const eLimit = 'exclusive' + ucLimit;\r\n          const limit = ucLimit.toLowerCase();\r\n          if (hasOwn(schema, limit)) {\r\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\r\n            validators[limit] = [schema[limit], exclusive];\r\n          }\r\n        });\r\n        forEach(['multipleOf', 'type'], (prop) => {\r\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\r\n        });\r\n      break;\r\n      case 'object':\r\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\r\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\r\n        });\r\n      break;\r\n      case 'array':\r\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\r\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\r\n        });\r\n      break;\r\n    }\r\n  }\r\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\r\n  return validators;\r\n}\r\n\r\n/**\r\n * 'resolveSchemaReferences' function\r\n *\r\n * Find all $ref links in schema and save links and referenced schemas in\r\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\r\n *\r\n * //  schema\r\n * //  schemaRefLibrary\r\n * // { Map<string, string> } schemaRecursiveRefMap\r\n * // { Map<string, string> } dataRecursiveRefMap\r\n * // { Map<string, number> } arrayMap\r\n * //\r\n */\r\nexport function resolveSchemaReferences(\r\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\r\n) {\r\n  if (!isObject(schema)) {\r\n    console.error('resolveSchemaReferences error: schema must be an object.');\r\n    return;\r\n  }\r\n  const refLinks = new Set<string>();\r\n  const refMapSet = new Set<string>();\r\n  const refMap = new Map<string, string>();\r\n  const recursiveRefMap = new Map<string, string>();\r\n  const refLibrary: any = {};\r\n\r\n  // Search schema for all $ref links, and build full refLibrary\r\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\r\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\r\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\r\n      refLinks.add(refPointer);\r\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\r\n      refMap.set(subSchemaPointer, refPointer);\r\n    }\r\n  });\r\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\r\n\r\n  // Follow all ref links and save in refMapSet,\r\n  // to find any multi-link recursive refernces\r\n  let checkRefLinks = true;\r\n  while (checkRefLinks) {\r\n    checkRefLinks = false;\r\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\r\n      .filter(([fromRef2, toRef2]) =>\r\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\r\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\r\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\r\n      )\r\n      .forEach(([fromRef2, toRef2]) => {\r\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\r\n        checkRefLinks = true;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Build full recursiveRefMap\r\n  // First pass - save all internally recursive refs from refMapSet\r\n  Array.from(refMapSet)\r\n    .map(refLink => refLink.split('~~'))\r\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\r\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\r\n  // Second pass - create recursive versions of any other refs that link to recursive refs\r\n  Array.from(refMap)\r\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\r\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\r\n    )\r\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\r\n      .filter(([fromRef2, toRef2]) =>\r\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\r\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\r\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\r\n      )\r\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\r\n        fromRef1 + fromRef2.slice(toRef1.length),\r\n        fromRef1 + toRef2.slice(toRef1.length)\r\n      ))\r\n    );\r\n\r\n  // Create compiled schema by replacing all non-recursive $ref links with\r\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\r\n  let compiledSchema = { ...schema };\r\n  delete compiledSchema.definitions;\r\n  compiledSchema =\r\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\r\n\r\n  // Make sure all remaining schema $refs are recursive, and build final\r\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\r\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\r\n    if (isString(subSchema['$ref'])) {\r\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\r\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\r\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\r\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\r\n      }\r\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\r\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\r\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\r\n      }\r\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\r\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\r\n      }\r\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\r\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\r\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\r\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\r\n      }\r\n    }\r\n    if (subSchema.type === 'array' &&\r\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\r\n    ) {\r\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\r\n      if (!arrayMap.has(dataPointer)) {\r\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\r\n        arrayMap.set(dataPointer, tupleItems);\r\n      }\r\n    }\r\n  }, true);\r\n  return compiledSchema;\r\n}\r\n\r\n/**\r\n * 'getSubSchema' function\r\n *\r\n * //   schema\r\n * //  { Pointer } pointer\r\n * //  { object } schemaRefLibrary\r\n * //  { Map<string, string> } schemaRecursiveRefMap\r\n * //  { string[] = [] } usedPointers\r\n * //\r\n */\r\nexport function getSubSchema(\r\n  schema, pointer, schemaRefLibrary = null,\r\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\r\n) {\r\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\r\n    return JsonPointer.getCopy(schema, pointer);\r\n  }\r\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\r\n  usedPointers = [ ...usedPointers, pointer ];\r\n  let newSchema: any = null;\r\n  if (pointer === '') {\r\n    newSchema = _.cloneDeep(schema);\r\n  } else {\r\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\r\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\r\n    newSchema = JsonPointer.getFirstCopy([\r\n      [schemaRefLibrary, [shortPointer]],\r\n      [schema, pointer],\r\n      [schema, shortPointer]\r\n    ]);\r\n  }\r\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\r\n    if (isObject(subSchema)) {\r\n\r\n      // Replace non-recursive $ref links with referenced schemas\r\n      if (isString(subSchema.$ref)) {\r\n        const refPointer = JsonPointer.compile(subSchema.$ref);\r\n        if (refPointer.length && usedPointers.every(ptr =>\r\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\r\n        )) {\r\n          const refSchema = getSubSchema(\r\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\r\n          );\r\n          if (Object.keys(subSchema).length === 1) {\r\n            return refSchema;\r\n          } else {\r\n            const extraKeys = { ...subSchema };\r\n            delete extraKeys.$ref;\r\n            return mergeSchemas(refSchema, extraKeys);\r\n          }\r\n        }\r\n      }\r\n\r\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\r\n\r\n      // Combine allOf subSchemas\r\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\r\n\r\n      // Fix incorrectly placed array object required lists\r\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\r\n        return fixRequiredArrayProperties(subSchema);\r\n      }\r\n    }\r\n    return subSchema;\r\n  }, true, <string>pointer);\r\n}\r\n\r\n/**\r\n * 'combineAllOf' function\r\n *\r\n * Attempt to convert an allOf schema object into\r\n * a non-allOf schema object with equivalent rules.\r\n *\r\n * //   schema - allOf schema object\r\n * //  - converted schema object\r\n */\r\nexport function combineAllOf(schema) {\r\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\r\n  let mergedSchema = mergeSchemas(...schema.allOf);\r\n  if (Object.keys(schema).length > 1) {\r\n    const extraKeys = { ...schema };\r\n    delete extraKeys.allOf;\r\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\r\n  }\r\n  return mergedSchema;\r\n}\r\n\r\n/**\r\n * 'fixRequiredArrayProperties' function\r\n *\r\n * Fixes an incorrectly placed required list inside an array schema, by moving\r\n * it into items.properties or additionalItems.properties, where it belongs.\r\n *\r\n * //   schema - allOf schema object\r\n * //  - converted schema object\r\n */\r\nexport function fixRequiredArrayProperties(schema) {\r\n  if (schema.type === 'array' && isArray(schema.required)) {\r\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\r\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\r\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\r\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\r\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\r\n    )) {\r\n      schema = _.cloneDeep(schema);\r\n      schema[itemsObject].required = schema.required;\r\n      delete schema.required;\r\n    }\r\n  }\r\n  return schema;\r\n}\r\n","// updated from AJV fast format regular expressions:\r\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\r\n\r\nexport const jsonSchemaFormatTests = {\r\n\r\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\r\n\r\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\r\n\r\n  // Modified to allow incomplete entries, such as\r\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\r\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\r\n\r\n  // email (sources from jsen validator):\r\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\r\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\r\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\r\n\r\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\r\n\r\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\r\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\r\n\r\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\r\n  // tslint:disable-next-line:max-line-length\r\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\r\n\r\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\r\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\r\n\r\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\r\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\r\n\r\n  // uri-template: https://tools.ietf.org/html/rfc6570\r\n  // tslint:disable-next-line:max-line-length\r\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\r\n\r\n  // For the source: https://gist.github.com/dperini/729294\r\n  // For test cases: https://mathiasbynens.be/demo/url-regex\r\n  // tslint:disable-next-line:max-line-length\r\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\r\n  // tslint:disable-next-line:max-line-length\r\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\r\n  // tslint:disable-next-line:max-line-length\r\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\r\n\r\n  // uuid: http://tools.ietf.org/html/rfc4122\r\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\r\n\r\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\r\n  // tslint:disable-next-line:max-line-length\r\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\r\n\r\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\r\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\r\n\r\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\r\n\r\n  'regex': function (str) {\r\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\r\n    try {\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport type JsonSchemaFormatNames =\r\n  'date' | 'time' | 'date-time' | 'email' | 'hostname' | 'ipv4' | 'ipv6' |\r\n  'uri' | 'uri-reference' | 'uri-template' | 'url' | 'uuid' | 'color' |\r\n  'json-pointer' | 'relative-json-pointer' | 'regex';\r\n","import _ from 'lodash';\r\nimport {\r\n  _executeAsyncValidators,\r\n  _executeValidators,\r\n  _mergeErrors,\r\n  _mergeObjects,\r\n  AsyncIValidatorFn,\r\n  getType,\r\n  hasValue,\r\n  isArray,\r\n  isBoolean,\r\n  isDefined,\r\n  isEmpty,\r\n  isNumber,\r\n  isString,\r\n  isType,\r\n  IValidatorFn,\r\n  SchemaPrimitiveType,\r\n  toJavaScriptType,\r\n  toObservable,\r\n  xor\r\n  } from './validator.functions';\r\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { forEachCopy } from './utility.functions';\r\nimport { forkJoin } from 'rxjs';\r\nimport { JsonSchemaFormatNames, jsonSchemaFormatTests } from './format-regex.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n/**\r\n * 'JsonValidators' class\r\n *\r\n * Provides an extended set of validators to be used by form controls,\r\n * compatible with standard JSON Schema validation options.\r\n * http://json-schema.org/latest/json-schema-validation.html\r\n *\r\n * Note: This library is designed as a drop-in replacement for the Angular\r\n * Validators library, and except for one small breaking change to the 'pattern'\r\n * validator (described below) it can even be imported as a substitute, like so:\r\n *\r\n *   import { JsonValidators as Validators } from 'json-validators';\r\n *\r\n * and it should work with existing code as a complete replacement.\r\n *\r\n * The one exception is the 'pattern' validator, which has been changed to\r\n * matche partial values by default (the standard 'pattern' validator wrapped\r\n * all patterns in '^' and '$', forcing them to always match an entire value).\r\n * However, the old behavior can be restored by simply adding '^' and '$'\r\n * around your patterns, or by passing an optional second parameter of TRUE.\r\n * This change is to make the 'pattern' validator match the behavior of a\r\n * JSON Schema pattern, which allows partial matches, rather than the behavior\r\n * of an HTML input control pattern, which does not.\r\n *\r\n * This library replaces Angular's validators and combination functions\r\n * with the following validators and transformation functions:\r\n *\r\n * Validators:\r\n *   For all formControls:     required (*), type, enum, const\r\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\r\n *   For numeric formControls: maximum, exclusiveMaximum,\r\n *                             minimum, exclusiveMinimum, multipleOf\r\n *   For formGroup objects:    minProperties, maxProperties, dependencies\r\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\r\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\r\n * (Validators originally included with Angular are maked with (*).)\r\n *\r\n * NOTE / TODO: The dependencies validator is not complete.\r\n * NOTE / TODO: The contains validator is not complete.\r\n *\r\n * Validators not used by JSON Schema (but included for compatibility)\r\n * and their JSON Schema equivalents:\r\n *\r\n *   Angular validator | JSON Schema equivalent\r\n *   ------------------|-----------------------\r\n *     min(number)     |   minimum(number)\r\n *     max(number)     |   maximum(number)\r\n *     requiredTrue()  |   const(true)\r\n *     email()         |   format('email')\r\n *\r\n * Validator transformation functions:\r\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\r\n * (Angular's original combination funciton, 'compose', is also included for\r\n * backward compatibility, though it is functionally equivalent to composeAllOf,\r\n * asside from its more generic error message.)\r\n *\r\n * All validators have also been extended to accept an optional second argument\r\n * which, if passed a TRUE value, causes the validator to perform the opposite\r\n * of its original finction. (This is used internally to enable 'not' and\r\n * 'composeOneOf' to function and return useful error messages.)\r\n *\r\n * The 'required' validator has also been overloaded so that if called with\r\n * a boolean parameter (or no parameters) it returns the original validator\r\n * function (rather than executing it). However, if it is called with an\r\n * AbstractControl parameter (as was previously required), it behaves\r\n * exactly as before.\r\n *\r\n * This enables all validators (including 'required') to be constructed in\r\n * exactly the same way, so they can be automatically applied using the\r\n * equivalent key names and values taken directly from a JSON Schema.\r\n *\r\n * This source code is partially derived from Angular,\r\n * which is Copyright (c) 2014-2017 Google, Inc.\r\n * Use of this source code is therefore governed by the same MIT-style license\r\n * that can be found in the LICENSE file at https://angular.io/license\r\n *\r\n * Original Angular Validators:\r\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\r\n */\r\nexport class JsonValidators {\r\n\r\n  /**\r\n   * Validator functions:\r\n   *\r\n   * For all formControls:     required, type, enum, const\r\n   * For text formControls:    minLength, maxLength, pattern, format\r\n   * For numeric formControls: maximum, exclusiveMaximum,\r\n   *                           minimum, exclusiveMinimum, multipleOf\r\n   * For formGroup objects:    minProperties, maxProperties, dependencies\r\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\r\n   *\r\n   * TODO: finish dependencies validator\r\n   */\r\n\r\n  /**\r\n   * 'required' validator\r\n   *\r\n   * This validator is overloaded, compared to the default required validator.\r\n   * If called with no parameters, or TRUE, this validator returns the\r\n   * 'required' validator function (rather than executing it). This matches\r\n   * the behavior of all other validators in this library.\r\n   *\r\n   * If this validator is called with an AbstractControl parameter\r\n   * (as was previously required) it behaves the same as Angular's default\r\n   * required validator, and returns an error if the control is empty.\r\n   *\r\n   * Old behavior: (if input type = AbstractControl)\r\n   * // {AbstractControl} control - required control\r\n   * // {{[key: string]: boolean}} - returns error message if no input\r\n   *\r\n   * New behavior: (if no input, or input type = boolean)\r\n   * // {boolean = true} required? - true to validate, false to disable\r\n   * // {IValidatorFn} - returns the 'required' validator function itself\r\n   */\r\n  static required(input: AbstractControl): ValidationErrors|null;\r\n  static required(input?: boolean): IValidatorFn;\r\n\r\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\r\n    if (input === undefined) { input = true; }\r\n    switch (input) {\r\n      case true: // Return required function (do not execute it yet)\r\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n          if (invert) { return null; } // if not required, always return valid\r\n          return hasValue(control.value) ? null : { 'required': true };\r\n        };\r\n      case false: // Do nothing (if field is not required, it is always valid)\r\n        return JsonValidators.nullValidator;\r\n      default: // Execute required function\r\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'type' validator\r\n   *\r\n   * Requires a control to only accept values of a specified type,\r\n   * or one of an array of types.\r\n   *\r\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\r\n   *\r\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\r\n   * // {IValidatorFn}\r\n   */\r\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\r\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue: any = control.value;\r\n      const isValid = isArray(requiredType) ?\r\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\r\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\r\n      return xor(isValid, invert) ?\r\n        null : { 'type': { requiredType, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'enum' validator\r\n   *\r\n   * Requires a control to have a value from an enumerated list of values.\r\n   *\r\n   * Converts types as needed to allow string inputs to still correctly\r\n   * match number, boolean, and null enum values.\r\n   *\r\n   * // {any[]} allowedValues - array of acceptable values\r\n   * // {IValidatorFn}\r\n   */\r\n  static enum(allowedValues: any[]): IValidatorFn {\r\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue: any = control.value;\r\n      const isEqual = (enumValue, inputValue) =>\r\n        enumValue === inputValue ||\r\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\r\n        (isBoolean(enumValue, 'strict') &&\r\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\r\n        (enumValue === null && !hasValue(inputValue)) ||\r\n        _.isEqual(enumValue, inputValue);\r\n      const isValid = isArray(currentValue) ?\r\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\r\n          isEqual(enumValue, inputValue)\r\n        )) :\r\n        allowedValues.some(enumValue => isEqual(enumValue, currentValue));\r\n      return xor(isValid, invert) ?\r\n        null : { 'enum': { allowedValues, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'const' validator\r\n   *\r\n   * Requires a control to have a specific value.\r\n   *\r\n   * Converts types as needed to allow string inputs to still correctly\r\n   * match number, boolean, and null values.\r\n   *\r\n   * TODO: modify to work with objects\r\n   *\r\n   * // {any[]} requiredValue - required value\r\n   * // {IValidatorFn}\r\n   */\r\n  static const(requiredValue: any): IValidatorFn {\r\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue: any = control.value;\r\n      const isEqual = (constValue, inputValue) =>\r\n        constValue === inputValue ||\r\n        isNumber(constValue) && +inputValue === +constValue ||\r\n        isBoolean(constValue, 'strict') &&\r\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\r\n        constValue === null && !hasValue(inputValue);\r\n      const isValid = isEqual(requiredValue, currentValue);\r\n      return xor(isValid, invert) ?\r\n        null : { 'const': { requiredValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'minLength' validator\r\n   *\r\n   * Requires a control's text value to be greater than a specified length.\r\n   *\r\n   * // {number} minimumLength - minimum allowed string length\r\n   * // {boolean = false} invert - instead return error object only if valid\r\n   * // {IValidatorFn}\r\n   */\r\n  static minLength(minimumLength: number): IValidatorFn {\r\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentLength = isString(control.value) ? control.value.length : 0;\r\n      const isValid = currentLength >= minimumLength;\r\n      return xor(isValid, invert) ?\r\n        null : { 'minLength': { minimumLength, currentLength } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'maxLength' validator\r\n   *\r\n   * Requires a control's text value to be less than a specified length.\r\n   *\r\n   * // {number} maximumLength - maximum allowed string length\r\n   * // {boolean = false} invert - instead return error object only if valid\r\n   * // {IValidatorFn}\r\n   */\r\n  static maxLength(maximumLength: number): IValidatorFn {\r\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const currentLength = isString(control.value) ? control.value.length : 0;\r\n      const isValid = currentLength <= maximumLength;\r\n      return xor(isValid, invert) ?\r\n        null : { 'maxLength': { maximumLength, currentLength } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'pattern' validator\r\n   *\r\n   * Note: NOT the same as Angular's default pattern validator.\r\n   *\r\n   * Requires a control's value to match a specified regular expression pattern.\r\n   *\r\n   * This validator changes the behavior of default pattern validator\r\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\r\n   * which allows for partial matches.\r\n   *\r\n   * To return to the default funcitonality, and match the entire string,\r\n   * pass TRUE as the optional second parameter.\r\n   *\r\n   * // {string} pattern - regular expression pattern\r\n   * // {boolean = false} wholeString - match whole value string?\r\n   * // {IValidatorFn}\r\n   */\r\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\r\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      let regex: RegExp;\r\n      let requiredPattern: string;\r\n      if (typeof pattern === 'string') {\r\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\r\n        regex = new RegExp(requiredPattern);\r\n      } else {\r\n        requiredPattern = pattern.toString();\r\n        regex = pattern;\r\n      }\r\n      const currentValue: string = control.value;\r\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\r\n      return xor(isValid, invert) ?\r\n        null : { 'pattern': { requiredPattern, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'format' validator\r\n   *\r\n   * Requires a control to have a value of a certain format.\r\n   *\r\n   * This validator currently checks the following formsts:\r\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\r\n   *   uri, uri-reference, uri-template, url, uuid, color,\r\n   *   json-pointer, relative-json-pointer, regex\r\n   *\r\n   * Fast format regular expressions copied from AJV:\r\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\r\n   *\r\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\r\n   * // {IValidatorFn}\r\n   */\r\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\r\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      let isValid: boolean;\r\n      const currentValue: string|Date = control.value;\r\n      if (isString(currentValue)) {\r\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\r\n        if (typeof formatTest === 'object') {\r\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\r\n        } else if (typeof formatTest === 'function') {\r\n          isValid = (<Function>formatTest)(<string>currentValue);\r\n        } else {\r\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\r\n          isValid = true;\r\n        }\r\n      } else {\r\n        // Allow JavaScript Date objects\r\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\r\n          Object.prototype.toString.call(currentValue) === '[object Date]';\r\n      }\r\n      return xor(isValid, invert) ?\r\n        null : { 'format': { requiredFormat, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'minimum' validator\r\n   *\r\n   * Requires a control's numeric value to be greater than or equal to\r\n   * a minimum amount.\r\n   *\r\n   * Any non-numeric value is also valid (according to the HTML forms spec,\r\n   * a non-numeric value doesn't have a minimum).\r\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\r\n   *\r\n   * // {number} minimum - minimum allowed value\r\n   * // {IValidatorFn}\r\n   */\r\n  static minimum(minimumValue: number): IValidatorFn {\r\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue = control.value;\r\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\r\n      return xor(isValid, invert) ?\r\n        null : { 'minimum': { minimumValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'exclusiveMinimum' validator\r\n   *\r\n   * Requires a control's numeric value to be less than a maximum amount.\r\n   *\r\n   * Any non-numeric value is also valid (according to the HTML forms spec,\r\n   * a non-numeric value doesn't have a maximum).\r\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\r\n   *\r\n   * // {number} exclusiveMinimumValue - maximum allowed value\r\n   * // {IValidatorFn}\r\n   */\r\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\r\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue = control.value;\r\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\r\n      return xor(isValid, invert) ?\r\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'maximum' validator\r\n   *\r\n   * Requires a control's numeric value to be less than or equal to\r\n   * a maximum amount.\r\n   *\r\n   * Any non-numeric value is also valid (according to the HTML forms spec,\r\n   * a non-numeric value doesn't have a maximum).\r\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\r\n   *\r\n   * // {number} maximumValue - maximum allowed value\r\n   * // {IValidatorFn}\r\n   */\r\n  static maximum(maximumValue: number): IValidatorFn {\r\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue = control.value;\r\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\r\n      return xor(isValid, invert) ?\r\n        null : { 'maximum': { maximumValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'exclusiveMaximum' validator\r\n   *\r\n   * Requires a control's numeric value to be less than a maximum amount.\r\n   *\r\n   * Any non-numeric value is also valid (according to the HTML forms spec,\r\n   * a non-numeric value doesn't have a maximum).\r\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\r\n   *\r\n   * // {number} exclusiveMaximumValue - maximum allowed value\r\n   * // {IValidatorFn}\r\n   */\r\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\r\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue = control.value;\r\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\r\n      return xor(isValid, invert) ?\r\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'multipleOf' validator\r\n   *\r\n   * Requires a control to have a numeric value that is a multiple\r\n   * of a specified number.\r\n   *\r\n   * // {number} multipleOfValue - number value must be a multiple of\r\n   * // {IValidatorFn}\r\n   */\r\n  static multipleOf(multipleOfValue: number): IValidatorFn {\r\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentValue = control.value;\r\n      const isValid = isNumber(currentValue) &&\r\n        currentValue % multipleOfValue === 0;\r\n      return xor(isValid, invert) ?\r\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'minProperties' validator\r\n   *\r\n   * Requires a form group to have a minimum number of properties (i.e. have\r\n   * values entered in a minimum number of controls within the group).\r\n   *\r\n   * // {number} minimumProperties - minimum number of properties allowed\r\n   * // {IValidatorFn}\r\n   */\r\n  static minProperties(minimumProperties: number): IValidatorFn {\r\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentProperties = Object.keys(control.value).length || 0;\r\n      const isValid = currentProperties >= minimumProperties;\r\n      return xor(isValid, invert) ?\r\n        null : { 'minProperties': { minimumProperties, currentProperties } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'maxProperties' validator\r\n   *\r\n   * Requires a form group to have a maximum number of properties (i.e. have\r\n   * values entered in a maximum number of controls within the group).\r\n   *\r\n   * Note: Has no effect if the form group does not contain more than the\r\n   * maximum number of controls.\r\n   *\r\n   * // {number} maximumProperties - maximum number of properties allowed\r\n   * // {IValidatorFn}\r\n   */\r\n  static maxProperties(maximumProperties: number): IValidatorFn {\r\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const currentProperties = Object.keys(control.value).length || 0;\r\n      const isValid = currentProperties <= maximumProperties;\r\n      return xor(isValid, invert) ?\r\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'dependencies' validator\r\n   *\r\n   * Requires the controls in a form group to meet additional validation\r\n   * criteria, depending on the values of other controls in the group.\r\n   *\r\n   * Examples:\r\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\r\n   *\r\n   * // {any} dependencies - required dependencies\r\n   * // {IValidatorFn}\r\n   */\r\n  static dependencies(dependencies: any): IValidatorFn {\r\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\r\n      return JsonValidators.nullValidator;\r\n    }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const allErrors = _mergeObjects(\r\n        forEachCopy(dependencies, (value, requiringField) => {\r\n          if (!hasValue(control.value[requiringField])) { return null; }\r\n          let requiringFieldErrors: ValidationErrors = { };\r\n          let requiredFields: string[];\r\n          let properties: ValidationErrors = { };\r\n          if (getType(dependencies[requiringField]) === 'array') {\r\n            requiredFields = dependencies[requiringField];\r\n          } else if (getType(dependencies[requiringField]) === 'object') {\r\n            requiredFields = dependencies[requiringField]['required'] || [];\r\n            properties = dependencies[requiringField]['properties'] || { };\r\n          }\r\n\r\n          // Validate property dependencies\r\n          for (const requiredField of requiredFields) {\r\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\r\n              requiringFieldErrors[requiredField] = { 'required': true };\r\n            }\r\n          }\r\n\r\n          // Validate schema dependencies\r\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\r\n            forEachCopy(properties, (requirements, requiredField) => {\r\n              const requiredFieldErrors = _mergeObjects(\r\n                forEachCopy(requirements, (requirement, parameter) => {\r\n                  let validator: IValidatorFn = null;\r\n                  if (requirement === 'maximum' || requirement === 'minimum') {\r\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\r\n                    validator = JsonValidators[requirement](parameter, exclusive);\r\n                  } else if (typeof JsonValidators[requirement] === 'function') {\r\n                    validator = JsonValidators[requirement](parameter);\r\n                  }\r\n                  return !isDefined(validator) ?\r\n                    null : validator(control.value[requiredField]);\r\n                })\r\n              );\r\n              return isEmpty(requiredFieldErrors) ?\r\n                null : { [requiredField]: requiredFieldErrors };\r\n            })\r\n          );\r\n          return isEmpty(requiringFieldErrors) ?\r\n            null : { [requiringField]: requiringFieldErrors };\r\n        })\r\n      );\r\n      return isEmpty(allErrors) ? null : allErrors;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'minItems' validator\r\n   *\r\n   * Requires a form array to have a minimum number of values.\r\n   *\r\n   * // {number} minimumItems - minimum number of items allowed\r\n   * // {IValidatorFn}\r\n   */\r\n  static minItems(minimumItems: number): IValidatorFn {\r\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const currentItems = isArray(control.value) ? control.value.length : 0;\r\n      const isValid = currentItems >= minimumItems;\r\n      return xor(isValid, invert) ?\r\n        null : { 'minItems': { minimumItems, currentItems } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'maxItems' validator\r\n   *\r\n   * Requires a form array to have a maximum number of values.\r\n   *\r\n   * // {number} maximumItems - maximum number of items allowed\r\n   * // {IValidatorFn}\r\n   */\r\n  static maxItems(maximumItems: number): IValidatorFn {\r\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const currentItems = isArray(control.value) ? control.value.length : 0;\r\n      const isValid = currentItems <= maximumItems;\r\n      return xor(isValid, invert) ?\r\n        null : { 'maxItems': { maximumItems, currentItems } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'uniqueItems' validator\r\n   *\r\n   * Requires values in a form array to be unique.\r\n   *\r\n   * // {boolean = true} unique? - true to validate, false to disable\r\n   * // {IValidatorFn}\r\n   */\r\n  static uniqueItems(unique = true): IValidatorFn {\r\n    if (!unique) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const sorted: any[] = control.value.slice().sort();\r\n      const duplicateItems = [];\r\n      for (let i = 1; i < sorted.length; i++) {\r\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\r\n          duplicateItems.push(sorted[i]);\r\n        }\r\n      }\r\n      const isValid = !duplicateItems.length;\r\n      return xor(isValid, invert) ?\r\n        null : { 'uniqueItems': { duplicateItems } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'contains' validator\r\n   *\r\n   * TODO: Complete this validator\r\n   *\r\n   * Requires values in a form array to be unique.\r\n   *\r\n   * // {boolean = true} unique? - true to validate, false to disable\r\n   * // {IValidatorFn}\r\n   */\r\n  static contains(requiredItem = true): IValidatorFn {\r\n    if (!requiredItem) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\r\n      const currentItems = control.value;\r\n      // const isValid = currentItems.some(item =>\r\n      //\r\n      // );\r\n      const isValid = true;\r\n      return xor(isValid, invert) ?\r\n        null : { 'contains': { requiredItem, currentItems } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * No-op validator. Included for backward compatibility.\r\n   */\r\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Validator transformation functions:\r\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\r\n   * compose, composeAsync\r\n   *\r\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\r\n   *           composeAllOfAsync, composeNotAsync\r\n   */\r\n\r\n  /**\r\n   * 'composeAnyOf' validator combination function\r\n   *\r\n   * Accepts an array of validators and returns a single validator that\r\n   * evaluates to valid if any one or more of the submitted validators are\r\n   * valid. If every validator is invalid, it returns combined errors from\r\n   * all validators.\r\n   *\r\n   * // {IValidatorFn[]} validators - array of validators to combine\r\n   * // {IValidatorFn} - single combined validator function\r\n   */\r\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\r\n    if (!validators) { return null; }\r\n    const presentValidators = validators.filter(isDefined);\r\n    if (presentValidators.length === 0) { return null; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const arrayOfErrors =\r\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\r\n      const isValid = validators.length > arrayOfErrors.length;\r\n      return xor(isValid, invert) ?\r\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'composeOneOf' validator combination function\r\n   *\r\n   * Accepts an array of validators and returns a single validator that\r\n   * evaluates to valid only if exactly one of the submitted validators\r\n   * is valid. Otherwise returns combined information from all validators,\r\n   * both valid and invalid.\r\n   *\r\n   * // {IValidatorFn[]} validators - array of validators to combine\r\n   * // {IValidatorFn} - single combined validator function\r\n   */\r\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\r\n    if (!validators) { return null; }\r\n    const presentValidators = validators.filter(isDefined);\r\n    if (presentValidators.length === 0) { return null; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const arrayOfErrors =\r\n        _executeValidators(control, presentValidators);\r\n      const validControls =\r\n        validators.length - arrayOfErrors.filter(isDefined).length;\r\n      const isValid = validControls === 1;\r\n      if (xor(isValid, invert)) { return null; }\r\n      const arrayOfValids =\r\n        _executeValidators(control, presentValidators, invert);\r\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'composeAllOf' validator combination function\r\n   *\r\n   * Accepts an array of validators and returns a single validator that\r\n   * evaluates to valid only if all the submitted validators are individually\r\n   * valid. Otherwise it returns combined errors from all invalid validators.\r\n   *\r\n   * // {IValidatorFn[]} validators - array of validators to combine\r\n   * // {IValidatorFn} - single combined validator function\r\n   */\r\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\r\n    if (!validators) { return null; }\r\n    const presentValidators = validators.filter(isDefined);\r\n    if (presentValidators.length === 0) { return null; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      const combinedErrors = _mergeErrors(\r\n        _executeValidators(control, presentValidators, invert)\r\n      );\r\n      const isValid = combinedErrors === null;\r\n      return (xor(isValid, invert)) ?\r\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'composeNot' validator inversion function\r\n   *\r\n   * Accepts a single validator function and inverts its result.\r\n   * Returns valid if the submitted validator is invalid, and\r\n   * returns invalid if the submitted validator is valid.\r\n   * (Note: this function can itself be inverted\r\n   *   - e.g. composeNot(composeNot(validator)) -\r\n   *   but this can be confusing and is therefore not recommended.)\r\n   *\r\n   * // {IValidatorFn[]} validators - validator(s) to invert\r\n   * // {IValidatorFn} - new validator function that returns opposite result\r\n   */\r\n  static composeNot(validator: IValidatorFn): IValidatorFn {\r\n    if (!validator) { return null; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\r\n      if (isEmpty(control.value)) { return null; }\r\n      const error = validator(control, !invert);\r\n      const isValid = error === null;\r\n      return (xor(isValid, invert)) ?\r\n        null : _mergeObjects(error, { 'not': !invert });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 'compose' validator combination function\r\n   *\r\n   * // {IValidatorFn[]} validators - array of validators to combine\r\n   * // {IValidatorFn} - single combined validator function\r\n   */\r\n  static compose(validators: IValidatorFn[]): IValidatorFn {\r\n    if (!validators) { return null; }\r\n    const presentValidators = validators.filter(isDefined);\r\n    if (presentValidators.length === 0) { return null; }\r\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\r\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\r\n  }\r\n\r\n  /**\r\n   * 'composeAsync' async validator combination function\r\n   *\r\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\r\n   * // {AsyncIValidatorFn} - single combined async validator function\r\n   */\r\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\r\n    if (!validators) { return null; }\r\n    const presentValidators = validators.filter(isDefined);\r\n    if (presentValidators.length === 0) { return null; }\r\n    return (control: AbstractControl) => {\r\n      const observables =\r\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\r\n      return map.call(forkJoin(observables), _mergeErrors);\r\n    };\r\n  }\r\n\r\n  // Additional angular validators (not used by Angualr JSON Schema Form)\r\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\r\n\r\n  /**\r\n   * Validator that requires controls to have a value greater than a number.\r\n   */\r\n  static min(min: number): ValidatorFn {\r\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl): ValidationErrors|null => {\r\n      // don't validate empty values to allow optional controls\r\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\r\n      const value = parseFloat(control.value);\r\n      const actual = control.value;\r\n      // Controls with NaN values after parsing should be treated as not having a\r\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\r\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validator that requires controls to have a value less than a number.\r\n   */\r\n  static max(max: number): ValidatorFn {\r\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\r\n    return (control: AbstractControl): ValidationErrors|null => {\r\n      // don't validate empty values to allow optional controls\r\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\r\n      const value = parseFloat(control.value);\r\n      const actual = control.value;\r\n      // Controls with NaN values after parsing should be treated as not having a\r\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\r\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validator that requires control value to be true.\r\n   */\r\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\r\n    if (!control) { return JsonValidators.nullValidator; }\r\n    return control.value === true ? null : { 'required': true };\r\n  }\r\n\r\n  /**\r\n   * Validator that performs email validation.\r\n   */\r\n  static email(control: AbstractControl): ValidationErrors|null {\r\n    if (!control) { return JsonValidators.nullValidator; }\r\n    const EMAIL_REGEXP =\r\n      // tslint:disable-next-line:max-line-length\r\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\r\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn\r\n  } from '@angular/forms';\r\nimport { forEach, hasOwn } from './utility.functions';\r\nimport { getControlValidators, removeRecursiveReferences } from './json-schema.functions';\r\nimport {\r\n  hasValue,\r\n  inArray,\r\n  isArray,\r\n  isDate,\r\n  isDefined,\r\n  isEmpty,\r\n  isObject,\r\n  isPrimitive,\r\n  SchemaPrimitiveType,\r\n  toJavaScriptType,\r\n  toSchemaType\r\n  } from './validator.functions';\r\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\r\nimport { JsonValidators } from './json.validators';\r\n\r\n\r\n\r\n/**\r\n * FormGroup function library:\r\n *\r\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\r\n *\r\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\r\n *\r\n * mergeValues:\r\n *\r\n * setRequiredFields:\r\n *\r\n * formatFormData:\r\n *\r\n * getControl:\r\n *\r\n * ---- TODO: ----\r\n * TODO: add buildFormGroupTemplateFromLayout function\r\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\r\n */\r\n\r\n/**\r\n * 'buildFormGroupTemplate' function\r\n *\r\n * Builds a template for an Angular FormGroup from a JSON Schema.\r\n *\r\n * TODO: add support for pattern properties\r\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\r\n *\r\n * //  {any} jsf -\r\n * //  {any = null} nodeValue -\r\n * //  {boolean = true} mapArrays -\r\n * //  {string = ''} schemaPointer -\r\n * //  {string = ''} dataPointer -\r\n * //  {any = ''} templatePointer -\r\n * // {any} -\r\n */\r\nexport function buildFormGroupTemplate(\r\n  jsf: any, nodeValue: any = null, setValues = true,\r\n  schemaPointer = '', dataPointer = '', templatePointer = ''\r\n) {\r\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\r\n  if (setValues) {\r\n    if (!isDefined(nodeValue) && (\r\n      jsf.formOptions.setSchemaDefaults === true ||\r\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\r\n    )) {\r\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\r\n    }\r\n  } else {\r\n    nodeValue = null;\r\n  }\r\n  // TODO: If nodeValue still not set, check layout for default value\r\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\r\n  const controlType =\r\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\r\n      schemaType === 'object' ? 'FormGroup' :\r\n      (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\r\n        schemaType === 'array' ? 'FormArray' :\r\n        !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\r\n  const shortDataPointer =\r\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\r\n  if (!jsf.dataMap.has(shortDataPointer)) {\r\n    jsf.dataMap.set(shortDataPointer, new Map());\r\n  }\r\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\r\n  if (!nodeOptions.has('schemaType')) {\r\n    nodeOptions.set('schemaPointer', schemaPointer);\r\n    nodeOptions.set('schemaType', schema.type);\r\n    if (schema.format) {\r\n      nodeOptions.set('schemaFormat', schema.format);\r\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\r\n    }\r\n    if (controlType) {\r\n      nodeOptions.set('templatePointer', templatePointer);\r\n      nodeOptions.set('templateType', controlType);\r\n    }\r\n  }\r\n  let controls: any;\r\n  const validators = getControlValidators(schema);\r\n  switch (controlType) {\r\n\r\n    case 'FormGroup':\r\n      controls = {};\r\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\r\n        const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\r\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\r\n          const unnamedKeys = Object.keys(schema.properties)\r\n            .filter(key => !propertyKeys.includes(key));\r\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\r\n            if (propertyKeys[i] === '*') {\r\n              propertyKeys.splice(i, 1, ...unnamedKeys);\r\n            }\r\n          }\r\n        }\r\n        propertyKeys\r\n          .filter(key => hasOwn(schema.properties, key) ||\r\n            hasOwn(schema, 'additionalProperties')\r\n          )\r\n          .forEach(key => controls[key] = buildFormGroupTemplate(\r\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\r\n            schemaPointer + (hasOwn(schema.properties, key) ?\r\n              '/properties/' + key : '/additionalProperties'\r\n            ),\r\n            dataPointer + '/' + key,\r\n            templatePointer + '/controls/' + key\r\n          ));\r\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\r\n      }\r\n      return { controlType, controls, validators };\r\n\r\n    case 'FormArray':\r\n      controls = [];\r\n      const minItems =\r\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\r\n      const maxItems =\r\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\r\n      let additionalItemsPointer: string = null;\r\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\r\n        const tupleItems = nodeOptions.get('tupleItems') ||\r\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\r\n        for (let i = 0; i < tupleItems; i++) {\r\n          if (i < minItems) {\r\n            controls.push(buildFormGroupTemplate(\r\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\r\n              schemaPointer + '/items/' + i,\r\n              dataPointer + '/' + i,\r\n              templatePointer + '/controls/' + i\r\n            ));\r\n          } else {\r\n            const schemaRefPointer = removeRecursiveReferences(\r\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\r\n            );\r\n            const itemRefPointer = removeRecursiveReferences(\r\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\r\n            );\r\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\r\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\r\n              jsf.templateRefLibrary[itemRefPointer] = null;\r\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\r\n                jsf, null, setValues,\r\n                schemaRefPointer,\r\n                itemRefPointer,\r\n                templatePointer + '/controls/' + i\r\n              );\r\n            }\r\n            controls.push(\r\n              isArray(nodeValue) ?\r\n                buildFormGroupTemplate(\r\n                  jsf, nodeValue[i], setValues,\r\n                  schemaPointer + '/items/' + i,\r\n                  dataPointer + '/' + i,\r\n                  templatePointer + '/controls/' + i\r\n                ) :\r\n                itemRecursive ?\r\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\r\n            );\r\n          }\r\n        }\r\n\r\n        // If 'additionalItems' is an object = additional list items (after tuple items)\r\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\r\n          additionalItemsPointer = schemaPointer + '/additionalItems';\r\n        }\r\n\r\n        // If 'items' is an object = list items only (no tuple items)\r\n      } else {\r\n        additionalItemsPointer = schemaPointer + '/items';\r\n      }\r\n\r\n      if (additionalItemsPointer) {\r\n        const schemaRefPointer = removeRecursiveReferences(\r\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\r\n        );\r\n        const itemRefPointer = removeRecursiveReferences(\r\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\r\n        );\r\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\r\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\r\n          jsf.templateRefLibrary[itemRefPointer] = null;\r\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\r\n            jsf, null, setValues,\r\n            schemaRefPointer,\r\n            itemRefPointer,\r\n            templatePointer + '/controls/-'\r\n          );\r\n        }\r\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\r\n        const itemOptions = nodeOptions;\r\n        if (!itemRecursive || hasOwn(validators, 'required')) {\r\n          const arrayLength = Math.min(Math.max(\r\n            itemRecursive ? 0 :\r\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\r\n            isArray(nodeValue) ? nodeValue.length : 0\r\n          ), maxItems);\r\n          for (let i = controls.length; i < arrayLength; i++) {\r\n            controls.push(\r\n              isArray(nodeValue) ?\r\n                buildFormGroupTemplate(\r\n                  jsf, nodeValue[i], setValues,\r\n                  schemaRefPointer,\r\n                  dataPointer + '/-',\r\n                  templatePointer + '/controls/-'\r\n                ) :\r\n                itemRecursive ?\r\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\r\n            );\r\n          }\r\n        }\r\n      }\r\n      return { controlType, controls, validators };\r\n\r\n    case '$ref':\r\n      const schemaRef = JsonPointer.compile(schema.$ref);\r\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\r\n      const refPointer = removeRecursiveReferences(\r\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\r\n      );\r\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\r\n        // Set to null first to prevent recursive reference from causing endless loop\r\n        jsf.templateRefLibrary[refPointer] = null;\r\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\r\n        if (newTemplate) {\r\n          jsf.templateRefLibrary[refPointer] = newTemplate;\r\n        } else {\r\n          delete jsf.templateRefLibrary[refPointer];\r\n        }\r\n      }\r\n      return null;\r\n\r\n    case 'FormControl':\r\n      const value = {\r\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\r\n        disabled: nodeOptions.get('disabled') || false\r\n      };\r\n      return { controlType, value, validators };\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 'buildFormGroup' function\r\n *\r\n * // {any} template -\r\n * // {AbstractControl}\r\n*/\r\nexport function buildFormGroup(template: any): AbstractControl {\r\n  const validatorFns: ValidatorFn[] = [];\r\n  let validatorFn: ValidatorFn = null;\r\n  if (hasOwn(template, 'validators')) {\r\n    forEach(template.validators, (parameters, validator) => {\r\n      if (typeof JsonValidators[validator] === 'function') {\r\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\r\n      }\r\n    });\r\n    if (validatorFns.length &&\r\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\r\n    ) {\r\n      validatorFn = validatorFns.length > 1 ?\r\n        JsonValidators.compose(validatorFns) : validatorFns[0];\r\n    }\r\n  }\r\n  if (hasOwn(template, 'controlType')) {\r\n    switch (template.controlType) {\r\n      case 'FormGroup':\r\n        const groupControls: { [key: string]: AbstractControl } = {};\r\n        forEach(template.controls, (controls, key) => {\r\n          const newControl: AbstractControl = buildFormGroup(controls);\r\n          if (newControl) { groupControls[key] = newControl; }\r\n        });\r\n        return new FormGroup(groupControls, validatorFn);\r\n      case 'FormArray':\r\n        return new FormArray(_.filter(_.map(template.controls,\r\n          controls => buildFormGroup(controls)\r\n        )), validatorFn);\r\n      case 'FormControl':\r\n        return new FormControl(template.value, validatorFns);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 'mergeValues' function\r\n *\r\n * //  {any[]} ...valuesToMerge - Multiple values to merge\r\n * // {any} - Merged values\r\n */\r\nexport function mergeValues(...valuesToMerge) {\r\n  let mergedValues: any = null;\r\n  for (const currentValue of valuesToMerge) {\r\n    if (!isEmpty(currentValue)) {\r\n      if (typeof currentValue === 'object' &&\r\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\r\n      ) {\r\n        if (isArray(currentValue)) {\r\n          mergedValues = [...currentValue];\r\n        } else if (isObject(currentValue)) {\r\n          mergedValues = { ...currentValue };\r\n        }\r\n      } else if (typeof currentValue !== 'object') {\r\n        mergedValues = currentValue;\r\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\r\n        Object.assign(mergedValues, currentValue);\r\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\r\n        const newValues = [];\r\n        for (const value of currentValue) {\r\n          newValues.push(mergeValues(mergedValues, value));\r\n        }\r\n        mergedValues = newValues;\r\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\r\n        const newValues = [];\r\n        for (const value of mergedValues) {\r\n          newValues.push(mergeValues(value, currentValue));\r\n        }\r\n        mergedValues = newValues;\r\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\r\n        const newValues = [];\r\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\r\n          if (i < mergedValues.length && i < currentValue.length) {\r\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\r\n          } else if (i < mergedValues.length) {\r\n            newValues.push(mergedValues[i]);\r\n          } else if (i < currentValue.length) {\r\n            newValues.push(currentValue[i]);\r\n          }\r\n        }\r\n        mergedValues = newValues;\r\n      }\r\n    }\r\n  }\r\n  return mergedValues;\r\n}\r\n\r\n/**\r\n * 'setRequiredFields' function\r\n *\r\n * // {schema} schema - JSON Schema\r\n * // {object} formControlTemplate - Form Control Template object\r\n * // {boolean} - true if any fields have been set to required, false if not\r\n */\r\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\r\n  let fieldsRequired = false;\r\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\r\n    fieldsRequired = true;\r\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\r\n    requiredArray = forEach(requiredArray,\r\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\r\n    );\r\n  }\r\n  return fieldsRequired;\r\n\r\n  // TODO: Add support for patternProperties\r\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\r\n}\r\n\r\n/**\r\n * 'formatFormData' function\r\n *\r\n * // {any} formData - Angular FormGroup data object\r\n * // {Map<string, any>} dataMap -\r\n * // {Map<string, string>} recursiveRefMap -\r\n * // {Map<string, number>} arrayMap -\r\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\r\n * // {any} - formatted data object\r\n */\r\nexport function formatFormData(\r\n  formData: any, dataMap: Map<string, any>,\r\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\r\n  returnEmptyFields = false, fixErrors = false\r\n): any {\r\n  if (formData === null || typeof formData !== 'object') { return formData; }\r\n  const formattedData = isArray(formData) ? [] : {};\r\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\r\n\r\n    // If returnEmptyFields === true,\r\n    // add empty arrays and objects to all allowed keys\r\n    if (returnEmptyFields && isArray(value)) {\r\n      JsonPointer.set(formattedData, dataPointer, []);\r\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\r\n      JsonPointer.set(formattedData, dataPointer, {});\r\n    } else {\r\n      const genericPointer =\r\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\r\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\r\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\r\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\r\n          dataMap.get(genericPointer).get('schemaType');\r\n        if (schemaType === 'null') {\r\n          JsonPointer.set(formattedData, dataPointer, null);\r\n        } else if ((hasValue(value) || returnEmptyFields) &&\r\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\r\n        ) {\r\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\r\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\r\n          if (isDefined(newValue) || returnEmptyFields) {\r\n            JsonPointer.set(formattedData, dataPointer, newValue);\r\n          }\r\n\r\n          // If returnEmptyFields === false,\r\n          // only add empty arrays and objects to required keys\r\n        } else if (schemaType === 'object' && !returnEmptyFields) {\r\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\r\n            const keySchemaType =\r\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\r\n            if (keySchemaType === 'array') {\r\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\r\n            } else if (keySchemaType === 'object') {\r\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\r\n            }\r\n          });\r\n        }\r\n\r\n        // Finish incomplete 'date-time' entries\r\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\r\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535\" (dont add anything)\r\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\r\n            JsonPointer.set(formattedData, dataPointer, `${value}`);\r\n            // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00\" (add \":00\")\r\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\r\n            JsonPointer.set(formattedData, dataPointer, `${value}:00`);\r\n            // \"2000-03-14\" -> \"2000-03-14T00:00:00\" (add \"T00:00:00\")\r\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\r\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00`);\r\n          }\r\n        }\r\n      } else if (typeof value !== 'object' || isDate(value) ||\r\n        (value === null && returnEmptyFields)\r\n      ) {\r\n        console.error('formatFormData error: ' +\r\n          `Schema type not found for form value at ${genericPointer}`);\r\n        console.error('dataMap', dataMap);\r\n        console.error('recursiveRefMap', recursiveRefMap);\r\n        console.error('genericPointer', genericPointer);\r\n      }\r\n    }\r\n  });\r\n  return formattedData;\r\n}\r\n\r\n/**\r\n * 'getControl' function\r\n *\r\n * Uses a JSON Pointer for a data object to retrieve a control from\r\n * an Angular formGroup or formGroup template. (Note: though a formGroup\r\n * template is much simpler, its basic structure is idential to a formGroup).\r\n *\r\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\r\n * containing the control is returned, rather than the control itself.\r\n *\r\n * // {FormGroup} formGroup - Angular FormGroup to get value from\r\n * // {Pointer} dataPointer - JSON Pointer (string or array)\r\n * // {boolean = false} returnGroup - If true, return group containing control\r\n * // {group} - Located value (or null, if no control found)\r\n */\r\nexport function getControl(\r\n  formGroup: any, dataPointer: Pointer, returnGroup = false\r\n): any {\r\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\r\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\r\n      // If dataPointer input is not a valid JSON pointer, check to\r\n      // see if it is instead a valid object path, using dot notaion\r\n      if (typeof dataPointer === 'string') {\r\n        const formControl = formGroup.get(dataPointer);\r\n        if (formControl) { return formControl; }\r\n      }\r\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\r\n    }\r\n    if (!isObject(formGroup)) {\r\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\r\n    }\r\n    return null;\r\n  }\r\n  let dataPointerArray = JsonPointer.parse(dataPointer);\r\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\r\n\r\n  // If formGroup input is a real formGroup (not a formGroup template)\r\n  // try using formGroup.get() to return the control\r\n  if (typeof formGroup.get === 'function' &&\r\n    dataPointerArray.every(key => key.indexOf('.') === -1)\r\n  ) {\r\n    const formControl = formGroup.get(dataPointerArray.join('.'));\r\n    if (formControl) { return formControl; }\r\n  }\r\n\r\n  // If formGroup input is a formGroup template,\r\n  // or formGroup.get() failed to return the control,\r\n  // search the formGroup object for dataPointer's control\r\n  let subGroup = formGroup;\r\n  for (const key of dataPointerArray) {\r\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\r\n    if (isArray(subGroup) && (key === '-')) {\r\n      subGroup = subGroup[subGroup.length - 1];\r\n    } else if (hasOwn(subGroup, key)) {\r\n      subGroup = subGroup[key];\r\n    } else {\r\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\r\n      console.error(dataPointer);\r\n      console.error(formGroup);\r\n      return;\r\n    }\r\n  }\r\n  return subGroup;\r\n}\r\n","import _ from 'lodash';\r\nimport {\r\n  checkInlineType,\r\n  getFromSchema,\r\n  getInputType,\r\n  isInputRequired,\r\n  removeRecursiveReferences,\r\n  updateInputOptions\r\n  } from './json-schema.functions';\r\nimport {\r\n  copy,\r\n  fixTitle,\r\n  forEach,\r\n  hasOwn\r\n  } from './utility.functions';\r\nimport {\r\n  inArray,\r\n  isArray,\r\n  isDefined,\r\n  isEmpty,\r\n  isNumber,\r\n  isObject,\r\n  isString\r\n  } from './validator.functions';\r\nimport { JsonPointer } from './jsonpointer.functions';\r\nimport { TitleMapItem } from '../json-schema-form.service';\r\n\r\n\r\n\r\n/**\r\n * Layout function library:\r\n *\r\n * buildLayout:            Builds a complete layout from an input layout and schema\r\n *\r\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\r\n *\r\n * mapLayout:\r\n *\r\n * getLayoutNode:\r\n *\r\n * buildTitleMap:\r\n */\r\n\r\n/**\r\n * 'buildLayout' function\r\n *\r\n * //   jsf\r\n * //   widgetLibrary\r\n * //\r\n */\r\nexport function buildLayout(jsf, widgetLibrary) {\r\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\r\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\r\n    const newNode: any = {\r\n      _id: _.uniqueId(),\r\n      options: {},\r\n    };\r\n    if (isObject(layoutItem)) {\r\n      Object.assign(newNode, layoutItem);\r\n      Object.keys(newNode)\r\n        .filter(option => !inArray(option, [\r\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\r\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\r\n        ]))\r\n        .forEach(option => {\r\n          newNode.options[option] = newNode[option];\r\n          delete newNode[option];\r\n        });\r\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\r\n        newNode.type = newNode.widget;\r\n        delete newNode.widget;\r\n      }\r\n      if (!hasOwn(newNode.options, 'title')) {\r\n        if (hasOwn(newNode.options, 'legend')) {\r\n          newNode.options.title = newNode.options.legend;\r\n          delete newNode.options.legend;\r\n        }\r\n      }\r\n      if (!hasOwn(newNode.options, 'validationMessages')) {\r\n        if (hasOwn(newNode.options, 'errorMessages')) {\r\n          newNode.options.validationMessages = newNode.options.errorMessages;\r\n          delete newNode.options.errorMessages;\r\n\r\n          // Convert Angular Schema Form (AngularJS) 'validationMessage' to\r\n          // Angular JSON Schema Form 'validationMessages'\r\n          // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\r\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\r\n          if (typeof newNode.options.validationMessage === 'string') {\r\n            newNode.options.validationMessages = newNode.options.validationMessage;\r\n          } else {\r\n            newNode.options.validationMessages = {};\r\n            Object.keys(newNode.options.validationMessage).forEach(key => {\r\n              const code = key + '';\r\n              const newKey =\r\n                code === '0' ? 'type' :\r\n                  code === '1' ? 'enum' :\r\n                    code === '100' ? 'multipleOf' :\r\n                      code === '101' ? 'minimum' :\r\n                        code === '102' ? 'exclusiveMinimum' :\r\n                          code === '103' ? 'maximum' :\r\n                            code === '104' ? 'exclusiveMaximum' :\r\n                              code === '200' ? 'minLength' :\r\n                                code === '201' ? 'maxLength' :\r\n                                  code === '202' ? 'pattern' :\r\n                                    code === '300' ? 'minProperties' :\r\n                                      code === '301' ? 'maxProperties' :\r\n                                        code === '302' ? 'required' :\r\n                                          code === '304' ? 'dependencies' :\r\n                                            code === '400' ? 'minItems' :\r\n                                              code === '401' ? 'maxItems' :\r\n                                                code === '402' ? 'uniqueItems' :\r\n                                                  code === '500' ? 'format' : code + '';\r\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\r\n            });\r\n          }\r\n          delete newNode.options.validationMessage;\r\n        }\r\n      }\r\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\r\n      newNode.dataPointer = layoutItem;\r\n    } else if (isString(layoutItem)) {\r\n      newNode.key = layoutItem;\r\n    } else {\r\n      console.error('buildLayout error: Form layout element not recognized:');\r\n      console.error(layoutItem);\r\n      return null;\r\n    }\r\n    let nodeSchema: any = null;\r\n\r\n    // If newNode does not have a dataPointer, try to find an equivalent\r\n    if (!hasOwn(newNode, 'dataPointer')) {\r\n\r\n      // If newNode has a key, change it to a dataPointer\r\n      if (hasOwn(newNode, 'key')) {\r\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\r\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\r\n        delete newNode.key;\r\n\r\n        // If newNode is an array, search for dataPointer in child nodes\r\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\r\n        const findDataPointer = (items) => {\r\n          if (items === null || typeof items !== 'object') { return; }\r\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\r\n          if (isArray(items.items)) {\r\n            for (const item of items.items) {\r\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\r\n                return item.dataPointer;\r\n              }\r\n              if (hasOwn(item, 'items')) {\r\n                const searchItem = findDataPointer(item);\r\n                if (searchItem) { return searchItem; }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        const childDataPointer = findDataPointer(newNode);\r\n        if (childDataPointer) {\r\n          newNode.dataPointer =\r\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hasOwn(newNode, 'dataPointer')) {\r\n      if (newNode.dataPointer === '*') {\r\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\r\n      }\r\n      const nodeValue =\r\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\r\n\r\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\r\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\r\n      // then set apropriate values from initialVaues, schema, or layout\r\n\r\n      newNode.dataPointer =\r\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\r\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\r\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\r\n        newNode.name = LastKey;\r\n      }\r\n      const shortDataPointer = removeRecursiveReferences(\r\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\r\n      );\r\n      const recursive = !shortDataPointer.length ||\r\n        shortDataPointer !== newNode.dataPointer;\r\n      let schemaPointer: string;\r\n      if (!jsf.dataMap.has(shortDataPointer)) {\r\n        jsf.dataMap.set(shortDataPointer, new Map());\r\n      }\r\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\r\n      if (nodeDataMap.has('schemaPointer')) {\r\n        schemaPointer = nodeDataMap.get('schemaPointer');\r\n      } else {\r\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\r\n        nodeDataMap.set('schemaPointer', schemaPointer);\r\n      }\r\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\r\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\r\n      if (nodeSchema) {\r\n        if (!hasOwn(newNode, 'type')) {\r\n          newNode.type = getInputType(nodeSchema, newNode);\r\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\r\n          const oldWidgetType = newNode.type;\r\n          newNode.type = getInputType(nodeSchema, newNode);\r\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\r\n            `not found in library. Replacing with \"${newNode.type}\".`);\r\n        } else {\r\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\r\n        }\r\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\r\n          nodeDataMap.set('required', nodeSchema.required);\r\n        }\r\n        newNode.dataType =\r\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\r\n        updateInputOptions(newNode, nodeSchema, jsf);\r\n\r\n        // Present checkboxes as single control, rather than array\r\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\r\n          updateInputOptions(newNode, nodeSchema.items, jsf);\r\n        } else if (newNode.dataType === 'array') {\r\n          newNode.options.maxItems = Math.min(\r\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\r\n          );\r\n          newNode.options.minItems = Math.max(\r\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\r\n          );\r\n          newNode.options.listItems = Math.max(\r\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\r\n          );\r\n          newNode.options.tupleItems =\r\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\r\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\r\n            newNode.options.tupleItems = newNode.options.maxItems;\r\n            newNode.options.listItems = 0;\r\n          } else if (newNode.options.maxItems <\r\n            newNode.options.tupleItems + newNode.options.listItems\r\n          ) {\r\n            newNode.options.listItems =\r\n              newNode.options.maxItems - newNode.options.tupleItems;\r\n          } else if (newNode.options.minItems >\r\n            newNode.options.tupleItems + newNode.options.listItems\r\n          ) {\r\n            newNode.options.listItems =\r\n              newNode.options.minItems - newNode.options.tupleItems;\r\n          }\r\n          if (!nodeDataMap.has('maxItems')) {\r\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\r\n            nodeDataMap.set('minItems', newNode.options.minItems);\r\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\r\n            nodeDataMap.set('listItems', newNode.options.listItems);\r\n          }\r\n          if (!jsf.arrayMap.has(shortDataPointer)) {\r\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\r\n          }\r\n        }\r\n        if (isInputRequired(jsf.schema, schemaPointer)) {\r\n          newNode.options.required = true;\r\n          jsf.fieldsRequired = true;\r\n        }\r\n      } else {\r\n        // TODO: create item in FormGroup model from layout key (?)\r\n        updateInputOptions(newNode, {}, jsf);\r\n      }\r\n\r\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\r\n        newNode.options.title = fixTitle(newNode.name);\r\n      }\r\n\r\n      if (hasOwn(newNode.options, 'copyValueTo')) {\r\n        if (typeof newNode.options.copyValueTo === 'string') {\r\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\r\n        }\r\n        if (isArray(newNode.options.copyValueTo)) {\r\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\r\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\r\n          );\r\n        }\r\n      }\r\n\r\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\r\n      nodeDataMap.set('inputType', newNode.type);\r\n      nodeDataMap.set('widget', newNode.widget);\r\n\r\n      if (newNode.dataType === 'array' &&\r\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\r\n      ) {\r\n        const itemRefPointer = removeRecursiveReferences(\r\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\r\n        );\r\n        if (!jsf.dataMap.has(itemRefPointer)) {\r\n          jsf.dataMap.set(itemRefPointer, new Map());\r\n        }\r\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\r\n\r\n        // Fix insufficiently nested array item groups\r\n        if (newNode.items.length > 1) {\r\n          const arrayItemGroup = [];\r\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\r\n            const subItem = newNode.items[i];\r\n            if (hasOwn(subItem, 'dataPointer') &&\r\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\r\n            ) {\r\n              const arrayItem = newNode.items.splice(i, 1)[0];\r\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\r\n                arrayItem.dataPointer.slice(itemRefPointer.length);\r\n              arrayItemGroup.unshift(arrayItem);\r\n            } else {\r\n              subItem.arrayItem = true;\r\n              // TODO: Check schema to get arrayItemType and removable\r\n              subItem.arrayItemType = 'list';\r\n              subItem.removable = newNode.options.removable !== false;\r\n            }\r\n          }\r\n          if (arrayItemGroup.length) {\r\n            newNode.items.push({\r\n              _id: _.uniqueId(),\r\n              arrayItem: true,\r\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\r\n                'tuple' : 'list',\r\n              items: arrayItemGroup,\r\n              options: { removable: newNode.options.removable !== false, },\r\n              dataPointer: newNode.dataPointer + '/-',\r\n              type: 'section',\r\n              widget: widgetLibrary.getWidget('section'),\r\n            });\r\n          }\r\n        } else {\r\n          // TODO: Fix to hndle multiple items\r\n          newNode.items[0].arrayItem = true;\r\n          if (!newNode.items[0].dataPointer) {\r\n            newNode.items[0].dataPointer =\r\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\r\n          }\r\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\r\n            newNode.items[0].options.removable = true;\r\n          }\r\n          if (newNode.options.orderable === false) {\r\n            newNode.items[0].options.orderable = false;\r\n          }\r\n          newNode.items[0].arrayItemType =\r\n            newNode.options.tupleItems ? 'tuple' : 'list';\r\n        }\r\n\r\n        if (isArray(newNode.items)) {\r\n          const arrayListItems =\r\n            newNode.items.filter(item => item.type !== '$ref').length -\r\n            newNode.options.tupleItems;\r\n          if (arrayListItems > newNode.options.listItems) {\r\n            newNode.options.listItems = arrayListItems;\r\n            nodeDataMap.set('listItems', arrayListItems);\r\n          }\r\n        }\r\n\r\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\r\n          jsf.layoutRefLibrary[itemRefPointer] =\r\n            _.cloneDeep(newNode.items[newNode.items.length - 1]);\r\n          if (recursive) {\r\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\r\n          }\r\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\r\n            if (hasOwn(item, '_id')) { item._id = null; }\r\n            if (recursive) {\r\n              if (hasOwn(item, 'dataPointer')) {\r\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\r\n              }\r\n            }\r\n          }, 'top-down');\r\n        }\r\n\r\n        // Add any additional default items\r\n        if (!newNode.recursiveReference || newNode.options.required) {\r\n          const arrayLength = Math.min(Math.max(\r\n            newNode.options.tupleItems + newNode.options.listItems,\r\n            isArray(nodeValue) ? nodeValue.length : 0\r\n          ), newNode.options.maxItems);\r\n          for (let i = newNode.items.length; i < arrayLength; i++) {\r\n            newNode.items.push(getLayoutNode({\r\n              $ref: itemRefPointer,\r\n              dataPointer: newNode.dataPointer,\r\n              recursiveReference: newNode.recursiveReference,\r\n            }, jsf, widgetLibrary));\r\n          }\r\n        }\r\n\r\n        // If needed, add button to add items to array\r\n        if (newNode.options.addable !== false &&\r\n          newNode.options.minItems < newNode.options.maxItems &&\r\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\r\n        ) {\r\n          let buttonText = 'Add';\r\n          if (newNode.options.title) {\r\n            if (/^add\\b/i.test(newNode.options.title)) {\r\n              buttonText = newNode.options.title;\r\n            } else {\r\n              buttonText += ' ' + newNode.options.title;\r\n            }\r\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\r\n            if (/^add\\b/i.test(newNode.name)) {\r\n              buttonText += ' ' + fixTitle(newNode.name);\r\n            } else {\r\n              buttonText = fixTitle(newNode.name);\r\n            }\r\n\r\n            // If newNode doesn't have a title, look for title of parent array item\r\n          } else {\r\n            const parentSchema =\r\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\r\n            if (hasOwn(parentSchema, 'title')) {\r\n              buttonText += ' to ' + parentSchema.title;\r\n            } else {\r\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\r\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\r\n            }\r\n          }\r\n          newNode.items.push({\r\n            _id: _.uniqueId(),\r\n            arrayItem: true,\r\n            arrayItemType: 'list',\r\n            dataPointer: newNode.dataPointer + '/-',\r\n            options: {\r\n              listItems: newNode.options.listItems,\r\n              maxItems: newNode.options.maxItems,\r\n              minItems: newNode.options.minItems,\r\n              removable: false,\r\n              title: buttonText,\r\n              tupleItems: newNode.options.tupleItems,\r\n            },\r\n            recursiveReference: recursive,\r\n            type: '$ref',\r\n            widget: widgetLibrary.getWidget('$ref'),\r\n            $ref: itemRefPointer,\r\n          });\r\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\r\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\r\n              newNode.style.add;\r\n            delete newNode.style.add;\r\n            if (isEmpty(newNode.style)) { delete newNode.style; }\r\n          }\r\n        }\r\n      } else {\r\n        newNode.arrayItem = false;\r\n      }\r\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\r\n      const parentType: string =\r\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\r\n      if (!hasOwn(newNode, 'type')) {\r\n        newNode.type =\r\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\r\n      }\r\n      newNode.arrayItem = parentType === 'array';\r\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\r\n      updateInputOptions(newNode, {}, jsf);\r\n    }\r\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\r\n    return newNode;\r\n  });\r\n  if (jsf.hasRootReference) {\r\n    const fullLayout = _.cloneDeep(formLayout);\r\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\r\n    jsf.layoutRefLibrary[''] = {\r\n      _id: null,\r\n      dataPointer: '',\r\n      dataType: 'object',\r\n      items: fullLayout,\r\n      name: '',\r\n      options: _.cloneDeep(jsf.formOptions.defautWidgetOptions),\r\n      recursiveReference: true,\r\n      required: false,\r\n      type: 'section',\r\n      widget: widgetLibrary.getWidget('section'),\r\n    };\r\n  }\r\n  if (!hasSubmitButton) {\r\n    formLayout.push({\r\n      _id: _.uniqueId(),\r\n      options: { title: 'Submit' },\r\n      type: 'submit',\r\n      widget: widgetLibrary.getWidget('submit'),\r\n    });\r\n  }\r\n  return formLayout;\r\n}\r\n\r\n/**\r\n * 'buildLayoutFromSchema' function\r\n *\r\n * //   jsf -\r\n * //   widgetLibrary -\r\n * //   nodeValue -\r\n * //  { string = '' } schemaPointer -\r\n * //  { string = '' } dataPointer -\r\n * //  { boolean = false } arrayItem -\r\n * //  { string = null } arrayItemType -\r\n * //  { boolean = null } removable -\r\n * //  { boolean = false } forRefLibrary -\r\n * //  { string = '' } dataPointerPrefix -\r\n * //\r\n */\r\nexport function buildLayoutFromSchema(\r\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\r\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\r\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\r\n) {\r\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\r\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\r\n    !hasOwn(schema, 'x-schema-form')\r\n  ) { return null; }\r\n  const newNodeType: string = getInputType(schema);\r\n  if (!isDefined(nodeValue) && (\r\n    jsf.formOptions.setSchemaDefaults === true ||\r\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\r\n  )) {\r\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\r\n  }\r\n  let newNode: any = {\r\n    _id: forRefLibrary ? null : _.uniqueId(),\r\n    arrayItem: arrayItem,\r\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\r\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\r\n    options: {},\r\n    required: isInputRequired(jsf.schema, schemaPointer),\r\n    type: newNodeType,\r\n    widget: widgetLibrary.getWidget(newNodeType),\r\n  };\r\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\r\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\r\n  if (newNode.arrayItem) {\r\n    newNode.arrayItemType = arrayItemType;\r\n    newNode.options.removable = removable !== false;\r\n  }\r\n  const shortDataPointer = removeRecursiveReferences(\r\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\r\n  );\r\n  const recursive = !shortDataPointer.length ||\r\n    shortDataPointer !== dataPointerPrefix + dataPointer;\r\n  if (!jsf.dataMap.has(shortDataPointer)) {\r\n    jsf.dataMap.set(shortDataPointer, new Map());\r\n  }\r\n  updateInputOptions(newNode, schema, jsf);\r\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\r\n  if (!nodeDataMap.has('inputType')) {\r\n    nodeDataMap.set('schemaPointer', schemaPointer);\r\n    nodeDataMap.set('inputType', newNode.type);\r\n    nodeDataMap.set('widget', newNode.widget);\r\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\r\n  }\r\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\r\n    newNode.options.title = fixTitle(newNode.name);\r\n  }\r\n\r\n  if (newNode.dataType === 'object') {\r\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\r\n      nodeDataMap.set('required', schema.required);\r\n    }\r\n    if (isObject(schema.properties)) {\r\n      const newSection: any[] = [];\r\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\r\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\r\n        const unnamedKeys = Object.keys(schema.properties)\r\n          .filter(key => !propertyKeys.includes(key));\r\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\r\n          if (propertyKeys[i] === '*') {\r\n            propertyKeys.splice(i, 1, ...unnamedKeys);\r\n          }\r\n        }\r\n      }\r\n      propertyKeys\r\n        .filter(key => hasOwn(schema.properties, key) ||\r\n          hasOwn(schema, 'additionalProperties')\r\n        )\r\n        .forEach(key => {\r\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\r\n            '/properties/' + key : '/additionalProperties';\r\n          const innerItem = buildLayoutFromSchema(\r\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\r\n            schemaPointer + keySchemaPointer,\r\n            dataPointer + '/' + key,\r\n            false, null, null, forRefLibrary, dataPointerPrefix\r\n          );\r\n          if (innerItem) {\r\n            if (isInputRequired(schema, '/' + key)) {\r\n              innerItem.options.required = true;\r\n              jsf.fieldsRequired = true;\r\n            }\r\n            newSection.push(innerItem);\r\n          }\r\n        });\r\n      if (dataPointer === '' && !forRefLibrary) {\r\n        newNode = newSection;\r\n      } else {\r\n        newNode.items = newSection;\r\n      }\r\n    }\r\n    // TODO: Add patternProperties and additionalProperties inputs?\r\n    // ... possibly provide a way to enter both key names and values?\r\n    // if (isObject(schema.patternProperties)) { }\r\n    // if (isObject(schema.additionalProperties)) { }\r\n\r\n  } else if (newNode.dataType === 'array') {\r\n    newNode.items = [];\r\n    newNode.options.maxItems = Math.min(\r\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\r\n    );\r\n    newNode.options.minItems = Math.max(\r\n      schema.minItems || 0, newNode.options.minItems || 0\r\n    );\r\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\r\n      newNode.options.minItems = 1;\r\n    }\r\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\r\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\r\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\r\n      newNode.options.tupleItems = newNode.options.maxItems;\r\n      newNode.options.listItems = 0;\r\n    } else if (newNode.options.maxItems <\r\n      newNode.options.tupleItems + newNode.options.listItems\r\n    ) {\r\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\r\n    } else if (newNode.options.minItems >\r\n      newNode.options.tupleItems + newNode.options.listItems\r\n    ) {\r\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\r\n    }\r\n    if (!nodeDataMap.has('maxItems')) {\r\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\r\n      nodeDataMap.set('minItems', newNode.options.minItems);\r\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\r\n      nodeDataMap.set('listItems', newNode.options.listItems);\r\n    }\r\n    if (!jsf.arrayMap.has(shortDataPointer)) {\r\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\r\n    }\r\n    removable = newNode.options.removable !== false;\r\n    let additionalItemsSchemaPointer: string = null;\r\n\r\n    // If 'items' is an array = tuple items\r\n    if (isArray(schema.items)) {\r\n      newNode.items = [];\r\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\r\n        let newItem: any;\r\n        const itemRefPointer = removeRecursiveReferences(\r\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\r\n        );\r\n        const itemRecursive = !itemRefPointer.length ||\r\n          itemRefPointer !== shortDataPointer + '/' + i;\r\n\r\n        // If removable, add tuple item layout to layoutRefLibrary\r\n        if (removable && i >= newNode.options.minItems) {\r\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\r\n            // Set to null first to prevent recursive reference from causing endless loop\r\n            jsf.layoutRefLibrary[itemRefPointer] = null;\r\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\r\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\r\n              schemaPointer + '/items/' + i,\r\n              itemRecursive ? '' : dataPointer + '/' + i,\r\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\r\n            );\r\n            if (itemRecursive) {\r\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\r\n            }\r\n          }\r\n          newItem = getLayoutNode({\r\n            $ref: itemRefPointer,\r\n            dataPointer: dataPointer + '/' + i,\r\n            recursiveReference: itemRecursive,\r\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\r\n        } else {\r\n          newItem = buildLayoutFromSchema(\r\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\r\n            schemaPointer + '/items/' + i,\r\n            dataPointer + '/' + i,\r\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\r\n          );\r\n        }\r\n        if (newItem) { newNode.items.push(newItem); }\r\n      }\r\n\r\n      // If 'additionalItems' is an object = additional list items, after tuple items\r\n      if (isObject(schema.additionalItems)) {\r\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\r\n      }\r\n\r\n      // If 'items' is an object = list items only (no tuple items)\r\n    } else if (isObject(schema.items)) {\r\n      additionalItemsSchemaPointer = schemaPointer + '/items';\r\n    }\r\n\r\n    if (additionalItemsSchemaPointer) {\r\n      const itemRefPointer = removeRecursiveReferences(\r\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\r\n      );\r\n      const itemRecursive = !itemRefPointer.length ||\r\n        itemRefPointer !== shortDataPointer + '/-';\r\n      const itemSchemaPointer = removeRecursiveReferences(\r\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\r\n      );\r\n      // Add list item layout to layoutRefLibrary\r\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\r\n        // Set to null first to prevent recursive reference from causing endless loop\r\n        jsf.layoutRefLibrary[itemRefPointer] = null;\r\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\r\n          jsf, widgetLibrary, null,\r\n          itemSchemaPointer,\r\n          itemRecursive ? '' : dataPointer + '/-',\r\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\r\n        );\r\n        if (itemRecursive) {\r\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\r\n        }\r\n      }\r\n\r\n      // Add any additional default items\r\n      if (!itemRecursive || newNode.options.required) {\r\n        const arrayLength = Math.min(Math.max(\r\n          itemRecursive ? 0 :\r\n            newNode.options.tupleItems + newNode.options.listItems,\r\n          isArray(nodeValue) ? nodeValue.length : 0\r\n        ), newNode.options.maxItems);\r\n        if (newNode.items.length < arrayLength) {\r\n          for (let i = newNode.items.length; i < arrayLength; i++) {\r\n            newNode.items.push(getLayoutNode({\r\n              $ref: itemRefPointer,\r\n              dataPointer: dataPointer + '/-',\r\n              recursiveReference: itemRecursive,\r\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\r\n          }\r\n        }\r\n      }\r\n\r\n      // If needed, add button to add items to array\r\n      if (newNode.options.addable !== false &&\r\n        newNode.options.minItems < newNode.options.maxItems &&\r\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\r\n      ) {\r\n        let buttonText =\r\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\r\n        const prefix = buttonText ? 'Add ' : 'Add to ';\r\n        if (!buttonText) {\r\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\r\n        }\r\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\r\n        newNode.items.push({\r\n          _id: _.uniqueId(),\r\n          arrayItem: true,\r\n          arrayItemType: 'list',\r\n          dataPointer: newNode.dataPointer + '/-',\r\n          options: {\r\n            listItems: newNode.options.listItems,\r\n            maxItems: newNode.options.maxItems,\r\n            minItems: newNode.options.minItems,\r\n            removable: false,\r\n            title: buttonText,\r\n            tupleItems: newNode.options.tupleItems,\r\n          },\r\n          recursiveReference: itemRecursive,\r\n          type: '$ref',\r\n          widget: widgetLibrary.getWidget('$ref'),\r\n          $ref: itemRefPointer,\r\n        });\r\n      }\r\n    }\r\n\r\n  } else if (newNode.dataType === '$ref') {\r\n    const schemaRef = JsonPointer.compile(schema.$ref);\r\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\r\n    let buttonText = '';\r\n\r\n    // Get newNode title\r\n    if (newNode.options.add) {\r\n      buttonText = newNode.options.add;\r\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\r\n      buttonText =\r\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\r\n\r\n      // If newNode doesn't have a title, look for title of parent array item\r\n    } else {\r\n      const parentSchema =\r\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\r\n      if (hasOwn(parentSchema, 'title')) {\r\n        buttonText = 'Add to ' + parentSchema.title;\r\n      } else {\r\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\r\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\r\n      }\r\n    }\r\n    Object.assign(newNode, {\r\n      recursiveReference: true,\r\n      widget: widgetLibrary.getWidget('$ref'),\r\n      $ref: dataRef,\r\n    });\r\n    Object.assign(newNode.options, {\r\n      removable: false,\r\n      title: buttonText,\r\n    });\r\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\r\n      newNode.options.maxItems =\r\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\r\n    }\r\n\r\n    // Add layout template to layoutRefLibrary\r\n    if (dataRef.length) {\r\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\r\n        // Set to null first to prevent recursive reference from causing endless loop\r\n        jsf.layoutRefLibrary[dataRef] = null;\r\n        const newLayout = buildLayoutFromSchema(\r\n          jsf, widgetLibrary, null, schemaRef, '',\r\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\r\n        );\r\n        if (newLayout) {\r\n          newLayout.recursiveReference = true;\r\n          jsf.layoutRefLibrary[dataRef] = newLayout;\r\n        } else {\r\n          delete jsf.layoutRefLibrary[dataRef];\r\n        }\r\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\r\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\r\n      }\r\n    }\r\n  }\r\n  return newNode;\r\n}\r\n\r\n/**\r\n * 'mapLayout' function\r\n *\r\n * Creates a new layout by running each element in an existing layout through\r\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\r\n * The iteratee is invoked with four arguments: (value, index, layout, path)\r\n *\r\n * The returned layout may be longer (or shorter) then the source layout.\r\n *\r\n * If an item from the source layout returns multiple items (as '*' usually will),\r\n * this function will keep all returned items in-line with the surrounding items.\r\n *\r\n * If an item from the source layout causes an error and returns null, it is\r\n * skipped without error, and the function will still return all non-null items.\r\n *\r\n * //   layout - the layout to map\r\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\r\n *   function - the funciton to invoke on each element\r\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\r\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\r\n * //\r\n */\r\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\r\n  let indexPad = 0;\r\n  let newLayout: any[] = [];\r\n  forEach(layout, (item, index) => {\r\n    const realIndex = +index + indexPad;\r\n    const newLayoutPointer = layoutPointer + '/' + realIndex;\r\n    let newNode: any = copy(item);\r\n    let itemsArray: any[] = [];\r\n    if (isObject(item)) {\r\n      if (hasOwn(item, 'tabs')) {\r\n        item.items = item.tabs;\r\n        delete item.tabs;\r\n      }\r\n      if (hasOwn(item, 'items')) {\r\n        itemsArray = isArray(item.items) ? item.items : [item.items];\r\n      }\r\n    }\r\n    if (itemsArray.length) {\r\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\r\n    }\r\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\r\n    if (!isDefined(newNode)) {\r\n      indexPad--;\r\n    } else {\r\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\r\n      newLayout = newLayout.concat(newNode);\r\n    }\r\n  });\r\n  return newLayout;\r\n}\r\n\r\n/**\r\n * 'getLayoutNode' function\r\n * Copy a new layoutNode from layoutRefLibrary\r\n *\r\n * //   refNode -\r\n * //   layoutRefLibrary -\r\n * //  { any = null } widgetLibrary -\r\n * //  { any = null } nodeValue -\r\n * //  copied layoutNode\r\n */\r\nexport function getLayoutNode(\r\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\r\n) {\r\n\r\n  // If recursive reference and building initial layout, return Add button\r\n  if (refNode.recursiveReference && widgetLibrary) {\r\n    const newLayoutNode = _.cloneDeep(refNode);\r\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\r\n    Object.assign(newLayoutNode, {\r\n      recursiveReference: true,\r\n      widget: widgetLibrary.getWidget('$ref'),\r\n    });\r\n    Object.assign(newLayoutNode.options, {\r\n      removable: false,\r\n      title: 'Add ' + newLayoutNode.$ref,\r\n    });\r\n    return newLayoutNode;\r\n\r\n    // Otherwise, return referenced layout\r\n  } else {\r\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\r\n    // If value defined, build new node from schema (to set array lengths)\r\n    if (isDefined(nodeValue)) {\r\n      newLayoutNode = buildLayoutFromSchema(\r\n        jsf, widgetLibrary, nodeValue,\r\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\r\n        refNode.$ref, newLayoutNode.arrayItem,\r\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\r\n      );\r\n    } else {\r\n      // If value not defined, copy node from layoutRefLibrary\r\n      newLayoutNode = _.cloneDeep(newLayoutNode);\r\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\r\n\r\n        // Reset all _id's in newLayoutNode to unique values\r\n        if (hasOwn(subNode, '_id')) { subNode._id = _.uniqueId(); }\r\n\r\n        // If adding a recursive item, prefix current dataPointer\r\n        // to all dataPointers in new layoutNode\r\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\r\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\r\n        }\r\n      });\r\n    }\r\n    return newLayoutNode;\r\n  }\r\n}\r\n\r\n/**\r\n * 'buildTitleMap' function\r\n *\r\n * //   titleMap -\r\n * //   enumList -\r\n * //  { boolean = true } fieldRequired -\r\n * //  { boolean = true } flatList -\r\n * // { TitleMapItem[] }\r\n */\r\nexport function buildTitleMap(\r\n  titleMap, enumList, fieldRequired = true, flatList = true\r\n) {\r\n  let newTitleMap: TitleMapItem[] = [];\r\n  let hasEmptyValue = false;\r\n  if (titleMap) {\r\n    if (isArray(titleMap)) {\r\n      if (enumList) {\r\n        for (const i of Object.keys(titleMap)) {\r\n          if (isObject(titleMap[i])) { // JSON Form style\r\n            const value = titleMap[i].value;\r\n            if (enumList.includes(value)) {\r\n              const name = titleMap[i].name;\r\n              newTitleMap.push({ name, value });\r\n              if (value === undefined || value === null) { hasEmptyValue = true; }\r\n            }\r\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\r\n            if (i < enumList.length) {\r\n              const name = titleMap[i];\r\n              const value = enumList[i];\r\n              newTitleMap.push({ name, value });\r\n              if (value === undefined || value === null) { hasEmptyValue = true; }\r\n            }\r\n          }\r\n        }\r\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\r\n        newTitleMap = titleMap;\r\n        if (!fieldRequired) {\r\n          hasEmptyValue = !!newTitleMap\r\n            .filter(i => i.value === undefined || i.value === null)\r\n            .length;\r\n        }\r\n      }\r\n    } else if (enumList) { // Alternate JSON Form style, with enum list\r\n      for (const i of Object.keys(enumList)) {\r\n        const value = enumList[i];\r\n        if (hasOwn(titleMap, value)) {\r\n          const name = titleMap[value];\r\n          newTitleMap.push({ name, value });\r\n          if (value === undefined || value === null) { hasEmptyValue = true; }\r\n        }\r\n      }\r\n    } else { // Alternate JSON Form style, without enum list\r\n      for (const value of Object.keys(titleMap)) {\r\n        const name = titleMap[value];\r\n        newTitleMap.push({ name, value });\r\n        if (value === undefined || value === null) { hasEmptyValue = true; }\r\n      }\r\n    }\r\n  } else if (enumList) { // Build map from enum list alone\r\n    for (const i of Object.keys(enumList)) {\r\n      const name = enumList[i];\r\n      const value = enumList[i];\r\n      newTitleMap.push({ name, value });\r\n      if (value === undefined || value === null) { hasEmptyValue = true; }\r\n    }\r\n  } else { // If no titleMap and no enum list, return default map of boolean values\r\n    newTitleMap = [{ name: 'True', value: true }, { name: 'False', value: false }];\r\n  }\r\n\r\n  // Does titleMap have groups?\r\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\r\n    hasEmptyValue = false;\r\n\r\n    // If flatList = true, flatten items & update name to group: name\r\n    if (flatList) {\r\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\r\n        if (hasOwn(title, 'group')) {\r\n          if (isArray(title.items)) {\r\n            groupTitleMap = [\r\n              ...groupTitleMap,\r\n              ...title.items.map(item =>\r\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\r\n              )\r\n            ];\r\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\r\n              hasEmptyValue = true;\r\n            }\r\n          }\r\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\r\n            title.name = `${title.group}: ${title.name}`;\r\n            delete title.group;\r\n            groupTitleMap.push(title);\r\n            if (title.value === undefined || title.value === null) {\r\n              hasEmptyValue = true;\r\n            }\r\n          }\r\n        } else {\r\n          groupTitleMap.push(title);\r\n          if (title.value === undefined || title.value === null) {\r\n            hasEmptyValue = true;\r\n          }\r\n        }\r\n        return groupTitleMap;\r\n      }, []);\r\n\r\n      // If flatList = false, combine items from matching groups\r\n    } else {\r\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\r\n        if (hasOwn(title, 'group')) {\r\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\r\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\r\n          }\r\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\r\n            groupTitleMap[groupTitleMap.length - 1].items\r\n              .push({ name: title.name, value: title.value });\r\n            if (title.value === undefined || title.value === null) {\r\n              hasEmptyValue = true;\r\n            }\r\n          }\r\n        } else {\r\n          groupTitleMap.push(title);\r\n          if (title.value === undefined || title.value === null) {\r\n            hasEmptyValue = true;\r\n          }\r\n        }\r\n        return groupTitleMap;\r\n      }, []);\r\n    }\r\n  }\r\n  if (!fieldRequired && !hasEmptyValue) {\r\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\r\n  }\r\n  return newTitleMap;\r\n}\r\n","export const enValidationMessages: any = { // Default English error messages\r\n  required: 'This field is required.',\r\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\r\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\r\n  pattern: 'Must match pattern: {{requiredPattern}}',\r\n  format: function (error) {\r\n    switch (error.requiredFormat) {\r\n      case 'date':\r\n        return 'Must be a date, like \"2000-12-31\"';\r\n      case 'time':\r\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\r\n      case 'date-time':\r\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\r\n      case 'email':\r\n        return 'Must be an email address, like \"name@example.com\"';\r\n      case 'hostname':\r\n        return 'Must be a hostname, like \"example.com\"';\r\n      case 'ipv4':\r\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\r\n      case 'ipv6':\r\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\r\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\r\n      // case 'uri': case 'uri-reference': case 'uri-template':\r\n      case 'url':\r\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\r\n      case 'uuid':\r\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\r\n      case 'color':\r\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\r\n      case 'json-pointer':\r\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\r\n      case 'relative-json-pointer':\r\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\r\n      case 'regex':\r\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\r\n      default:\r\n        return 'Must be a correctly formatted ' + error.requiredFormat;\r\n    }\r\n  },\r\n  minimum: 'Must be {{minimumValue}} or more',\r\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\r\n  maximum: 'Must be {{maximumValue}} or less',\r\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\r\n  multipleOf: function (error) {\r\n    if ((1 / error.multipleOfValue) % 10 === 0) {\r\n      const decimals = Math.log10(1 / error.multipleOfValue);\r\n      return `Must have ${decimals} or fewer decimal places.`;\r\n    } else {\r\n      return `Must be a multiple of ${error.multipleOfValue}.`;\r\n    }\r\n  },\r\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\r\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\r\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\r\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\r\n  uniqueItems: 'All items must be unique',\r\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\r\n};\r\n","export const frValidationMessages: any = { // French error messages\r\n  required: 'Est obligatoire.',\r\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\r\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\r\n  pattern: 'Doit respecter: {{requiredPattern}}',\r\n  format: function (error) {\r\n    switch (error.requiredFormat) {\r\n      case 'date':\r\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\r\n      case 'time':\r\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\r\n      case 'date-time':\r\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\r\n      case 'email':\r\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\r\n      case 'hostname':\r\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\r\n      case 'ipv4':\r\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\r\n      case 'ipv6':\r\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\r\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\r\n      // case 'uri': case 'uri-reference': case 'uri-template':\r\n      case 'url':\r\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\r\n      case 'uuid':\r\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\r\n      case 'color':\r\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\r\n      case 'json-pointer':\r\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\r\n      case 'relative-json-pointer':\r\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\r\n      case 'regex':\r\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\r\n      default:\r\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\r\n    }\r\n  },\r\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\r\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\r\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\r\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\r\n  multipleOf: function (error) {\r\n    if ((1 / error.multipleOfValue) % 10 === 0) {\r\n      const decimals = Math.log10(1 / error.multipleOfValue);\r\n      return `Doit comporter ${decimals} ou moins de decimales.`;\r\n    } else {\r\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\r\n    }\r\n  },\r\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\r\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\r\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\r\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\r\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\r\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\r\n};\r\n","import _ from 'lodash';\r\nimport Ajv from 'ajv';\r\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\r\nimport {\r\n  buildFormGroup,\r\n  buildFormGroupTemplate,\r\n  formatFormData,\r\n  getControl\r\n  } from './shared/form-group.functions';\r\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\r\nimport { buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences } from './shared/json-schema.functions';\r\nimport { enValidationMessages } from './locale/en-validation-messages';\r\nimport {\r\n  fixTitle,\r\n  forEach,\r\n  hasOwn,\r\n  toTitleCase\r\n  } from './shared/utility.functions';\r\nimport { frValidationMessages } from './locale/fr-validation-messages';\r\nimport {\r\n  hasValue,\r\n  isArray,\r\n  isDefined,\r\n  isEmpty,\r\n  isObject\r\n  } from './shared/validator.functions';\r\nimport { Injectable } from '@angular/core';\r\nimport { JsonPointer } from './shared/jsonpointer.functions';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n\r\nexport interface TitleMapItem {\r\n  name?: string; value?: any; checked?: boolean; group?: string; items?: TitleMapItem[];\r\n}\r\nexport interface ErrorMessages {\r\n  [control_name: string]: { message: string | Function | Object, code: string }[];\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class JsonSchemaFormService {\r\n  JsonFormCompatibility = false;\r\n  ReactJsonSchemaFormCompatibility = false;\r\n  AngularSchemaFormCompatibility = false;\r\n  tpldata: any = {};\r\n\r\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\r\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\r\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\r\n\r\n  formValues: any = {}; // Internal form data (may not have correct types)\r\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\r\n  schema: any = {}; // Internal JSON Schema\r\n  layout: any[] = []; // Internal form layout\r\n  formGroupTemplate: any = {}; // Template used to create formGroup\r\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\r\n  framework: any = null; // Active framework component\r\n  formOptions: any; // Active options, used to configure the form\r\n\r\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\r\n  isValid: boolean = null; // Is current form data valid?\r\n  ajvErrors: any = null; // Ajv errors for current data\r\n  validationErrors: any = null; // Any validation errors for current data\r\n  dataErrors: any = new Map(); //\r\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\r\n  dataChanges: Subject<any> = new Subject(); // Form data observable\r\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\r\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\r\n\r\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\r\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\r\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\r\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\r\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\r\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\r\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\r\n  hasRootReference = false; // Does the form include a recursive reference to itself?\r\n\r\n  language = 'en-US'; // Does the form include a recursive reference to itself?\r\n\r\n  // Default global form options\r\n  defaultFormOptions: any = {\r\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\r\n    // for addSubmit: true = always, false = never,\r\n    // 'auto' = only if layout is undefined (form is built from schema alone)\r\n    debug: false, // Show debugging output?\r\n    disableInvalidSubmit: true, // Disable submit if form invalid?\r\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\r\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\r\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\r\n    framework: 'no-framework', // The framework to load\r\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\r\n    pristine: { errors: true, success: true },\r\n    supressPropertyTitles: false,\r\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\r\n    // true = always set (unless overridden by layout default or formValues)\r\n    // false = never set\r\n    // 'auto' = set in addable components, and everywhere if formValues not set\r\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\r\n    // true = always set (unless overridden by formValues)\r\n    // false = never set\r\n    // 'auto' = set in addable components, and everywhere if formValues not set\r\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\r\n    // true = validate all fields immediately\r\n    // false = only validate fields after they are touched by user\r\n    // 'auto' = validate fields with values immediately, empty fields after they are touched\r\n    widgets: {}, // Any custom widgets to load\r\n    defautWidgetOptions: { // Default options for form control widgets\r\n      listItems: 1, // Number of list items to initially add to arrays with no default value\r\n      addable: true, // Allow adding items to an array or $ref point?\r\n      orderable: true, // Allow reordering items within an array?\r\n      removable: true, // Allow removing items from an array or $ref point?\r\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\r\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\r\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\r\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\r\n      feedback: false, // Show inline feedback icons?\r\n      feedbackOnRender: false, // Show errorMessage on Render?\r\n      notitle: false, // Hide title?\r\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\r\n      readonly: false, // Set control as read only? (not editable, but included in output)\r\n      returnEmptyFields: true, // return values for fields that contain no data?\r\n      validationMessages: {} // set by setLanguage()\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    this.setLanguage(this.language);\r\n  }\r\n\r\n  setLanguage(language: string = 'en-US') {\r\n    this.language = language;\r\n    const validationMessages = language.slice(0, 2) === 'fr' ?\r\n      frValidationMessages : enValidationMessages;\r\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\r\n      _.cloneDeep(validationMessages);\r\n  }\r\n\r\n  getData() { return this.data; }\r\n\r\n  getSchema() { return this.schema; }\r\n\r\n  getLayout() { return this.layout; }\r\n\r\n  resetAllValues() {\r\n    this.JsonFormCompatibility = false;\r\n    this.ReactJsonSchemaFormCompatibility = false;\r\n    this.AngularSchemaFormCompatibility = false;\r\n    this.tpldata = {};\r\n    this.validateFormData = null;\r\n    this.formValues = {};\r\n    this.schema = {};\r\n    this.layout = [];\r\n    this.formGroupTemplate = {};\r\n    this.formGroup = null;\r\n    this.framework = null;\r\n    this.data = {};\r\n    this.validData = null;\r\n    this.isValid = null;\r\n    this.validationErrors = null;\r\n    this.arrayMap = new Map();\r\n    this.dataMap = new Map();\r\n    this.dataRecursiveRefMap = new Map();\r\n    this.schemaRecursiveRefMap = new Map();\r\n    this.layoutRefLibrary = {};\r\n    this.schemaRefLibrary = {};\r\n    this.templateRefLibrary = {};\r\n    this.formOptions = _.cloneDeep(this.defaultFormOptions);\r\n  }\r\n\r\n  /**\r\n   * 'buildRemoteError' function\r\n   *\r\n   * Example errors:\r\n   * {\r\n   *   last_name: [ {\r\n   *     message: 'Last name must by start with capital letter.',\r\n   *     code: 'capital_letter'\r\n   *   } ],\r\n   *   email: [ {\r\n   *     message: 'Email must be from example.com domain.',\r\n   *     code: 'special_domain'\r\n   *   }, {\r\n   *     message: 'Email must contain an @ symbol.',\r\n   *     code: 'at_symbol'\r\n   *   } ]\r\n   * }\r\n   * //{ErrorMessages} errors\r\n   */\r\n  buildRemoteError(errors: ErrorMessages) {\r\n    forEach(errors, (value, key) => {\r\n      if (key in this.formGroup.controls) {\r\n        for (const error of value) {\r\n          const err = {};\r\n          err[error['code']] = error['message'];\r\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  validateData(newValue: any, updateSubscriptions = true): void {\r\n\r\n    // Format raw form data to correct data types\r\n    this.data = formatFormData(\r\n      newValue, this.dataMap, this.dataRecursiveRefMap,\r\n      this.arrayMap, this.formOptions.returnEmptyFields\r\n    );\r\n    this.isValid = this.validateFormData(this.data);\r\n    this.validData = this.isValid ? this.data : null;\r\n    const compileErrors = errors => {\r\n      const compiledErrors = {};\r\n      (errors || []).forEach(error => {\r\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\r\n        compiledErrors[error.dataPath].push(error.message);\r\n      });\r\n      return compiledErrors;\r\n    };\r\n    this.ajvErrors = this.validateFormData.errors;\r\n    this.validationErrors = compileErrors(this.validateFormData.errors);\r\n    if (updateSubscriptions) {\r\n      this.dataChanges.next(this.data);\r\n      this.isValidChanges.next(this.isValid);\r\n      this.validationErrorChanges.next(this.ajvErrors);\r\n    }\r\n  }\r\n\r\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\r\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\r\n  }\r\n\r\n  buildFormGroup() {\r\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\r\n    if (this.formGroup) {\r\n      this.compileAjvSchema();\r\n      this.validateData(this.formGroup.value);\r\n\r\n      // Set up observables to emit data and validation info when form data changes\r\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\r\n      this.formValueSubscription = this.formGroup.valueChanges\r\n        .subscribe(formValue => this.validateData(formValue));\r\n    }\r\n  }\r\n\r\n  buildLayout(widgetLibrary: any) {\r\n    this.layout = buildLayout(this, widgetLibrary);\r\n  }\r\n\r\n  setOptions(newOptions: any) {\r\n    if (isObject(newOptions)) {\r\n      const addOptions = _.cloneDeep(newOptions);\r\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\r\n      if (isObject(addOptions.defaultOptions)) {\r\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\r\n        delete addOptions.defaultOptions;\r\n      }\r\n      if (isObject(addOptions.defautWidgetOptions)) {\r\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\r\n        delete addOptions.defautWidgetOptions;\r\n      }\r\n      Object.assign(this.formOptions, addOptions);\r\n\r\n      // convert disableErrorState / disableSuccessState to enable...\r\n      const globalDefaults = this.formOptions.defautWidgetOptions;\r\n      ['ErrorState', 'SuccessState']\r\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\r\n        .forEach(suffix => {\r\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\r\n          delete globalDefaults['disable' + suffix];\r\n        });\r\n    }\r\n  }\r\n\r\n  compileAjvSchema() {\r\n    if (!this.validateFormData) {\r\n\r\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\r\n      if (Array.isArray(this.schema.properties['ui:order'])) {\r\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\r\n        delete this.schema.properties['ui:order'];\r\n      }\r\n      this.ajv.removeSchema(this.schema);\r\n      this.validateFormData = this.ajv.compile(this.schema);\r\n    }\r\n  }\r\n\r\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\r\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\r\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\r\n  }\r\n\r\n  buildSchemaFromLayout(layout?: any): any {\r\n    if (layout) { return buildSchemaFromLayout(layout); }\r\n    this.schema = buildSchemaFromLayout(this.layout);\r\n  }\r\n\r\n\r\n  setTpldata(newTpldata: any = {}): void {\r\n    this.tpldata = newTpldata;\r\n  }\r\n\r\n  parseText(\r\n    text = '', value: any = {}, values: any = {}, key: number | string = null\r\n  ): string {\r\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\r\n    return text.replace(/{{(.+?)}}/g, (...a) =>\r\n      this.parseExpression(a[1], value, values, key, this.tpldata)\r\n    );\r\n  }\r\n\r\n  parseExpression(\r\n    expression = '', value: any = {}, values: any = {},\r\n    key: number | string = null, tpldata: any = null\r\n  ) {\r\n    if (typeof expression !== 'string') { return ''; }\r\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\r\n    expression = expression.trim();\r\n    if ((expression[0] === '\\'' || expression[0] === '\"') &&\r\n      expression[0] === expression[expression.length - 1] &&\r\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\r\n    ) {\r\n      return expression.slice(1, expression.length - 1);\r\n    }\r\n    if (expression === 'idx' || expression === '$index') { return index; }\r\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\r\n    if (['\"', '\\'', ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\r\n      const pointer = JsonPointer.parseObjectPath(expression);\r\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\r\n        JsonPointer.get(value, pointer.slice(1)) :\r\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\r\n          JsonPointer.get(values, pointer.slice(1)) :\r\n          pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\r\n            JsonPointer.get(tpldata, pointer.slice(1)) :\r\n            JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\r\n    }\r\n    if (expression.indexOf('[idx]') > -1) {\r\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\r\n    }\r\n    if (expression.indexOf('[$index]') > -1) {\r\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\r\n    }\r\n    // TODO: Improve expression evaluation by parsing quoted strings first\r\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\r\n    if (expression.indexOf('||') > -1) {\r\n      return expression.split('||').reduce((all, term) =>\r\n        all || this.parseExpression(term, value, values, key, tpldata), ''\r\n      );\r\n    }\r\n    if (expression.indexOf('&&') > -1) {\r\n      return expression.split('&&').reduce((all, term) =>\r\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\r\n      ).trim();\r\n    }\r\n    if (expression.indexOf('+') > -1) {\r\n      return expression.split('+')\r\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\r\n        .join('');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  setArrayItemTitle(\r\n    parentCtx: any = {}, childNode: any = null, index: number = null\r\n  ): string {\r\n    const parentNode = parentCtx.layoutNode;\r\n    const parentValues: any = this.getFormControlValue(parentCtx);\r\n    const isArrayItem =\r\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\r\n    const text = JsonPointer.getFirst(\r\n      isArrayItem && childNode.type !== '$ref' ? [\r\n        [childNode, '/options/legend'],\r\n        [childNode, '/options/title'],\r\n        [parentNode, '/options/title'],\r\n        [parentNode, '/options/legend'],\r\n      ] : [\r\n          [childNode, '/options/title'],\r\n          [childNode, '/options/legend'],\r\n          [parentNode, '/options/title'],\r\n          [parentNode, '/options/legend']\r\n        ]\r\n    );\r\n    if (!text) { return text; }\r\n    const childValue = isArray(parentValues) && index < parentValues.length ?\r\n      parentValues[index] : parentValues;\r\n    return this.parseText(text, childValue, parentValues, index);\r\n  }\r\n\r\n  setItemTitle(ctx: any) {\r\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\r\n      null :\r\n      this.parseText(\r\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\r\n        this.getFormControlValue(this),\r\n        (this.getFormControlGroup(this) || <any>{}).value,\r\n        ctx.dataIndex[ctx.dataIndex.length - 1]\r\n      );\r\n  }\r\n\r\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\r\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\r\n    let result = true;\r\n    if (hasValue((layoutNode.options || {}).condition)) {\r\n      if (typeof layoutNode.options.condition === 'string') {\r\n        let pointer = layoutNode.options.condition;\r\n        if (hasValue(arrayIndex)) {\r\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\r\n        }\r\n        pointer = JsonPointer.parseObjectPath(pointer);\r\n        result = !!JsonPointer.get(this.data, pointer);\r\n        if (!result && pointer[0] === 'model') {\r\n          result = !!JsonPointer.get({ model: this.data }, pointer);\r\n        }\r\n      } else if (typeof layoutNode.options.condition === 'function') {\r\n        result = layoutNode.options.condition(this.data);\r\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\r\n        try {\r\n          const dynFn = new Function(\r\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\r\n          );\r\n          result = dynFn(this.data, dataIndex);\r\n        } catch (e) {\r\n          result = true;\r\n          console.error('condition functionBody errored out on evaluation: ' + layoutNode.options.condition.functionBody);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  initializeControl(ctx: any, bind = true): boolean {\r\n    if (!isObject(ctx)) { return false; }\r\n    if (isEmpty(ctx.options)) {\r\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\r\n        ctx.layoutNode.options : _.cloneDeep(this.formOptions);\r\n    }\r\n    ctx.formControl = this.getFormControl(ctx);\r\n    ctx.boundControl = bind && !!ctx.formControl;\r\n    if (ctx.formControl) {\r\n      ctx.controlName = this.getFormControlName(ctx);\r\n      ctx.controlValue = ctx.formControl.value;\r\n      ctx.controlDisabled = ctx.formControl.disabled;\r\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\r\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\r\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\r\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\r\n      ctx.formControl.statusChanges.subscribe(status =>\r\n        ctx.options.errorMessage = status === 'VALID' ? null :\r\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\r\n      );\r\n      ctx.formControl.valueChanges.subscribe(value => {\r\n        if (!_.isEqual(ctx.controlValue, value)) { ctx.controlValue = value; }\r\n      });\r\n    } else {\r\n      ctx.controlName = ctx.layoutNode.name;\r\n      ctx.controlValue = ctx.layoutNode.value || null;\r\n      const dataPointer = this.getDataPointer(ctx);\r\n      if (bind && dataPointer) {\r\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\r\n      }\r\n    }\r\n    return ctx.boundControl;\r\n  }\r\n\r\n  formatErrors(errors: any, validationMessages: any = {}): string {\r\n    if (isEmpty(errors)) { return null; }\r\n    if (!isObject(validationMessages)) { validationMessages = {}; }\r\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\r\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\r\n    const formatError = (error) => typeof error === 'object' ?\r\n      Object.keys(error).map(key =>\r\n        error[key] === true ? addSpaces(key) :\r\n          error[key] === false ? 'Not ' + addSpaces(key) :\r\n            addSpaces(key) + ': ' + formatError(error[key])\r\n      ).join(', ') :\r\n      addSpaces(error.toString());\r\n    const messages = [];\r\n    return Object.keys(errors)\r\n      // Hide 'required' error, unless it is the only one\r\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\r\n      .map(errorKey =>\r\n        // If validationMessages is a string, return it\r\n        typeof validationMessages === 'string' ? validationMessages :\r\n          // If custom error message is a function, return function result\r\n          typeof validationMessages[errorKey] === 'function' ?\r\n            validationMessages[errorKey](errors[errorKey]) :\r\n            // If custom error message is a string, replace placeholders and return\r\n            typeof validationMessages[errorKey] === 'string' ?\r\n              // Does error message have any {{property}} placeholders?\r\n              !/{{.+?}}/.test(validationMessages[errorKey]) ?\r\n                validationMessages[errorKey] :\r\n                // Replace {{property}} placeholders with values\r\n                Object.keys(errors[errorKey])\r\n                  .reduce((errorMessage, errorProperty) => errorMessage.replace(\r\n                    new RegExp('{{' + errorProperty + '}}', 'g'),\r\n                    errors[errorKey][errorProperty]\r\n                  ), validationMessages[errorKey]) :\r\n              // If no custom error message, return formatted error data instead\r\n              addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\r\n      ).join('<br>');\r\n  }\r\n\r\n  updateValue(ctx: any, value: any): void {\r\n\r\n    // Set value of current control\r\n    ctx.controlValue = value;\r\n    if (ctx.boundControl) {\r\n      ctx.formControl.setValue(value);\r\n      ctx.formControl.markAsDirty();\r\n    }\r\n    ctx.layoutNode.value = value;\r\n\r\n    // Set values of any related controls in copyValueTo array\r\n    if (isArray(ctx.options.copyValueTo)) {\r\n      for (const item of ctx.options.copyValueTo) {\r\n        const targetControl = getControl(this.formGroup, item);\r\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\r\n          targetControl.setValue(value);\r\n          targetControl.markAsDirty();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\r\n    const formArray = <FormArray>this.getFormControl(ctx);\r\n\r\n    // Remove all existing items\r\n    while (formArray.value.length) { formArray.removeAt(0); }\r\n\r\n    // Re-add an item for each checked box\r\n    const refPointer = removeRecursiveReferences(\r\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\r\n    );\r\n    for (const checkboxItem of checkboxList) {\r\n      if (checkboxItem.checked) {\r\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\r\n        newFormControl.setValue(checkboxItem.value);\r\n        formArray.push(newFormControl);\r\n      }\r\n    }\r\n    formArray.markAsDirty();\r\n  }\r\n\r\n  getFormControl(ctx: any): AbstractControl {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\r\n      ctx.layoutNode.type === '$ref'\r\n    ) { return null; }\r\n    return getControl(this.formGroup, this.getDataPointer(ctx));\r\n  }\r\n\r\n  getFormControlValue(ctx: any): AbstractControl {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\r\n      ctx.layoutNode.type === '$ref'\r\n    ) { return null; }\r\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\r\n    return control ? control.value : null;\r\n  }\r\n\r\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\r\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\r\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\r\n  }\r\n\r\n  getFormControlName(ctx: any): string {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\r\n    ) { return null; }\r\n    return JsonPointer.toKey(this.getDataPointer(ctx));\r\n  }\r\n\r\n  getLayoutArray(ctx: any): any[] {\r\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\r\n  }\r\n\r\n  getParentNode(ctx: any): any {\r\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\r\n  }\r\n\r\n  getDataPointer(ctx: any): string {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\r\n    ) { return null; }\r\n    return JsonPointer.toIndexedPointer(\r\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\r\n    );\r\n  }\r\n\r\n  getLayoutPointer(ctx: any): string {\r\n    if (!hasValue(ctx.layoutIndex)) { return null; }\r\n    return '/' + ctx.layoutIndex.join('/items/');\r\n  }\r\n\r\n  isControlBound(ctx: any): boolean {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\r\n    ) { return false; }\r\n    const controlGroup = this.getFormControlGroup(ctx);\r\n    const name = this.getFormControlName(ctx);\r\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\r\n  }\r\n\r\n  addItem(ctx: any, name?: string): boolean {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\r\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\r\n    ) { return false; }\r\n\r\n    // Create a new Angular form control from a template in templateRefLibrary\r\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\r\n\r\n    // Add the new form control to the parent formArray or formGroup\r\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\r\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\r\n    } else { // Add new $ref item to formGroup\r\n      (<FormGroup>this.getFormControlGroup(ctx))\r\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\r\n    }\r\n\r\n    // Copy a new layoutNode from layoutRefLibrary\r\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\r\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\r\n    if (ctx.layoutNode.arrayItemType) {\r\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\r\n    } else {\r\n      delete newLayoutNode.arrayItemType;\r\n    }\r\n    if (name) {\r\n      newLayoutNode.name = name;\r\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\r\n      newLayoutNode.options.title = fixTitle(name);\r\n    }\r\n\r\n    // Add the new layoutNode to the form layout\r\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\r\n\r\n    return true;\r\n  }\r\n\r\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\r\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\r\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\r\n    ) { return false; }\r\n\r\n    // Move item in the formArray\r\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\r\n    const arrayItem = formArray.at(oldIndex);\r\n    formArray.removeAt(oldIndex);\r\n    formArray.insert(newIndex, arrayItem);\r\n    formArray.updateValueAndValidity();\r\n\r\n    // Move layout item\r\n    const layoutArray = this.getLayoutArray(ctx);\r\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\r\n    return true;\r\n  }\r\n\r\n  removeItem(ctx: any): boolean {\r\n    if (\r\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\r\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\r\n    ) { return false; }\r\n\r\n    // Remove the Angular form control from the parent formArray or formGroup\r\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\r\n      (<FormArray>this.getFormControlGroup(ctx))\r\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\r\n    } else { // Remove $ref item from formGroup\r\n      (<FormGroup>this.getFormControlGroup(ctx))\r\n        .removeControl(this.getFormControlName(ctx));\r\n    }\r\n\r\n    // Remove layoutNode from layout\r\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\r\n    return true;\r\n  }\r\n}\r\n","import _ from 'lodash';\r\n\r\n/**\r\n * 'convertSchemaToDraft6' function\r\n *\r\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\r\n *\r\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\r\n *   https://github.com/geraintluff/json-schema-compatibility\r\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\r\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\r\n * And additional details from the official JSON Schema documentation:\r\n *   http://json-schema.org\r\n *\r\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\r\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\r\n * // { object } - JSON schema (draft 6)\r\n */\r\nexport interface OptionObject { changed?: boolean; draft?: number; }\r\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\r\n  let draft: number = options.draft || null;\r\n  let changed: boolean = options.changed || false;\r\n\r\n  if (typeof schema !== 'object') { return schema; }\r\n  if (typeof schema.map === 'function') {\r\n    return [...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft }))];\r\n  }\r\n  let newSchema = { ...schema };\r\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\r\n\r\n  if (typeof newSchema.$schema === 'string' &&\r\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\r\n  ) {\r\n    draft = newSchema.$schema[30];\r\n  }\r\n\r\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\r\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\r\n  if (newSchema.contentEncoding) {\r\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\r\n    delete newSchema.contentEncoding;\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v1-v3 'extends' to 'allOf'\r\n  if (typeof newSchema.extends === 'object') {\r\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\r\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\r\n      [convertSchemaToDraft6(newSchema.extends, { changed, draft })];\r\n    delete newSchema.extends;\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v1-v3 'disallow' to 'not'\r\n  if (newSchema.disallow) {\r\n    if (typeof newSchema.disallow === 'string') {\r\n      newSchema.not = { type: newSchema.disallow };\r\n    } else if (typeof newSchema.disallow.map === 'function') {\r\n      newSchema.not = {\r\n        anyOf: newSchema.disallow\r\n          .map(type => typeof type === 'object' ? type : { type })\r\n      };\r\n    }\r\n    delete newSchema.disallow;\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v3 string 'dependencies' properties to arrays\r\n  if (typeof newSchema.dependencies === 'object' &&\r\n    Object.keys(newSchema.dependencies)\r\n      .some(key => typeof newSchema.dependencies[key] === 'string')\r\n  ) {\r\n    newSchema.dependencies = { ...newSchema.dependencies };\r\n    Object.keys(newSchema.dependencies)\r\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\r\n      .forEach(key => newSchema.dependencies[key] = [newSchema.dependencies[key]]);\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v1 'maxDecimal' to 'multipleOf'\r\n  if (typeof newSchema.maxDecimal === 'number') {\r\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\r\n    delete newSchema.divisibleBy;\r\n    changed = true;\r\n    if (!draft || draft === 2) { draft = 1; }\r\n  }\r\n\r\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\r\n  if (typeof newSchema.divisibleBy === 'number') {\r\n    newSchema.multipleOf = newSchema.divisibleBy;\r\n    delete newSchema.divisibleBy;\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\r\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\r\n    newSchema.exclusiveMinimum = newSchema.minimum;\r\n    delete newSchema.minimum;\r\n    changed = true;\r\n    if (!draft) { draft = 2; }\r\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\r\n    delete newSchema.minimumCanEqual;\r\n    changed = true;\r\n    if (!draft) { draft = 2; }\r\n  }\r\n\r\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\r\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\r\n    newSchema.exclusiveMinimum = newSchema.minimum;\r\n    delete newSchema.minimum;\r\n    changed = true;\r\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\r\n    delete newSchema.exclusiveMinimum;\r\n    changed = true;\r\n  }\r\n\r\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\r\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\r\n    newSchema.exclusiveMaximum = newSchema.maximum;\r\n    delete newSchema.maximum;\r\n    changed = true;\r\n    if (!draft) { draft = 2; }\r\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\r\n    delete newSchema.maximumCanEqual;\r\n    changed = true;\r\n    if (!draft) { draft = 2; }\r\n  }\r\n\r\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\r\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\r\n    newSchema.exclusiveMaximum = newSchema.maximum;\r\n    delete newSchema.maximum;\r\n    changed = true;\r\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\r\n    delete newSchema.exclusiveMaximum;\r\n    changed = true;\r\n  }\r\n\r\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\r\n  // and convert them into object 'required' arrays and 'dependencies' objects\r\n  if (typeof newSchema.properties === 'object') {\r\n    const properties = { ...newSchema.properties };\r\n    const requiredKeys = Array.isArray(newSchema.required) ?\r\n      new Set(newSchema.required) : new Set();\r\n\r\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\r\n    if (draft === 1 || draft === 2 ||\r\n      Object.keys(properties).some(key => properties[key].optional === true)\r\n    ) {\r\n      Object.keys(properties)\r\n        .filter(key => properties[key].optional !== true)\r\n        .forEach(key => requiredKeys.add(key));\r\n      changed = true;\r\n      if (!draft) { draft = 2; }\r\n    }\r\n\r\n    // Convert v3 boolean 'required' properties to 'required' array\r\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\r\n      Object.keys(properties)\r\n        .filter(key => properties[key].required === true)\r\n        .forEach(key => requiredKeys.add(key));\r\n      changed = true;\r\n    }\r\n\r\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\r\n\r\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\r\n    if (Object.keys(properties).some(key => properties[key].requires)) {\r\n      const dependencies = typeof newSchema.dependencies === 'object' ?\r\n        { ...newSchema.dependencies } : {};\r\n      Object.keys(properties)\r\n        .filter(key => properties[key].requires)\r\n        .forEach(key => dependencies[key] =\r\n          typeof properties[key].requires === 'string' ?\r\n            [properties[key].requires] : properties[key].requires\r\n        );\r\n      newSchema.dependencies = dependencies;\r\n      changed = true;\r\n      if (!draft) { draft = 2; }\r\n    }\r\n\r\n    newSchema.properties = properties;\r\n  }\r\n\r\n  // Revove v1-v2 boolean 'optional' key\r\n  if (typeof newSchema.optional === 'boolean') {\r\n    delete newSchema.optional;\r\n    changed = true;\r\n    if (!draft) { draft = 2; }\r\n  }\r\n\r\n  // Revove v1-v2 'requires' key\r\n  if (newSchema.requires) {\r\n    delete newSchema.requires;\r\n  }\r\n\r\n  // Revove v3 boolean 'required' key\r\n  if (typeof newSchema.required === 'boolean') {\r\n    delete newSchema.required;\r\n  }\r\n\r\n  // Convert id to $id\r\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\r\n    if (newSchema.id.slice(-1) === '#') {\r\n      newSchema.id = newSchema.id.slice(0, -1);\r\n    }\r\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\r\n    delete newSchema.id;\r\n    changed = true;\r\n  }\r\n\r\n  // Check if v1-v3 'any' or object types will be converted\r\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\r\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\r\n    !simpleTypes.includes(newSchema.type)\r\n  )) {\r\n    changed = true;\r\n  }\r\n\r\n  // If schema changed, update or remove $schema identifier\r\n  if (typeof newSchema.$schema === 'string' &&\r\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\r\n  ) {\r\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\r\n    changed = true;\r\n  } else if (changed && typeof newSchema.$schema === 'string') {\r\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\r\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\r\n      newSchema.description += '\\n' + addToDescription;\r\n    } else {\r\n      newSchema.description = addToDescription;\r\n    }\r\n    delete newSchema.$schema;\r\n  }\r\n\r\n  // Convert v1-v3 'any' and object types\r\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\r\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\r\n    !simpleTypes.includes(newSchema.type)\r\n  )) {\r\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\r\n    if (typeof newSchema.type === 'string') {\r\n      // Convert string 'any' type to array of all standard types\r\n      if (newSchema.type === 'any') {\r\n        newSchema.type = simpleTypes;\r\n        // Delete non-standard string type\r\n      } else {\r\n        delete newSchema.type;\r\n      }\r\n    } else if (typeof newSchema.type === 'object') {\r\n      if (typeof newSchema.type.every === 'function') {\r\n        // If array of strings, only allow standard types\r\n        if (newSchema.type.every(type => typeof type === 'string')) {\r\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\r\n            newSchema.type = simpleTypes :\r\n            newSchema.type.filter(type => simpleTypes.includes(type));\r\n          // If type is an array with objects, convert the current schema to an 'anyOf' array\r\n        } else if (newSchema.type.length > 1) {\r\n          const arrayKeys = ['additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\r\n          const numberKeys = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\r\n          const objectKeys = ['maxProperties', 'minProperties', 'required', 'additionalProperties',\r\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\r\n          const stringKeys = ['maxLength', 'minLength', 'pattern', 'format'];\r\n          const filterKeys = {\r\n            'array': [...numberKeys, ...objectKeys, ...stringKeys],\r\n            'integer': [...arrayKeys, ...objectKeys, ...stringKeys],\r\n            'number': [...arrayKeys, ...objectKeys, ...stringKeys],\r\n            'object': [...arrayKeys, ...numberKeys, ...stringKeys],\r\n            'string': [...arrayKeys, ...numberKeys, ...objectKeys],\r\n            'all': [...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys],\r\n          };\r\n          const anyOf = [];\r\n          for (const type of newSchema.type) {\r\n            const newType = typeof type === 'string' ? { type } : { ...type };\r\n            Object.keys(newSchema)\r\n              .filter(key => !newType.hasOwnProperty(key) &&\r\n                ![...(filterKeys[newType.type] || filterKeys.all), 'type', 'default']\r\n                  .includes(key)\r\n              )\r\n              .forEach(key => newType[key] = newSchema[key]);\r\n            anyOf.push(newType);\r\n          }\r\n          newSchema = newSchema.hasOwnProperty('default') ?\r\n            { anyOf, default: newSchema.default } : { anyOf };\r\n          // If type is an object, merge it with the current schema\r\n        } else {\r\n          const typeSchema = newSchema.type;\r\n          delete newSchema.type;\r\n          Object.assign(newSchema, typeSchema);\r\n        }\r\n      }\r\n    } else {\r\n      delete newSchema.type;\r\n    }\r\n  }\r\n\r\n  // Convert sub schemas\r\n  Object.keys(newSchema)\r\n    .filter(key => typeof newSchema[key] === 'object')\r\n    .forEach(key => {\r\n      if (\r\n        ['definitions', 'dependencies', 'properties', 'patternProperties']\r\n          .includes(key) && typeof newSchema[key].map !== 'function'\r\n      ) {\r\n        const newKey = {};\r\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\r\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\r\n        );\r\n        newSchema[key] = newKey;\r\n      } else if (\r\n        ['items', 'additionalItems', 'additionalProperties',\r\n          'allOf', 'anyOf', 'oneOf', 'not'].includes(key)\r\n      ) {\r\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\r\n      } else {\r\n        newSchema[key] = _.cloneDeep(newSchema[key]);\r\n      }\r\n    });\r\n\r\n  return newSchema;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Framework {\r\n  name: string;\r\n  framework: any;\r\n  widgets?: { [key: string]: any } = {};\r\n  stylesheets?: string[] = [];\r\n  scripts?: string[] = [];\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit\r\n  } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'add-reference-widget',\r\n  template: `\r\n    <button *ngIf=\"showAddButton\"\r\n      [class]=\"options?.fieldHtmlClass || ''\"\r\n      [disabled]=\"options?.readonly\"\r\n      (click)=\"addItem($event)\">\r\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\r\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\r\n    </button>`,\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class AddReferenceComponent implements OnInit {\r\n  options: any;\r\n  itemCount: number;\r\n  previousLayoutIndex: number[];\r\n  previousDataIndex: number[];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n  }\r\n\r\n  get showAddButton(): boolean {\r\n    return !this.layoutNode.arrayItem ||\r\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\r\n  }\r\n\r\n  addItem(event) {\r\n    event.preventDefault();\r\n    this.jsf.addItem(this);\r\n  }\r\n\r\n  get buttonText(): string {\r\n    const parent: any = {\r\n      dataIndex: this.dataIndex.slice(0, -1),\r\n      layoutIndex: this.layoutIndex.slice(0, -1),\r\n      layoutNode: this.jsf.getParentNode(this)\r\n    };\r\n    return parent.layoutNode.add ||\r\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'button-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <button\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [name]=\"controlName\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (click)=\"updateValue($event)\">\r\n        <span *ngIf=\"options?.icon || options?.title\"\r\n          [class]=\"options?.icon\"\r\n          [innerHTML]=\"options?.title\"></span>\r\n      </button>\r\n    </div>`,\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    if (typeof this.options.onClick === 'function') {\r\n      this.options.onClick(event);\r\n    } else {\r\n      this.jsf.updateValue(this, event.target.value);\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'checkbox-widget',\r\n  template: `\r\n    <label\r\n      [attr.for]=\"'control' + layoutNode?._id\"\r\n      [class]=\"options?.itemLabelHtmlClass || ''\">\r\n      <input *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\r\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n          (' ' + (options?.style?.unselected || '')))\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        type=\"checkbox\">\r\n      <input *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [checked]=\"isChecked ? 'checked' : null\"\r\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\r\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n          (' ' + (options?.style?.unselected || '')))\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [value]=\"controlValue\"\r\n        type=\"checkbox\"\r\n        (change)=\"updateValue($event)\">\r\n      <span *ngIf=\"options?.title\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></span>\r\n    </label>`,\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  trueValue: any = true;\r\n  falseValue: any = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (this.controlValue === null || this.controlValue === undefined) {\r\n      this.controlValue = this.options.title;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    event.preventDefault();\r\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.jsf.getFormControlValue(this) === this.trueValue;\r\n  }\r\n}\r\n","/**\r\n * 'dateToString' function\r\n *\r\n * //  { Date | string } date\r\n * //   options\r\n * // { string }\r\n */\r\nexport function dateToString(date, options: any = {}) {\r\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\r\n  // TODO: Use options.locale to change default format and names\r\n  // const locale = options.locale || 'en-US';\r\n  if (typeof date === 'string') { date = stringToDate(date); }\r\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\r\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'];\r\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  return dateFormat\r\n    .replace(/YYYY/ig, date.getFullYear() + '')\r\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\r\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\r\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\r\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\r\n    .replace(/M/ig, (date.getMonth() + 1) + '')\r\n    .replace(/DDDD/ig, longDays[date.getDay()])\r\n    .replace(/DDD/ig, shortDays[date.getDay()])\r\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\r\n    .replace(/D/ig, date.getDate() + '')\r\n    .replace(/S/ig, ordinal(date.getDate()));\r\n}\r\n\r\nexport function ordinal(number: number|string): string {\r\n  if (typeof number === 'number') { number = number + ''; }\r\n  const last = number.slice(-1);\r\n  const nextToLast = number.slice(-2, 1);\r\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\r\n}\r\n\r\n/**\r\n * 'stringToDate' function\r\n *\r\n * //  { string } dateString\r\n * // { Date }\r\n */\r\nexport function stringToDate(dateString) {\r\n  const getDate: string = findDate(dateString);\r\n  if (!getDate) { return null; }\r\n  let dateParts: number[] = [];\r\n  // Split x-y-z to [x, y, z]\r\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\r\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\r\n  // Split xxxxyyzz to [xxxx, yy, zz]\r\n  } else if (/^\\d{8}$/.test(getDate)) {\r\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\r\n  }\r\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\r\n  // Check for [YYYY, MM, DD]\r\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\r\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\r\n  // Check for [MM, DD, YYYY]\r\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\r\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\r\n  // Check for [MM, DD, YY]\r\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\r\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\r\n    return new Date(year, dateParts[0] - 1, dateParts[1]);\r\n  // Check for [YY, MM, DD]\r\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\r\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\r\n    return new Date(year, dateParts[1] - 1, dateParts[2]);\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 'findDate' function\r\n *\r\n * //  { string } text\r\n * // { string }\r\n */\r\nexport function findDate(text) {\r\n  if (!text) { return null; }\r\n  let foundDate: any[];\r\n  // Match ...YYYY-MM-DD...\r\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\r\n  if (foundDate) { return foundDate[0]; }\r\n  // Match ...MM-DD-YYYY...\r\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\r\n  if (foundDate) { return foundDate[0]; }\r\n  // Match MM-DD-YY...\r\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\r\n  if (foundDate) { return foundDate[0]; }\r\n  // Match YY-MM-DD...\r\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\r\n  if (foundDate) { return foundDate[0]; }\r\n  // Match YYYYMMDD...\r\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\r\n  if (foundDate) { return foundDate[0]; }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap } from '../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'checkboxes-widget',\r\n  template: `\r\n    <label *ngIf=\"options?.title\"\r\n      [class]=\"options?.labelHtmlClass || ''\"\r\n      [style.display]=\"options?.notitle ? 'none' : ''\"\r\n      [innerHTML]=\"options?.title\"></label>\r\n\r\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\r\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\r\n      <label *ngFor=\"let checkboxItem of checkboxList\"\r\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\r\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\r\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n          (' ' + (options?.style?.unselected || '')))\">\r\n        <input type=\"checkbox\"\r\n          [attr.required]=\"options?.required\"\r\n          [checked]=\"checkboxItem.checked\"\r\n          [class]=\"options?.fieldHtmlClass || ''\"\r\n          [disabled]=\"controlDisabled\"\r\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\r\n          [name]=\"checkboxItem?.name\"\r\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n          [value]=\"checkboxItem.value\"\r\n          (change)=\"updateValue($event)\">\r\n        <span [innerHTML]=\"checkboxItem.name\"></span>\r\n      </label>\r\n    </div>\r\n\r\n    <!-- 'vertical' = regular checkboxes -->\r\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\r\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\r\n        <label\r\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\r\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\r\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n            (' ' + (options?.style?.unselected || '')))\">\r\n          <input type=\"checkbox\"\r\n            [attr.required]=\"options?.required\"\r\n            [checked]=\"checkboxItem.checked\"\r\n            [class]=\"options?.fieldHtmlClass || ''\"\r\n            [disabled]=\"controlDisabled\"\r\n            [id]=\"options?.name + '/' + checkboxItem.value\"\r\n            [name]=\"checkboxItem?.name\"\r\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n            [value]=\"checkboxItem.value\"\r\n            (change)=\"updateValue($event)\">\r\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\r\n        </label>\r\n      </div>\r\n    </div>`,\r\n})\r\nexport class CheckboxesComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  layoutOrientation: string;\r\n  formArray: AbstractControl;\r\n  checkboxList: TitleMapItem[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\r\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\r\n    this.jsf.initializeControl(this);\r\n    this.checkboxList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\r\n    );\r\n    if (this.boundControl) {\r\n      const formArray = this.jsf.getFormControl(this);\r\n      this.checkboxList.forEach(checkboxItem =>\r\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    for (const checkboxItem of this.checkboxList) {\r\n      if (event.target.value === checkboxItem.value) {\r\n        checkboxItem.checked = event.target.checked;\r\n      }\r\n    }\r\n    if (this.boundControl) {\r\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'file-widget',\r\n  template: ``,\r\n})\r\nexport class FileComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'input-widget',\r\n  template: `\r\n    <div [class]=\"options?.htmlClass || ''\">\r\n      <label *ngIf=\"options?.title\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <input *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [type]=\"layoutNode?.type\">\r\n      <input *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\">\r\n        <datalist *ngIf=\"options?.typeahead?.source\"\r\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\r\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\r\n        </datalist>\r\n    </div>`,\r\n})\r\nexport class InputComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: string;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  autoCompleteList: string[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'message-widget',\r\n  template: `\r\n    <span *ngIf=\"message\"\r\n      [class]=\"options?.labelHtmlClass || ''\"\r\n      [innerHTML]=\"message\"></span>`,\r\n})\r\nexport class MessageComponent implements OnInit {\r\n  options: any;\r\n  message: string = null;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.message = this.options.help || this.options.helpvalue ||\r\n      this.options.msg || this.options.message;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'none-widget',\r\n  template: ``,\r\n})\r\nexport class NoneComponent {\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'number-widget',\r\n  template: `\r\n    <div [class]=\"options?.htmlClass || ''\">\r\n      <label *ngIf=\"options?.title\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <input *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.max]=\"options?.maximum\"\r\n        [attr.min]=\"options?.minimum\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.required]=\"options?.required\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [title]=\"lastValidNumber\"\r\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\r\n      <input *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.max]=\"options?.maximum\"\r\n        [attr.min]=\"options?.minimum\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.required]=\"options?.required\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [title]=\"lastValidNumber\"\r\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\">\r\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\r\n    </div>`,\r\n})\r\nexport class NumberComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  allowNegative = true;\r\n  allowDecimal = true;\r\n  allowExponents = false;\r\n  lastValidNumber = '';\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'one-of-widget',\r\n  template: ``,\r\n})\r\nexport class OneOfComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap } from '../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'radios-widget',\r\n  template: `\r\n    <label *ngIf=\"options?.title\"\r\n      [attr.for]=\"'control' + layoutNode?._id\"\r\n      [class]=\"options?.labelHtmlClass || ''\"\r\n      [style.display]=\"options?.notitle ? 'none' : ''\"\r\n      [innerHTML]=\"options?.title\"></label>\r\n\r\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\r\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <label *ngFor=\"let radioItem of radiosList\"\r\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\r\n        [class]=\"(options?.itemLabelHtmlClass || '') +\r\n          ((controlValue + '' === radioItem?.value + '') ?\r\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n          (' ' + (options?.style?.unselected || '')))\">\r\n        <input type=\"radio\"\r\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n          [attr.required]=\"options?.required\"\r\n          [checked]=\"radioItem?.value === controlValue\"\r\n          [class]=\"options?.fieldHtmlClass || ''\"\r\n          [disabled]=\"controlDisabled\"\r\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\r\n          [name]=\"controlName\"\r\n          [value]=\"radioItem?.value\"\r\n          (change)=\"updateValue($event)\">\r\n        <span [innerHTML]=\"radioItem?.name\"></span>\r\n      </label>\r\n    </div>\r\n\r\n    <!-- 'vertical' = regular radios -->\r\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\r\n      <div *ngFor=\"let radioItem of radiosList\"\r\n        [class]=\"options?.htmlClass || ''\">\r\n        <label\r\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\r\n          [class]=\"(options?.itemLabelHtmlClass || '') +\r\n            ((controlValue + '' === radioItem?.value + '') ?\r\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n            (' ' + (options?.style?.unselected || '')))\">\r\n          <input type=\"radio\"\r\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n            [attr.required]=\"options?.required\"\r\n            [checked]=\"radioItem?.value === controlValue\"\r\n            [class]=\"options?.fieldHtmlClass || ''\"\r\n            [disabled]=\"controlDisabled\"\r\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\r\n            [name]=\"controlName\"\r\n            [value]=\"radioItem?.value\"\r\n            (change)=\"updateValue($event)\">\r\n          <span [innerHTML]=\"radioItem?.name\"></span>\r\n        </label>\r\n      </div>\r\n    </div>`,\r\n})\r\nexport class RadiosComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  layoutOrientation = 'vertical';\r\n  radiosList: any[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    if (this.layoutNode.type === 'radios-inline' ||\r\n      this.layoutNode.type === 'radiobuttons'\r\n    ) {\r\n      this.layoutOrientation = 'horizontal';\r\n    }\r\n    this.radiosList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum, true\r\n    );\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'root-widget',\r\n  template: `\r\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\r\n      [class.form-flex-item]=\"isFlexItem\"\r\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\r\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\r\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\r\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\r\n      [style.order]=\"(layoutItem.options || {}).order\">\r\n      <div\r\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\r\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\r\n        [layoutNode]=\"layoutItem\"\r\n        [orderable]=\"isDraggable(layoutItem)\">\r\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\r\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\r\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\r\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\r\n      </div>\r\n    </div>`,\r\n  styles: [`\r\n    [draggable=true] {\r\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\r\n    }\r\n    [draggable=true]:hover {\r\n      cursor: move;\r\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n      position: relative; z-index: 10;\r\n      margin-top: -1px;\r\n      margin-left: -1px;\r\n      margin-right: 1px;\r\n      margin-bottom: 1px;\r\n    }\r\n    [draggable=true].drag-target-top {\r\n      box-shadow: 0 -2px 0 #000;\r\n      position: relative; z-index: 20;\r\n    }\r\n    [draggable=true].drag-target-bottom {\r\n      box-shadow: 0 2px 0 #000;\r\n      position: relative; z-index: 20;\r\n    }\r\n  `],\r\n})\r\nexport class RootComponent {\r\n  options: any;\r\n  @Input() dataIndex: number[];\r\n  @Input() layoutIndex: number[];\r\n  @Input() layout: any[];\r\n  @Input() isOrderable: boolean;\r\n  @Input() isFlexItem = false;\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  isDraggable(node: any): boolean {\r\n    return node.arrayItem && node.type !== '$ref' &&\r\n      node.arrayItemType === 'list' && this.isOrderable !== false;\r\n  }\r\n\r\n  // Set attributes for flexbox child\r\n  // (container attributes are set in section.component)\r\n  getFlexAttribute(node: any, attribute: string) {\r\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\r\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\r\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\r\n  }\r\n\r\n  showWidget(layoutNode: any): boolean {\r\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'section-widget',\r\n  template: `\r\n    <div *ngIf=\"containerType === 'div'\"\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\">\r\n      <label *ngIf=\"sectionTitle\"\r\n        class=\"legend\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [innerHTML]=\"sectionTitle\"\r\n        (click)=\"toggleExpanded()\"></label>\r\n      <root-widget *ngIf=\"expanded\"\r\n        [dataIndex]=\"dataIndex\"\r\n        [layout]=\"layoutNode.items\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n        [isOrderable]=\"options?.orderable\"\r\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n        [style.align-content]=\"getFlexAttribute('align-content')\"\r\n        [style.align-items]=\"getFlexAttribute('align-items')\"\r\n        [style.display]=\"getFlexAttribute('display')\"\r\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\r\n    </div>\r\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\"\r\n      [disabled]=\"options?.readonly\">\r\n      <legend *ngIf=\"sectionTitle\"\r\n        class=\"legend\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [innerHTML]=\"sectionTitle\"\r\n        (click)=\"toggleExpanded()\"></legend>\r\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\r\n        <p *ngIf=\"options?.description\"\r\n        class=\"help-block\"\r\n        [class]=\"options?.labelHelpBlockClass || ''\"\r\n        [innerHTML]=\"options?.description\"></p>\r\n      </div>\r\n      <root-widget *ngIf=\"expanded\"\r\n        [dataIndex]=\"dataIndex\"\r\n        [layout]=\"layoutNode.items\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n        [isOrderable]=\"options?.orderable\"\r\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n        [style.align-content]=\"getFlexAttribute('align-content')\"\r\n        [style.align-items]=\"getFlexAttribute('align-items')\"\r\n        [style.display]=\"getFlexAttribute('display')\"\r\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\r\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\r\n        <p *ngIf=\"options?.description\"\r\n        class=\"help-block\"\r\n        [class]=\"options?.labelHelpBlockClass || ''\"\r\n        [innerHTML]=\"options?.description\"></p>\r\n      </div>\r\n    </fieldset>`,\r\n  styles: [`\r\n    .legend { font-weight: bold; }\r\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\r\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\r\n  `],\r\n})\r\nexport class SectionComponent implements OnInit {\r\n  options: any;\r\n  expanded = true;\r\n  containerType: string;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  get sectionTitle() {\r\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.jsf.initializeControl(this);\r\n    this.options = this.layoutNode.options || {};\r\n    this.expanded = typeof this.options.expanded === 'boolean' ?\r\n      this.options.expanded : !this.options.expandable;\r\n    switch (this.layoutNode.type) {\r\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\r\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\r\n        this.containerType = 'fieldset';\r\n      break;\r\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\r\n        this.containerType = 'div';\r\n      break;\r\n    }\r\n  }\r\n\r\n  toggleExpanded() {\r\n    if (this.options.expandable) { this.expanded = !this.expanded; }\r\n  }\r\n\r\n  // Set attributes for flexbox container\r\n  // (child attributes are set in root.component)\r\n  getFlexAttribute(attribute: string) {\r\n    const flexActive: boolean =\r\n      this.layoutNode.type === 'flex' ||\r\n      !!this.options.displayFlex ||\r\n      this.options.display === 'flex';\r\n    if (attribute !== 'flex' && !flexActive) { return null; }\r\n    switch (attribute) {\r\n      case 'is-flex':\r\n        return flexActive;\r\n      case 'display':\r\n        return flexActive ? 'flex' : 'initial';\r\n      case 'flex-direction': case 'flex-wrap':\r\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\r\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\r\n          this.options[attribute] || ['column', 'nowrap'][index];\r\n      case 'justify-content': case 'align-items': case 'align-content':\r\n        return this.options[attribute];\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap, isArray } from '../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'select-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <label *ngIf=\"options?.title\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <select *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\">\r\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\r\n          <option *ngIf=\"!isArray(selectItem?.items)\"\r\n            [value]=\"selectItem?.value\">\r\n            <span [innerHTML]=\"selectItem?.name\"></span>\r\n          </option>\r\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\r\n            [label]=\"selectItem?.group\">\r\n            <option *ngFor=\"let subItem of selectItem.items\"\r\n              [value]=\"subItem?.value\">\r\n              <span [innerHTML]=\"subItem?.name\"></span>\r\n            </option>\r\n          </optgroup>\r\n        </ng-template>\r\n      </select>\r\n      <select *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        (change)=\"updateValue($event)\">\r\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\r\n          <option *ngIf=\"!isArray(selectItem?.items)\"\r\n            [selected]=\"selectItem?.value === controlValue\"\r\n            [value]=\"selectItem?.value\">\r\n            <span [innerHTML]=\"selectItem?.name\"></span>\r\n          </option>\r\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\r\n            [label]=\"selectItem?.group\">\r\n            <option *ngFor=\"let subItem of selectItem.items\"\r\n              [attr.selected]=\"subItem?.value === controlValue\"\r\n              [value]=\"subItem?.value\">\r\n              <span [innerHTML]=\"subItem?.name\"></span>\r\n            </option>\r\n          </optgroup>\r\n        </ng-template>\r\n      </select>\r\n    </div>`,\r\n})\r\nexport class SelectComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  selectList: any[] = [];\r\n  isArray = isArray;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.selectList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum, !!this.options.required, !!this.options.flatList\r\n    );\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef, Input,\r\n  OnChanges, OnInit, ViewChild, ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'select-framework-widget',\r\n  template: `<div #widgetContainer></div>`,\r\n})\r\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\r\n  newComponent: ComponentRef<any> = null;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\r\n    widgetContainer: ViewContainerRef;\r\n\r\n  constructor(\r\n    private componentFactory: ComponentFactoryResolver,\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  updateComponent() {\r\n    if (!this.newComponent && this.jsf.framework) {\r\n      this.newComponent = this.widgetContainer.createComponent(\r\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\r\n      );\r\n    }\r\n    if (this.newComponent) {\r\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\r\n        this.newComponent.instance[input] = this[input];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component, ComponentFactoryResolver, ComponentRef, Input,\r\n  OnChanges, OnInit, ViewChild, ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'select-widget-widget',\r\n  template: `<div #widgetContainer></div>`,\r\n})\r\nexport class SelectWidgetComponent implements OnChanges, OnInit {\r\n  newComponent: ComponentRef<any> = null;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\r\n    widgetContainer: ViewContainerRef;\r\n\r\n  constructor(\r\n    private componentFactory: ComponentFactoryResolver,\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  updateComponent() {\r\n    if (!this.newComponent && (this.layoutNode || {}).widget) {\r\n      this.newComponent = this.widgetContainer.createComponent(\r\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\r\n      );\r\n    }\r\n    if (this.newComponent) {\r\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\r\n        this.newComponent.instance[input] = this[input];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { hasOwn } from '../shared/utility.functions';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'submit-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <input\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (click)=\"updateValue($event)\">\r\n    </div>`,\r\n})\r\nexport class SubmitComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (hasOwn(this.options, 'disabled')) {\r\n      this.controlDisabled = this.options.disabled;\r\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\r\n      this.controlDisabled = !this.jsf.isValid;\r\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\r\n    }\r\n    if (this.controlValue === null || this.controlValue === undefined) {\r\n      this.controlValue = this.options.title;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    if (typeof this.options.onClick === 'function') {\r\n      this.options.onClick(event);\r\n    } else {\r\n      this.jsf.updateValue(this, event.target.value);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'tabs-widget',\r\n  template: `\r\n    <ul\r\n      [class]=\"options?.labelHtmlClass || ''\">\r\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\r\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\r\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\r\n          (' ' + options?.style?.unselected))\"\r\n        role=\"presentation\"\r\n        data-tabs>\r\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\r\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\r\n            (' ' + options?.style?.unselected))\"\r\n          [innerHTML]=\"setTabTitle(item, i)\"\r\n          (click)=\"select(i)\"></a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\r\n      [class]=\"options?.htmlClass || ''\">\r\n\r\n      <select-framework-widget *ngIf=\"selectedItem === i\"\r\n        [class]=\"(options?.fieldHtmlClass || '') +\r\n          ' ' + (options?.activeClass || '') +\r\n          ' ' + (options?.style?.selected || '')\"\r\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\r\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\r\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\r\n\r\n    </div>`,\r\n  styles: [` a { cursor: pointer; } `],\r\n})\r\nexport class TabsComponent implements OnInit {\r\n  options: any;\r\n  itemCount: number;\r\n  selectedItem = 0;\r\n  showAddTab = true;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.itemCount = this.layoutNode.items.length - 1;\r\n    this.updateControl();\r\n  }\r\n\r\n  select(index) {\r\n    if (this.layoutNode.items[index].type === '$ref') {\r\n      this.itemCount = this.layoutNode.items.length;\r\n      this.jsf.addItem({\r\n        layoutNode: this.layoutNode.items[index],\r\n        layoutIndex: this.layoutIndex.concat(index),\r\n        dataIndex: this.dataIndex.concat(index)\r\n      });\r\n      this.updateControl();\r\n    }\r\n    this.selectedItem = index;\r\n  }\r\n\r\n  updateControl() {\r\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\r\n    if (lastItem.type === '$ref' &&\r\n      this.itemCount >= (lastItem.options.maxItems || 1000)\r\n    ) {\r\n      this.showAddTab = false;\r\n    }\r\n  }\r\n\r\n  setTabTitle(item: any, index: number): string {\r\n    return this.jsf.setArrayItemTitle(this, item, index);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewContainerRef\r\n  } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'template-widget',\r\n  template: `<div #widgetContainer></div>`,\r\n})\r\nexport class TemplateComponent implements OnInit, OnChanges {\r\n  newComponent: ComponentRef<any> = null;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\r\n    widgetContainer: ViewContainerRef;\r\n\r\n  constructor(\r\n    private componentFactory: ComponentFactoryResolver,\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.updateComponent();\r\n  }\r\n\r\n  updateComponent() {\r\n    if (!this.newComponent && this.layoutNode.options.template) {\r\n      this.newComponent = this.widgetContainer.createComponent(\r\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\r\n      );\r\n    }\r\n    if (this.newComponent) {\r\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\r\n        this.newComponent.instance[input] = this[input];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'textarea-widget',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <label *ngIf=\"options?.title\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <textarea *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"></textarea>\r\n      <textarea *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [attr.placeholder]=\"options?.placeholder\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [class]=\"options?.fieldHtmlClass || ''\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\r\n    </div>`,\r\n})\r\nexport class TextareaComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { AddReferenceComponent } from './add-reference.component';\r\nimport { ButtonComponent } from './button.component';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { CheckboxesComponent } from './checkboxes.component';\r\nimport { FileComponent } from './file.component';\r\nimport { hasOwn } from '../shared/utility.functions';\r\nimport { Injectable } from '@angular/core';\r\nimport { InputComponent } from './input.component';\r\nimport { MessageComponent } from './message.component';\r\nimport { NoneComponent } from './none.component';\r\nimport { NumberComponent } from './number.component';\r\nimport { OneOfComponent } from './one-of.component';\r\nimport { RadiosComponent } from './radios.component';\r\nimport { RootComponent } from './root.component';\r\nimport { SectionComponent } from './section.component';\r\nimport { SelectComponent } from './select.component';\r\nimport { SelectFrameworkComponent } from './select-framework.component';\r\nimport { SelectWidgetComponent } from './select-widget.component';\r\nimport { SubmitComponent } from './submit.component';\r\nimport { TabsComponent } from './tabs.component';\r\nimport { TemplateComponent } from './template.component';\r\nimport { TextareaComponent } from './textarea.component';\r\n\r\n@Injectable()\r\nexport class WidgetLibraryService {\r\n\r\n  defaultWidget = 'text';\r\n  widgetLibrary: any = {\r\n\r\n  // Angular JSON Schema Form administrative widgets\r\n    'none': NoneComponent, // Placeholder, for development - displays nothing\r\n    'root': RootComponent, // Form root, renders a complete layout\r\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\r\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\r\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\r\n\r\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\r\n    'email': 'text',\r\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\r\n    'number': NumberComponent,\r\n    'password': 'text',\r\n    'search': 'text',\r\n    'tel': 'text',\r\n    'text': InputComponent,\r\n    'url': 'text',\r\n\r\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\r\n    'color': 'text',\r\n    'date': 'text',\r\n    'datetime': 'text',\r\n    'datetime-local': 'text',\r\n    'month': 'text',\r\n    'range': 'number',\r\n    'time': 'text',\r\n    'week': 'text',\r\n\r\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\r\n    // 'button': <input type=\"button\"> not used, use <button> instead\r\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\r\n    'file': FileComponent, // TODO: Finish 'file' widget\r\n    'hidden': 'text',\r\n    'image': 'text', // TODO: Figure out how to handle these\r\n    'radio': 'radios',\r\n    'reset': 'submit', // TODO: Figure out how to handle these\r\n    'submit': SubmitComponent,\r\n\r\n  // Other (non-'input') HTML form control widgets\r\n    'button': ButtonComponent,\r\n    'select': SelectComponent,\r\n    // 'option': automatically generated by select widgets\r\n    // 'optgroup': automatically generated by select widgets\r\n    'textarea': TextareaComponent,\r\n\r\n  // HTML form control widget sets\r\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\r\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\r\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\r\n    'radios': RadiosComponent, // Grouped list of radio buttons\r\n    'radios-inline': 'radios', // Radio controls in one line\r\n    'radiobuttons': 'radios', // Radio controls as html buttons\r\n\r\n  // HTML Layout widgets\r\n    // 'label': automatically added to data widgets\r\n    // 'legend': automatically added to fieldsets\r\n    'section': SectionComponent, // Just a div <div>\r\n    'div': 'section', // Still just a div <div>\r\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\r\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\r\n\r\n  // Non-HTML layout widgets\r\n    'one-of': OneOfComponent, // A select box that changes another input\r\n                              // TODO: Finish 'one-of' widget\r\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\r\n    'tabarray': 'tabs', // A tabbed version of array\r\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\r\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\r\n    'message': MessageComponent, // Insert arbitrary html\r\n    'help': 'message', // Insert arbitrary html\r\n    'msg': 'message', // Insert arbitrary html\r\n    'html': 'message', // Insert arbitrary html\r\n    'template': TemplateComponent, // Insert a custom Angular component\r\n\r\n  // Widgets included for compatibility with JSON Form API\r\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\r\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\r\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\r\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\r\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\r\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\r\n    'tagsinput': 'section', // For entering short text tags <div>\r\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\r\n\r\n  // Widgets included for compatibility with React JSON Schema Form API\r\n    'updown': 'number',\r\n    'date-time': 'datetime-local',\r\n    'alt-datetime': 'datetime-local',\r\n    'alt-date': 'date',\r\n\r\n  // Widgets included for compatibility with Angular Schema Form API\r\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\r\n\r\n  // Widgets included for compatibility with other libraries\r\n    'textline': 'text',\r\n\r\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\r\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\r\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\r\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\r\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\r\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\r\n    // 'ace': ACE code editor - https://ace.c9.io\r\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\r\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\r\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\r\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\r\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\r\n  };\r\n  registeredWidgets: any = { };\r\n  frameworkWidgets: any = { };\r\n  activeWidgets: any = { };\r\n\r\n  constructor() {\r\n    this.setActiveWidgets();\r\n  }\r\n\r\n  setActiveWidgets(): boolean {\r\n    this.activeWidgets = Object.assign(\r\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\r\n    );\r\n    for (const widgetName of Object.keys(this.activeWidgets)) {\r\n      let widget: any = this.activeWidgets[widgetName];\r\n      // Resolve aliases\r\n      if (typeof widget === 'string') {\r\n        const usedAliases: string[] = [];\r\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\r\n          usedAliases.push(widget);\r\n          widget = this.activeWidgets[widget];\r\n        }\r\n        if (typeof widget !== 'string') {\r\n          this.activeWidgets[widgetName] = widget;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setDefaultWidget(type: string): boolean {\r\n    if (!this.hasWidget(type)) { return false; }\r\n    this.defaultWidget = type;\r\n    return true;\r\n  }\r\n\r\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\r\n    if (!type || typeof type !== 'string') { return false; }\r\n    return hasOwn(this[widgetSet], type);\r\n  }\r\n\r\n  hasDefaultWidget(type: string): boolean {\r\n    return this.hasWidget(type, 'widgetLibrary');\r\n  }\r\n\r\n  registerWidget(type: string, widget: any): boolean {\r\n    if (!type || !widget || typeof type !== 'string') { return false; }\r\n    this.registeredWidgets[type] = widget;\r\n    return this.setActiveWidgets();\r\n  }\r\n\r\n  unRegisterWidget(type: string): boolean {\r\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\r\n    delete this.registeredWidgets[type];\r\n    return this.setActiveWidgets();\r\n  }\r\n\r\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\r\n    this.registeredWidgets = { };\r\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\r\n    return this.setActiveWidgets();\r\n  }\r\n\r\n  registerFrameworkWidgets(widgets: any): boolean {\r\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\r\n    this.frameworkWidgets = widgets;\r\n    return this.setActiveWidgets();\r\n  }\r\n\r\n  unRegisterFrameworkWidgets(): boolean {\r\n    if (Object.keys(this.frameworkWidgets).length) {\r\n      this.frameworkWidgets = { };\r\n      return this.setActiveWidgets();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\r\n    if (this.hasWidget(type, widgetSet)) {\r\n      return this[widgetSet][type];\r\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\r\n      return this[widgetSet][this.defaultWidget];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getAllWidgets(): any {\r\n    return {\r\n      widgetLibrary: this.widgetLibrary,\r\n      registeredWidgets: this.registeredWidgets,\r\n      frameworkWidgets: this.frameworkWidgets,\r\n      activeWidgets: this.activeWidgets,\r\n    };\r\n  }\r\n}\r\n","import { Framework } from './framework';\r\nimport { hasOwn } from '../shared/utility.functions';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\r\n\r\n// Possible future frameworks:\r\n// - Foundation 6:\r\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\r\n//   https://github.com/zurb/foundation-sites\r\n// - Semantic UI:\r\n//   https://github.com/edcarroll/ng2-semantic-ui\r\n//   https://github.com/vladotesanovic/ngSemantic\r\n\r\n@Injectable()\r\nexport class FrameworkLibraryService {\r\n  activeFramework: Framework = null;\r\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\r\n  scripts: HTMLScriptElement[];\r\n  loadExternalAssets = false;\r\n  defaultFramework: string;\r\n  frameworkLibrary: { [name: string]: Framework } = {};\r\n\r\n  constructor(\r\n    @Inject(Framework) private frameworks: any[],\r\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\r\n  ) {\r\n    this.frameworks.forEach(framework =>\r\n      this.frameworkLibrary[framework.name] = framework\r\n    );\r\n    this.defaultFramework = this.frameworks[0].name;\r\n    this.setFramework(this.defaultFramework);\r\n  }\r\n\r\n  public setLoadExternalAssets(loadExternalAssets = true): void {\r\n    // Sometimes loadExternalAssets is coming across as a string so check for that.\r\n    if (typeof loadExternalAssets === 'string') {\r\n      const stringLoadExternalAssets = loadExternalAssets as string;\r\n      loadExternalAssets = stringLoadExternalAssets.toLowerCase() === 'false' ? false : true;\r\n    }\r\n    this.loadExternalAssets = !!loadExternalAssets;\r\n  }\r\n\r\n  public setFramework(\r\n    framework: string|Framework = this.defaultFramework,\r\n    loadExternalAssets = this.loadExternalAssets\r\n  ): boolean {\r\n    this.activeFramework =\r\n      typeof framework === 'string' && this.hasFramework(framework) ?\r\n        this.frameworkLibrary[framework] :\r\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\r\n        framework :\r\n        this.frameworkLibrary[this.defaultFramework];\r\n    return this.registerFrameworkWidgets(this.activeFramework);\r\n  }\r\n\r\n  registerFrameworkWidgets(framework: Framework): boolean {\r\n    return hasOwn(framework, 'widgets') ?\r\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\r\n      this.widgetLibrary.unRegisterFrameworkWidgets();\r\n  }\r\n\r\n  public hasFramework(type: string): boolean {\r\n    return hasOwn(this.frameworkLibrary, type);\r\n  }\r\n\r\n  public getFramework(): any {\r\n    if (!this.activeFramework) { this.setFramework('default', true); }\r\n    return this.activeFramework.framework;\r\n  }\r\n\r\n  public getFrameworkWidgets(): any {\r\n    return this.activeFramework.widgets || {};\r\n  }\r\n\r\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\r\n    return (load && this.activeFramework.stylesheets) || [];\r\n  }\r\n\r\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\r\n    return (load && this.activeFramework.scripts) || [];\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output\r\n  } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { forEach, hasOwn } from './shared/utility.functions';\r\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\r\nimport {\r\n  hasValue,\r\n  inArray,\r\n  isArray,\r\n  isEmpty,\r\n  isObject\r\n  } from './shared/validator.functions';\r\nimport { JsonPointer } from './shared/jsonpointer.functions';\r\nimport { JsonSchemaFormService } from './json-schema-form.service';\r\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\r\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\r\n\r\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\r\n  multi: true,\r\n};\r\n\r\n/**\r\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\r\n *\r\n * Root module of the Angular JSON Schema Form client-side library,\r\n * an Angular library which generates an HTML form from a JSON schema\r\n * structured data model and/or a JSON Schema Form layout description.\r\n *\r\n * This library also validates input data by the user, using both validators on\r\n * individual controls to provide real-time feedback while the user is filling\r\n * out the form, and then validating the entire input against the schema when\r\n * the form is submitted to make sure the returned JSON data object is valid.\r\n *\r\n * This library is similar to, and mostly API compatible with:\r\n *\r\n * - JSON Schema Form's Angular Schema Form library for AngularJs\r\n *   http://schemaform.io\r\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\r\n *\r\n * - Mozilla's react-jsonschema-form library for React\r\n *   https://github.com/mozilla-services/react-jsonschema-form\r\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\r\n *\r\n * - Joshfire's JSON Form library for jQuery\r\n *   https://github.com/joshfire/jsonform\r\n *   http://ulion.github.io/jsonform/playground (examples)\r\n *\r\n * This library depends on:\r\n *  - Angular (obviously)                  https://angular.io\r\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\r\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\r\n *\r\n * In addition, the Example Playground also depends on:\r\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\r\n */\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'json-schema-form',\r\n  template: `\r\n    <div *ngFor=\"let stylesheet of stylesheets\">\r\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\r\n    </div>\r\n    <div *ngFor=\"let script of scripts\">\r\n      <script type=\"text/javascript\" [src]=\"script\"></script>\r\n    </div>\r\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\r\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\r\n    </form>\r\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\r\n      Debug output: <pre>{{debugOutput}}</pre>\r\n    </div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\r\n  // creates a separate instance of the service for each component\r\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\r\n})\r\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\r\n  debugOutput: any; // Debug information, if requested\r\n  formValueSubscription: any = null;\r\n  formInitialized = false;\r\n  objectWrap = false; // Is non-object input schema wrapped in an object?\r\n\r\n  formValuesInput: string; // Name of the input providing the form data\r\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\r\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\r\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\r\n    formData: any, loadExternalAssets: boolean, debug: boolean,\r\n  } = {\r\n    schema: null, layout: null, data: null, options: null, framework: null,\r\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\r\n    formData: null, loadExternalAssets: null, debug: null,\r\n  };\r\n\r\n  // Recommended inputs\r\n  @Input() schema: any; // The JSON Schema\r\n  @Input() layout: any[]; // The form layout\r\n  @Input() data: any; // The form data\r\n  @Input() options: any; // The global form options\r\n  @Input() framework: any|string; // The framework to load\r\n  @Input() widgets: any; // Any custom widgets to load\r\n\r\n  // Alternate combined single input\r\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\r\n\r\n  // Angular Schema Form API compatibility input\r\n  @Input() model: any; // Alternate input for form data\r\n\r\n  // React JSON Schema Form API compatibility inputs\r\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\r\n  @Input() UISchema: any; // UI schema - alternate form layout format\r\n  @Input() formData: any; // Alternate input for form data\r\n\r\n  @Input() ngModel: any; // Alternate input for Angular forms\r\n\r\n  @Input() language: string; // Language\r\n\r\n  // Development inputs, for testing and debugging\r\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\r\n  @Input() debug: boolean; // Show debug information?\r\n\r\n  @Input()\r\n  get value(): any {\r\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\r\n  }\r\n  set value(value: any) {\r\n    this.setFormValues(value, false);\r\n  }\r\n\r\n  // Outputs\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\r\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\r\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\r\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\r\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\r\n\r\n  // Outputs for possible 2-way data binding\r\n  // Only the one input providing the initial form data will be bound.\r\n  // If there is no inital data, input '{}' to activate 2-way data binding.\r\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\r\n  @Output() dataChange = new EventEmitter<any>();\r\n  @Output() modelChange = new EventEmitter<any>();\r\n  @Output() formDataChange = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n\r\n  onChange: Function;\r\n  onTouched: Function;\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    private frameworkLibrary: FrameworkLibraryService,\r\n    private widgetLibrary: WidgetLibraryService,\r\n    public jsf: JsonSchemaFormService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  get stylesheets(): SafeResourceUrl[] {\r\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\r\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\r\n    return stylesheets.map(stylesheet => load(stylesheet));\r\n  }\r\n\r\n  get scripts(): SafeResourceUrl[] {\r\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\r\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\r\n    return scripts.map(script => load(script));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateForm();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.updateForm();\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.setFormValues(value, false);\r\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\r\n  }\r\n\r\n  registerOnChange(fn: Function) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) {\r\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\r\n      this.jsf.formOptions.formDisabled = !!isDisabled;\r\n      this.initializeForm();\r\n    }\r\n  }\r\n\r\n  updateForm() {\r\n    if (!this.formInitialized || !this.formValuesInput ||\r\n      (this.language && this.language !== this.jsf.language)\r\n    ) {\r\n      this.initializeForm();\r\n    } else {\r\n      if (this.language && this.language !== this.jsf.language) {\r\n        this.jsf.setLanguage(this.language);\r\n      }\r\n\r\n      // Get names of changed inputs\r\n      let changedInput = Object.keys(this.previousInputs)\r\n        .filter(input => this.previousInputs[input] !== this[input]);\r\n      let resetFirst = true;\r\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\r\n        this.formValuesInput.startsWith('form.')\r\n      ) {\r\n        // If only 'form' input changed, get names of changed keys\r\n        changedInput = Object.keys(this.previousInputs.form || {})\r\n          .filter(key => !_.isEqual(this.previousInputs.form[key], this.form[key]))\r\n          .map(key => `form.${key}`);\r\n        resetFirst = false;\r\n      }\r\n\r\n      // If only input values have changed, update the form values\r\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\r\n        if (this.formValuesInput.indexOf('.') === -1) {\r\n          this.setFormValues(this[this.formValuesInput], resetFirst);\r\n        } else {\r\n          const [input, key] = this.formValuesInput.split('.');\r\n          this.setFormValues(this[input][key], resetFirst);\r\n        }\r\n\r\n      // If anything else has changed, re-render the entire form\r\n      } else if (changedInput.length) {\r\n        this.initializeForm();\r\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\r\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\r\n      }\r\n\r\n      // Update previous inputs\r\n      Object.keys(this.previousInputs)\r\n        .filter(input => this.previousInputs[input] !== this[input])\r\n        .forEach(input => this.previousInputs[input] = this[input]);\r\n    }\r\n  }\r\n\r\n  setFormValues(formValues: any, resetFirst = true) {\r\n    if (formValues) {\r\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\r\n      if (!this.jsf.formGroup) {\r\n        this.jsf.formValues = formValues;\r\n        this.activateForm();\r\n      } else if (resetFirst) {\r\n        this.jsf.formGroup.reset();\r\n      }\r\n      if (this.jsf.formGroup) {\r\n        this.jsf.formGroup.patchValue(newFormValues);\r\n      }\r\n      if (this.onChange) { this.onChange(newFormValues); }\r\n      if (this.onTouched) { this.onTouched(newFormValues); }\r\n    } else {\r\n      this.jsf.formGroup.reset();\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    const validData = this.jsf.validData;\r\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\r\n  }\r\n\r\n  /**\r\n   * 'initializeForm' function\r\n   *\r\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\r\n   *\r\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\r\n   *   to resolve schema $ref links, including recursive $ref links.\r\n   *\r\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\r\n   *   and corectly set output formats for recursively nested values.\r\n   *\r\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\r\n   *   new layout nodes and formGroup elements to use when dynamically\r\n   *   adding form components to arrays and recursive $ref points.\r\n   *\r\n   * - Create 'dataMap' to map the data to the schema and template.\r\n   *\r\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\r\n   *   the Angular formGroup used to control the reactive form.\r\n   */\r\n  initializeForm() {\r\n    if (\r\n      this.schema || this.layout || this.data || this.form || this.model ||\r\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\r\n      this.jsf.data\r\n    ) {\r\n\r\n      this.jsf.resetAllValues();  // Reset all form values to defaults\r\n      this.initializeOptions();   // Update options\r\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\r\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\r\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\r\n      this.initializeData();      // Update formValues\r\n      this.activateForm();        // Update dataMap, templateRefLibrary,\r\n                                  // formGroupTemplate, formGroup\r\n\r\n      // Uncomment individual lines to output debugging information to console:\r\n      // (These always work.)\r\n      // console.log('loading form...');\r\n      // console.log('schema', this.jsf.schema);\r\n      // console.log('layout', this.jsf.layout);\r\n      // console.log('options', this.options);\r\n      // console.log('formValues', this.jsf.formValues);\r\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\r\n      // console.log('formGroup', this.jsf.formGroup);\r\n      // console.log('formGroup.value', this.jsf.formGroup.value);\r\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\r\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\r\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\r\n      // console.log('dataMap', this.jsf.dataMap);\r\n      // console.log('arrayMap', this.jsf.arrayMap);\r\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\r\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\r\n\r\n      // Uncomment individual lines to output debugging information to browser:\r\n      // (These only work if the 'debug' option has also been set to 'true'.)\r\n      if (this.debug || this.jsf.formOptions.debug) {\r\n        const vars: any[] = [];\r\n        // vars.push(this.jsf.schema);\r\n        // vars.push(this.jsf.layout);\r\n        // vars.push(this.options);\r\n        // vars.push(this.jsf.formValues);\r\n        // vars.push(this.jsf.formGroup.value);\r\n        // vars.push(this.jsf.formGroupTemplate);\r\n        // vars.push(this.jsf.formGroup);\r\n        // vars.push(this.jsf.schemaRefLibrary);\r\n        // vars.push(this.jsf.layoutRefLibrary);\r\n        // vars.push(this.jsf.templateRefLibrary);\r\n        // vars.push(this.jsf.dataMap);\r\n        // vars.push(this.jsf.arrayMap);\r\n        // vars.push(this.jsf.schemaRecursiveRefMap);\r\n        // vars.push(this.jsf.dataRecursiveRefMap);\r\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\r\n      }\r\n      this.formInitialized = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'initializeOptions' function\r\n   *\r\n   * Initialize 'options' (global form options) and set framework\r\n   * Combine available inputs:\r\n   * 1. options - recommended\r\n   * 2. form.options - Single input style\r\n   */\r\n  private initializeOptions() {\r\n    if (this.language && this.language !== this.jsf.language) {\r\n      this.jsf.setLanguage(this.language);\r\n    }\r\n    this.jsf.setOptions({ debug: !!this.debug });\r\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\r\n    let framework: any = this.framework || 'default';\r\n    if (isObject(this.options)) {\r\n      this.jsf.setOptions(this.options);\r\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\r\n      framework = this.options.framework || framework;\r\n    }\r\n    if (isObject(this.form) && isObject(this.form.options)) {\r\n      this.jsf.setOptions(this.form.options);\r\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\r\n      framework = this.form.options.framework || framework;\r\n    }\r\n    if (isObject(this.widgets)) {\r\n      this.jsf.setOptions({ widgets: this.widgets });\r\n    }\r\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\r\n    this.frameworkLibrary.setFramework(framework);\r\n    this.jsf.framework = this.frameworkLibrary.getFramework();\r\n    if (isObject(this.jsf.formOptions.widgets)) {\r\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\r\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\r\n      }\r\n    }\r\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\r\n      this.jsf.setTpldata(this.form.tpldata);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'initializeSchema' function\r\n   *\r\n   * Initialize 'schema'\r\n   * Use first available input:\r\n   * 1. schema - recommended / Angular Schema Form style\r\n   * 2. form.schema - Single input / JSON Form style\r\n   * 3. JSONSchema - React JSON Schema Form style\r\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\r\n   * 5. form - For testing single schema-only inputs\r\n   *\r\n   * ... if no schema input found, the 'activateForm' function, below,\r\n   *     will make two additional attempts to build a schema\r\n   * 6. If layout input - build schema from layout\r\n   * 7. If data input - build schema from data\r\n   */\r\n  private initializeSchema() {\r\n\r\n    // TODO: update to allow non-object schemas\r\n\r\n    if (isObject(this.schema)) {\r\n      this.jsf.AngularSchemaFormCompatibility = true;\r\n      this.jsf.schema = _.cloneDeep(this.schema);\r\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\r\n      this.jsf.schema = _.cloneDeep(this.form.schema);\r\n    } else if (isObject(this.JSONSchema)) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      this.jsf.schema = _.cloneDeep(this.JSONSchema);\r\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\r\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\r\n      this.jsf.schema = _.cloneDeep(this.form);\r\n    } else if (isObject(this.form)) {\r\n      // TODO: Handle other types of form input\r\n    }\r\n\r\n    if (!isEmpty(this.jsf.schema)) {\r\n\r\n      // If other types also allowed, render schema as an object\r\n      if (inArray('object', this.jsf.schema.type)) {\r\n        this.jsf.schema.type = 'object';\r\n      }\r\n\r\n      // Wrap non-object schemas in object.\r\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\r\n        this.jsf.schema = {\r\n          'type': 'object',\r\n          'properties': { 1: this.jsf.schema }\r\n        };\r\n        this.objectWrap = true;\r\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\r\n\r\n        // Add type = 'object' if missing\r\n        if (isObject(this.jsf.schema.properties) ||\r\n          isObject(this.jsf.schema.patternProperties) ||\r\n          isObject(this.jsf.schema.additionalProperties)\r\n        ) {\r\n          this.jsf.schema.type = 'object';\r\n\r\n        // Fix JSON schema shorthand (JSON Form style)\r\n        } else {\r\n          this.jsf.JsonFormCompatibility = true;\r\n          this.jsf.schema = {\r\n            'type': 'object',\r\n            'properties': this.jsf.schema\r\n          };\r\n        }\r\n      }\r\n\r\n      // If needed, update JSON Schema to draft 6 format, including\r\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\r\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\r\n\r\n      // Initialize ajv and compile schema\r\n      this.jsf.compileAjvSchema();\r\n\r\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\r\n      this.jsf.schema = resolveSchemaReferences(\r\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\r\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\r\n      );\r\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\r\n        this.jsf.hasRootReference = true;\r\n      }\r\n\r\n      // TODO: (?) Resolve external $ref links\r\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\r\n      // this.parser.bundle(this.schema)\r\n      //   .then(schema => this.schema = resolveSchemaReferences(\r\n      //     schema, this.jsf.schemaRefLibrary,\r\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\r\n      //   ));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'initializeData' function\r\n   *\r\n   * Initialize 'formValues'\r\n   * defulat or previously submitted values used to populate form\r\n   * Use first available input:\r\n   * 1. data - recommended\r\n   * 2. model - Angular Schema Form style\r\n   * 3. form.value - JSON Form style\r\n   * 4. form.data - Single input style\r\n   * 5. formData - React JSON Schema Form style\r\n   * 6. form.formData - For easier testing of React JSON Schema Forms\r\n   * 7. (none) no data - initialize data from schema and layout defaults only\r\n   */\r\n  private initializeData() {\r\n    if (hasValue(this.data)) {\r\n      this.jsf.formValues = _.cloneDeep(this.data);\r\n      this.formValuesInput = 'data';\r\n    } else if (hasValue(this.model)) {\r\n      this.jsf.AngularSchemaFormCompatibility = true;\r\n      this.jsf.formValues = _.cloneDeep(this.model);\r\n      this.formValuesInput = 'model';\r\n    } else if (hasValue(this.ngModel)) {\r\n      this.jsf.AngularSchemaFormCompatibility = true;\r\n      this.jsf.formValues = _.cloneDeep(this.ngModel);\r\n      this.formValuesInput = 'ngModel';\r\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\r\n      this.jsf.JsonFormCompatibility = true;\r\n      this.jsf.formValues = _.cloneDeep(this.form.value);\r\n      this.formValuesInput = 'form.value';\r\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\r\n      this.jsf.formValues = _.cloneDeep(this.form.data);\r\n      this.formValuesInput = 'form.data';\r\n    } else if (hasValue(this.formData)) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      this.formValuesInput = 'formData';\r\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      this.jsf.formValues = _.cloneDeep(this.form.formData);\r\n      this.formValuesInput = 'form.formData';\r\n    } else {\r\n      this.formValuesInput = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'initializeLayout' function\r\n   *\r\n   * Initialize 'layout'\r\n   * Use first available array input:\r\n   * 1. layout - recommended\r\n   * 2. form - Angular Schema Form style\r\n   * 3. form.form - JSON Form style\r\n   * 4. form.layout - Single input style\r\n   * 5. (none) no layout - set default layout instead\r\n   *    (full layout will be built later from the schema)\r\n   *\r\n   * Also, if alternate layout formats are available,\r\n   * import from 'UISchema' or 'customFormItems'\r\n   * used for React JSON Schema Form and JSON Form API compatibility\r\n   * Use first available input:\r\n   * 1. UISchema - React JSON Schema Form style\r\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\r\n   * 2. form.customFormItems - JSON Form style\r\n   * 3. (none) no input - don't import\r\n   */\r\n  private initializeLayout() {\r\n\r\n    // Rename JSON Form-style 'options' lists to\r\n    // Angular Schema Form-style 'titleMap' lists.\r\n    const fixJsonFormOptions = (layout: any): any => {\r\n      if (isObject(layout) || isArray(layout)) {\r\n        forEach(layout, (value, key) => {\r\n          if (hasOwn(value, 'options') && isObject(value.options)) {\r\n            value.titleMap = value.options;\r\n            delete value.options;\r\n          }\r\n        }, 'top-down');\r\n      }\r\n      return layout;\r\n    };\r\n\r\n    // Check for layout inputs and, if found, initialize form layout\r\n    if (isArray(this.layout)) {\r\n      this.jsf.layout = _.cloneDeep(this.layout);\r\n    } else if (isArray(this.form)) {\r\n      this.jsf.AngularSchemaFormCompatibility = true;\r\n      this.jsf.layout = _.cloneDeep(this.form);\r\n    } else if (this.form && isArray(this.form.form)) {\r\n      this.jsf.JsonFormCompatibility = true;\r\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form));\r\n    } else if (this.form && isArray(this.form.layout)) {\r\n      this.jsf.layout = _.cloneDeep(this.form.layout);\r\n    } else {\r\n      this.jsf.layout = ['*'];\r\n    }\r\n\r\n    // Check for alternate layout inputs\r\n    let alternateLayout: any = null;\r\n    if (isObject(this.UISchema)) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      alternateLayout = _.cloneDeep(this.UISchema);\r\n    } else if (hasOwn(this.form, 'UISchema')) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      alternateLayout = _.cloneDeep(this.form.UISchema);\r\n    } else if (hasOwn(this.form, 'uiSchema')) {\r\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\r\n      alternateLayout = _.cloneDeep(this.form.uiSchema);\r\n    } else if (hasOwn(this.form, 'customFormItems')) {\r\n      this.jsf.JsonFormCompatibility = true;\r\n      alternateLayout = fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\r\n    }\r\n\r\n    // if alternate layout found, copy alternate layout options into schema\r\n    if (alternateLayout) {\r\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\r\n        const schemaPointer = pointer\r\n          .replace(/\\//g, '/properties/')\r\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\r\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\r\n        if (hasValue(value) && hasValue(pointer)) {\r\n          let key = JsonPointer.toKey(pointer);\r\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\r\n          let itemPointer: string | string[];\r\n\r\n          // If 'ui:order' object found, copy into object schema root\r\n          if (key.toLowerCase() === 'ui:order') {\r\n            itemPointer = [...groupPointer, 'ui:order'];\r\n\r\n          // Copy other alternate layout options to schema 'x-schema-form',\r\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\r\n          } else {\r\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\r\n            itemPointer = [...groupPointer, 'x-schema-form', key];\r\n          }\r\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\r\n            !JsonPointer.has(this.jsf.schema, itemPointer)\r\n          ) {\r\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 'activateForm' function\r\n   *\r\n   * ...continued from 'initializeSchema' function, above\r\n   * If 'schema' has not been initialized (i.e. no schema input found)\r\n   * 6. If layout input - build schema from layout input\r\n   * 7. If data input - build schema from data input\r\n   *\r\n   * Create final layout,\r\n   * build the FormGroup template and the Angular FormGroup,\r\n   * subscribe to changes,\r\n   * and activate the form.\r\n   */\r\n  private activateForm() {\r\n\r\n    // If 'schema' not initialized\r\n    if (isEmpty(this.jsf.schema)) {\r\n\r\n      // TODO: If full layout input (with no '*'), build schema from layout\r\n      // if (!this.jsf.layout.includes('*')) {\r\n      //   this.jsf.buildSchemaFromLayout();\r\n      // } else\r\n\r\n      // If data input, build schema from data\r\n      if (!isEmpty(this.jsf.formValues)) {\r\n        this.jsf.buildSchemaFromData();\r\n      }\r\n    }\r\n\r\n    if (!isEmpty(this.jsf.schema)) {\r\n\r\n      // If not already initialized, initialize ajv and compile schema\r\n      this.jsf.compileAjvSchema();\r\n\r\n      // Update all layout elements, add values, widgets, and validators,\r\n      // replace any '*' with a layout built from all schema elements,\r\n      // and update the FormGroup template with any new validators\r\n      this.jsf.buildLayout(this.widgetLibrary);\r\n\r\n      // Build the Angular FormGroup template from the schema\r\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\r\n\r\n      // Build the real Angular FormGroup from the FormGroup template\r\n      this.jsf.buildFormGroup();\r\n    }\r\n\r\n    if (this.jsf.formGroup) {\r\n\r\n      // Reset initial form values\r\n      if (!isEmpty(this.jsf.formValues) &&\r\n        this.jsf.formOptions.setSchemaDefaults !== true &&\r\n        this.jsf.formOptions.setLayoutDefaults !== true\r\n      ) {\r\n        this.setFormValues(this.jsf.formValues);\r\n      }\r\n\r\n      // TODO: Figure out how to display calculated values without changing object data\r\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\r\n      // Calculate references to other fields\r\n      // if (!isEmpty(this.jsf.formGroup.value)) {\r\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\r\n      //     if (typeof value === 'string') {\r\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\r\n      //     }\r\n      //   }, 'top-down');\r\n      // }\r\n\r\n      // Subscribe to form changes to output live data, validation, and errors\r\n      this.jsf.dataChanges.subscribe(data => {\r\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\r\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\r\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\r\n        }\r\n      });\r\n\r\n      // Trigger change detection on statusChanges to show updated errors\r\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\r\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\r\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\r\n\r\n      // Output final schema, final layout, and initial data\r\n      this.formSchema.emit(this.jsf.schema);\r\n      this.formLayout.emit(this.jsf.layout);\r\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\r\n\r\n      // If validateOnRender, output initial validation and any errors\r\n      const validateOnRender =\r\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\r\n      if (validateOnRender) { // validateOnRender === 'auto' || true\r\n        const touchAll = (control) => {\r\n          if (validateOnRender === true || hasValue(control.value)) {\r\n            control.markAsTouched();\r\n          }\r\n          Object.keys(control.controls || {})\r\n            .forEach(key => touchAll(control.controls[key]));\r\n        };\r\n        touchAll(this.jsf.formGroup);\r\n        this.isValid.emit(this.jsf.isValid);\r\n        this.validationErrors.emit(this.jsf.ajvErrors);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'no-framework',\r\n  template: `\r\n    <select-widget-widget\r\n      [dataIndex]=\"dataIndex\"\r\n      [layoutIndex]=\"layoutIndex\"\r\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\r\n})\r\nexport class NoFrameworkComponent {\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n}\r\n","import { Framework } from '../framework';\r\nimport { Injectable } from '@angular/core';\r\nimport { NoFrameworkComponent } from './no-framework.component';\r\n// No framework - plain HTML controls (styles from form layout only)\r\n\r\n@Injectable()\r\nexport class NoFramework extends Framework {\r\n  name = 'no-framework';\r\n\r\n  framework = NoFrameworkComponent;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hidden-widget',\r\n  template: `\r\n    <input *ngIf=\"boundControl\"\r\n      [formControl]=\"formControl\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      [name]=\"controlName\"\r\n      type=\"hidden\">\r\n    <input *ngIf=\"!boundControl\"\r\n      [disabled]=\"controlDisabled\"\r\n      [name]=\"controlName\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      type=\"hidden\"\r\n      [value]=\"controlValue\">`,\r\n})\r\nexport class HiddenComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.jsf.initializeControl(this);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'tab-widget',\r\n  template: `\r\n    <div [class]=\"options?.htmlClass || ''\">\r\n      <root-widget\r\n        [dataIndex]=\"dataIndex\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [layout]=\"layoutNode.items\"></root-widget>\r\n    </div>`,\r\n})\r\nexport class TabComponent implements OnInit {\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnInit\r\n  } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\n\r\n\r\n/**\r\n * OrderableDirective\r\n *\r\n * Enables array elements to be reordered by dragging and dropping.\r\n *\r\n * Only works for arrays that have at least two elements.\r\n *\r\n * Also detects arrays-within-arrays, and correctly moves either\r\n * the child array element or the parent array element,\r\n * depending on the drop targert.\r\n *\r\n * Listeners for movable element being dragged:\r\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\r\n * - dragover: set dropEffect = 'move'\r\n * - dragend: remove 'dragging' class from element\r\n *\r\n * Listeners for stationary items being dragged over:\r\n * - dragenter: add 'drag-target-...' classes to element\r\n * - dragleave: remove 'drag-target-...' classes from element\r\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\r\n */\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[orderable]',\r\n})\r\nexport class OrderableDirective implements OnInit {\r\n  arrayLayoutIndex: string;\r\n  element: any;\r\n  overParentElement = false;\r\n  overChildElement = false;\r\n  @Input() orderable: boolean;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private jsf: JsonSchemaFormService,\r\n    private ngZone: NgZone\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\r\n      this.element = this.elementRef.nativeElement;\r\n      this.element.draggable = true;\r\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\r\n\r\n      this.ngZone.runOutsideAngular(() => {\r\n\r\n        // Listeners for movable element being dragged:\r\n\r\n        this.element.addEventListener('dragstart', (event) => {\r\n          event.dataTransfer.effectAllowed = 'move';\r\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\r\n          // so drag source info will be available on dragenter\r\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\r\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\r\n        });\r\n\r\n        this.element.addEventListener('dragover', (event) => {\r\n          if (event.preventDefault) { event.preventDefault(); }\r\n          event.dataTransfer.dropEffect = 'move';\r\n          return false;\r\n        });\r\n\r\n        // Listeners for stationary items being dragged over:\r\n\r\n        this.element.addEventListener('dragenter', (event) => {\r\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\r\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\r\n          if (this.overParentElement) {\r\n            return this.overChildElement = true;\r\n          } else {\r\n            this.overParentElement = true;\r\n          }\r\n\r\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\r\n          if (sourceArrayIndex !== null) {\r\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\r\n              this.element.classList.add('drag-target-top');\r\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\r\n              this.element.classList.add('drag-target-bottom');\r\n            }\r\n          }\r\n        });\r\n\r\n        this.element.addEventListener('dragleave', (event) => {\r\n          // Part 2 of the Dragster hack\r\n          if (this.overChildElement) {\r\n            this.overChildElement = false;\r\n          } else if (this.overParentElement) {\r\n            this.overParentElement = false;\r\n          }\r\n\r\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\r\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\r\n            this.element.classList.remove('drag-target-top');\r\n            this.element.classList.remove('drag-target-bottom');\r\n          }\r\n        });\r\n\r\n        this.element.addEventListener('drop', (event) => {\r\n          this.element.classList.remove('drag-target-top');\r\n          this.element.classList.remove('drag-target-bottom');\r\n          // Confirm that drop target is another item in the same array as source item\r\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\r\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\r\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\r\n            // Move array item\r\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\r\n          }\r\n          sessionStorage.removeItem(this.arrayLayoutIndex);\r\n          return false;\r\n        });\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { AddReferenceComponent } from './add-reference.component';\r\nimport { ButtonComponent } from './button.component';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { CheckboxesComponent } from './checkboxes.component';\r\nimport { FileComponent } from './file.component';\r\nimport { HiddenComponent } from './hidden.component';\r\nimport { InputComponent } from './input.component';\r\nimport { MessageComponent } from './message.component';\r\nimport { NoneComponent } from './none.component';\r\nimport { NumberComponent } from './number.component';\r\nimport { OneOfComponent } from './one-of.component';\r\nimport { RadiosComponent } from './radios.component';\r\nimport { RootComponent } from './root.component';\r\nimport { SectionComponent } from './section.component';\r\nimport { SelectComponent } from './select.component';\r\nimport { SelectFrameworkComponent } from './select-framework.component';\r\nimport { SelectWidgetComponent } from './select-widget.component';\r\nimport { SubmitComponent } from './submit.component';\r\nimport { TabComponent } from './tab.component';\r\nimport { TabsComponent } from './tabs.component';\r\nimport { TemplateComponent } from './template.component';\r\nimport { TextareaComponent } from './textarea.component';\r\n\r\nexport const BASIC_WIDGETS = [\r\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\r\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\r\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\r\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\r\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\r\n  TemplateComponent, TextareaComponent\r\n];\r\n\r\nexport { AddReferenceComponent } from './add-reference.component';\r\nexport { OneOfComponent } from './one-of.component';\r\nexport { ButtonComponent } from './button.component';\r\nexport { CheckboxComponent } from './checkbox.component';\r\nexport { CheckboxesComponent } from './checkboxes.component';\r\nexport { FileComponent } from './file.component';\r\nexport { HiddenComponent } from './hidden.component';\r\nexport { InputComponent } from './input.component';\r\nexport { MessageComponent } from './message.component';\r\nexport { NoneComponent } from './none.component';\r\nexport { NumberComponent } from './number.component';\r\nexport { OrderableDirective } from './orderable.directive';\r\nexport { RadiosComponent } from './radios.component';\r\nexport { RootComponent } from './root.component';\r\nexport { SectionComponent } from './section.component';\r\nexport { SelectComponent } from './select.component';\r\nexport { SelectFrameworkComponent } from './select-framework.component';\r\nexport { SelectWidgetComponent } from './select-widget.component';\r\nexport { SubmitComponent } from './submit.component';\r\nexport { TabComponent } from './tab.component';\r\nexport { TabsComponent } from './tabs.component';\r\nexport { TemplateComponent } from './template.component';\r\nexport { TextareaComponent } from './textarea.component';\r\nexport { WidgetLibraryService } from './widget-library.service';\r\n","import { BASIC_WIDGETS } from './index';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../json-schema-form.service';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { OrderableDirective } from './orderable.directive';\r\n\r\n@NgModule({\r\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\r\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\r\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\r\n  entryComponents: [ ...BASIC_WIDGETS ],\r\n  providers:       [ JsonSchemaFormService ]\r\n})\r\nexport class WidgetLibraryModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: WidgetLibraryModule,\r\n      providers: [ JsonSchemaFormService ]\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Framework } from '../framework';\r\nimport { FrameworkLibraryService } from '../framework-library.service';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NoFramework } from './no.framework';\r\nimport { NoFrameworkComponent } from './no-framework.component';\r\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\r\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\r\n\r\n// No framework - plain HTML controls (styles from form layout only)\r\n\r\n@NgModule({\r\n  imports: [CommonModule, WidgetLibraryModule],\r\n  declarations: [NoFrameworkComponent],\r\n  exports: [NoFrameworkComponent],\r\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\r\n    { provide: Framework, useClass: NoFramework, multi: true }\r\n  ],\r\n  entryComponents: [NoFrameworkComponent]\r\n})\r\nexport class NoFrameworkModule { }\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'flex-layout-root-widget',\r\n  template: `\r\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\r\n      [class.form-flex-item]=\"isFlexItem\"\r\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\r\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\r\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\r\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\r\n      [style.order]=\"layoutNode?.options?.order\"\r\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\r\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\r\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\r\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\r\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\r\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\r\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\r\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\r\n    <div>`,\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class FlexLayoutRootComponent {\r\n  @Input() dataIndex: number[];\r\n  @Input() layoutIndex: number[];\r\n  @Input() layout: any[];\r\n  @Input() isFlexItem = false;\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  removeItem(item) {\r\n    this.jsf.removeItem(item);\r\n  }\r\n\r\n  // Set attributes for flexbox child\r\n  // (container attributes are set in flex-layout-section.component)\r\n  getFlexAttribute(node: any, attribute: string) {\r\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\r\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\r\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\r\n  }\r\n\r\n  showWidget(layoutNode: any): boolean {\r\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'flex-layout-section-widget',\r\n  template: `\r\n    <div *ngIf=\"containerType === 'div'\"\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\">\r\n      <label *ngIf=\"sectionTitle\"\r\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\r\n        [innerHTML]=\"sectionTitle\"\r\n        (click)=\"toggleExpanded()\"></label>\r\n      <flex-layout-root-widget *ngIf=\"expanded\"\r\n        [layout]=\"layoutNode.items\"\r\n        [dataIndex]=\"dataIndex\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n        [style.display]=\"getFlexAttribute('display')\"\r\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n        [style.align-items]=\"getFlexAttribute('align-items')\"\r\n        [style.align-content]=\"getFlexAttribute('align-content')\"\r\n        [fxLayout]=\"getFlexAttribute('layout')\"\r\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\r\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\r\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </div>\r\n\r\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\"\r\n      [disabled]=\"options?.readonly\">\r\n      <legend *ngIf=\"sectionTitle\"\r\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\r\n        [innerHTML]=\"sectionTitle\"\r\n        (click)=\"toggleExpanded()\"></legend>\r\n      <flex-layout-root-widget *ngIf=\"expanded\"\r\n        [layout]=\"layoutNode.items\"\r\n        [dataIndex]=\"dataIndex\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n        [style.display]=\"getFlexAttribute('display')\"\r\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n        [style.align-items]=\"getFlexAttribute('align-items')\"\r\n        [style.align-content]=\"getFlexAttribute('align-content')\"\r\n        [fxLayout]=\"getFlexAttribute('layout')\"\r\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\r\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\r\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </fieldset>\r\n\r\n    <mat-card *ngIf=\"containerType === 'card'\"\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.expandable]=\"options?.expandable && !expanded\"\r\n      [class.expanded]=\"options?.expandable && expanded\">\r\n      <mat-card-header *ngIf=\"sectionTitle\">\r\n        <legend\r\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\r\n          [innerHTML]=\"sectionTitle\"\r\n          (click)=\"toggleExpanded()\"></legend>\r\n      </mat-card-header>\r\n      <mat-card-content *ngIf=\"expanded\">\r\n        <fieldset [disabled]=\"options?.readonly\">\r\n          <flex-layout-root-widget *ngIf=\"expanded\"\r\n            [layout]=\"layoutNode.items\"\r\n            [dataIndex]=\"dataIndex\"\r\n            [layoutIndex]=\"layoutIndex\"\r\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n            [style.display]=\"getFlexAttribute('display')\"\r\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n            [style.align-items]=\"getFlexAttribute('align-items')\"\r\n            [style.align-content]=\"getFlexAttribute('align-content')\"\r\n            [fxLayout]=\"getFlexAttribute('layout')\"\r\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\r\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\r\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\r\n          </fieldset>\r\n      </mat-card-content>\r\n      <mat-card-footer>\r\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n      </mat-card-footer>\r\n    </mat-card>\r\n\r\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\r\n      [expanded]=\"expanded\"\r\n      [hideToggle]=\"!options?.expandable\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <legend *ngIf=\"sectionTitle\"\r\n            [class]=\"options?.labelHtmlClass\"\r\n            [innerHTML]=\"sectionTitle\"\r\n            (click)=\"toggleExpanded()\"></legend>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <fieldset [disabled]=\"options?.readonly\">\r\n        <flex-layout-root-widget *ngIf=\"expanded\"\r\n          [layout]=\"layoutNode.items\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"\r\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\r\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\r\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\r\n          [style.display]=\"getFlexAttribute('display')\"\r\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\r\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\r\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\r\n          [style.align-items]=\"getFlexAttribute('align-items')\"\r\n          [style.align-content]=\"getFlexAttribute('align-content')\"\r\n          [fxLayout]=\"getFlexAttribute('layout')\"\r\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\r\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\r\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\r\n      </fieldset>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </mat-expansion-panel>`,\r\n  styles: [`\r\n    fieldset { border: 0; margin: 0; padding: 0; }\r\n    .legend { font-weight: bold; }\r\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\r\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\r\n  `],\r\n})\r\nexport class FlexLayoutSectionComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  expanded = true;\r\n  containerType = 'div';\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  get sectionTitle() {\r\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.jsf.initializeControl(this);\r\n    this.options = this.layoutNode.options || {};\r\n    this.expanded = typeof this.options.expanded === 'boolean' ?\r\n      this.options.expanded : !this.options.expandable;\r\n    switch (this.layoutNode.type) {\r\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\r\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\r\n        this.containerType = 'fieldset';\r\n        break;\r\n      case 'card':\r\n        this.containerType = 'card';\r\n        break;\r\n      case 'expansion-panel':\r\n        this.containerType = 'expansion-panel';\r\n        break;\r\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\r\n        this.containerType = 'div';\r\n    }\r\n  }\r\n\r\n  toggleExpanded() {\r\n    if (this.options.expandable) { this.expanded = !this.expanded; }\r\n  }\r\n\r\n  // Set attributes for flexbox container\r\n  // (child attributes are set in flex-layout-root.component)\r\n  getFlexAttribute(attribute: string) {\r\n    const flexActive: boolean =\r\n      this.layoutNode.type === 'flex' ||\r\n      !!this.options.displayFlex ||\r\n      this.options.display === 'flex';\r\n    // if (attribute !== 'flex' && !flexActive) { return null; }\r\n    switch (attribute) {\r\n      case 'is-flex':\r\n        return flexActive;\r\n      case 'display':\r\n        return flexActive ? 'flex' : 'initial';\r\n      case 'flex-direction': case 'flex-wrap':\r\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\r\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\r\n          this.options[attribute] || ['column', 'nowrap'][index];\r\n      case 'justify-content': case 'align-items': case 'align-content':\r\n        return this.options[attribute];\r\n      case 'layout':\r\n        return (this.options.fxLayout || 'row') +\r\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\r\n\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-add-reference-widget',\r\n  template: `\r\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\r\n      <button mat-raised-button *ngIf=\"showAddButton\"\r\n        [color]=\"options?.color || 'accent'\"\r\n        [disabled]=\"options?.readonly\"\r\n        (click)=\"addItem($event)\">\r\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\r\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\r\n      </button>\r\n    </section>`,\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class MaterialAddReferenceComponent implements OnInit {\r\n  options: any;\r\n  itemCount: number;\r\n  previousLayoutIndex: number[];\r\n  previousDataIndex: number[];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n  }\r\n\r\n  get showAddButton(): boolean {\r\n    return !this.layoutNode.arrayItem ||\r\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\r\n  }\r\n\r\n  addItem(event) {\r\n    event.preventDefault();\r\n    this.jsf.addItem(this);\r\n  }\r\n\r\n  get buttonText(): string {\r\n    const parent: any = {\r\n      dataIndex: this.dataIndex.slice(0, -1),\r\n      layoutIndex: this.layoutIndex.slice(0, -1),\r\n      layoutNode: this.jsf.getParentNode(this),\r\n    };\r\n    return parent.layoutNode.add ||\r\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { hasOwn } from '../../shared/utility.functions';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-button-widget',\r\n  template: `\r\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\r\n      <button mat-raised-button\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [color]=\"options?.color || 'primary'\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (click)=\"updateValue($event)\">\r\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\r\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\r\n      </button>\r\n    </div>`,\r\n    styles: [` button { margin-top: 10px; } `],\r\n})\r\nexport class MaterialButtonComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (hasOwn(this.options, 'disabled')) {\r\n      this.controlDisabled = this.options.disabled;\r\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\r\n      this.controlDisabled = !this.jsf.isValid;\r\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    if (typeof this.options.onClick === 'function') {\r\n      this.options.onClick(event);\r\n    } else {\r\n      this.jsf.updateValue(this, event.target.value);\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap } from '../../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-button-group-widget',\r\n  template: `\r\n    <div>\r\n      <div *ngIf=\"options?.title\">\r\n        <label\r\n          [attr.for]=\"'control' + layoutNode?._id\"\r\n          [class]=\"options?.labelHtmlClass || ''\"\r\n          [style.display]=\"options?.notitle ? 'none' : ''\"\r\n          [innerHTML]=\"options?.title\"></label>\r\n      </div>\r\n      <mat-button-toggle-group\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [name]=\"controlName\"\r\n        [value]=\"controlValue\"\r\n        [vertical]=\"!!options.vertical\">\r\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\r\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\r\n          [value]=\"radioItem?.value\"\r\n          (click)=\"updateValue(radioItem?.value)\">\r\n          <span [innerHTML]=\"radioItem?.name\"></span>\r\n        </mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </div>`,\r\n    styles: [` mat-error { font-size: 75%; } `],\r\n})\r\nexport class MaterialButtonGroupComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  radiosList: any[] = [];\r\n  vertical = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.radiosList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum, true\r\n    );\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-checkbox-widget',\r\n  template: `\r\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\r\n      [formControl]=\"formControl\"\r\n      align=\"left\"\r\n      [color]=\"options?.color || 'primary'\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      labelPosition=\"after\"\r\n      [name]=\"controlName\"\r\n      (blur)=\"options.showErrors = true\">\r\n      <span *ngIf=\"options?.title\"\r\n        class=\"checkbox-name\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></span>\r\n    </mat-checkbox>\r\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\r\n      align=\"left\"\r\n      [color]=\"options?.color || 'primary'\"\r\n      [disabled]=\"controlDisabled || options?.readonly\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      labelPosition=\"after\"\r\n      [name]=\"controlName\"\r\n      [checked]=\"isChecked\"\r\n      (blur)=\"options.showErrors = true\"\r\n      (change)=\"updateValue($event)\">\r\n      <span *ngIf=\"options?.title\"\r\n        class=\"checkbox-name\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></span>\r\n    </mat-checkbox>\r\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\r\n      [formControl]=\"formControl\"\r\n      align=\"left\"\r\n      [color]=\"options?.color || 'primary'\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      labelPosition=\"after\"\r\n      [name]=\"controlName\"\r\n      (blur)=\"options.showErrors = true\">\r\n      <span *ngIf=\"options?.title\"\r\n        class=\"checkbox-name\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></span>\r\n    </mat-slide-toggle>\r\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\r\n      align=\"left\"\r\n      [color]=\"options?.color || 'primary'\"\r\n      [disabled]=\"controlDisabled || options?.readonly\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      labelPosition=\"after\"\r\n      [name]=\"controlName\"\r\n      [checked]=\"isChecked\"\r\n      (blur)=\"options.showErrors = true\"\r\n      (change)=\"updateValue($event)\">\r\n      <span *ngIf=\"options?.title\"\r\n        class=\"checkbox-name\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></span>\r\n    </mat-slide-toggle>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    .checkbox-name { white-space: nowrap; }\r\n    mat-error { font-size: 75%; }\r\n  `],\r\n})\r\nexport class MaterialCheckboxComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  trueValue: any = true;\r\n  falseValue: any = false;\r\n  showSlideToggle = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this, !this.options.readonly);\r\n    if (this.controlValue === null || this.controlValue === undefined) {\r\n      this.controlValue = false;\r\n      this.jsf.updateValue(this, this.falseValue);\r\n    }\r\n    if (this.layoutNode.type === 'slide-toggle' ||\r\n      this.layoutNode.format === 'slide-toggle'\r\n    ) {\r\n      this.showSlideToggle = true;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.jsf.getFormControlValue(this) === this.trueValue;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap } from '../../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\r\n\r\n// TODO: Change this to use a Selection List instead?\r\n// https://material.angular.io/components/list/overview\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-checkboxes-widget',\r\n  template: `\r\n    <div>\r\n      <mat-checkbox type=\"checkbox\"\r\n        [checked]=\"allChecked\"\r\n        [color]=\"options?.color || 'primary'\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [indeterminate]=\"someChecked\"\r\n        [name]=\"options?.name\"\r\n        (blur)=\"options.showErrors = true\"\r\n        (change)=\"updateAllValues($event)\">\r\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\r\n      </mat-checkbox>\r\n      <label *ngIf=\"options?.title\"\r\n        class=\"title\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [style.display]=\"options?.notitle ? 'none' : ''\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\r\n        <li *ngFor=\"let checkboxItem of checkboxList\"\r\n          [class]=\"options?.htmlClass || ''\">\r\n          <mat-checkbox type=\"checkbox\"\r\n            [(ngModel)]=\"checkboxItem.checked\"\r\n            [color]=\"options?.color || 'primary'\"\r\n            [disabled]=\"controlDisabled || options?.readonly\"\r\n            [name]=\"checkboxItem?.name\"\r\n            (blur)=\"options.showErrors = true\"\r\n            (change)=\"updateValue()\">\r\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </div>`,\r\n  styles: [`\r\n    .title { font-weight: bold; }\r\n    .checkbox-list { list-style-type: none; }\r\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\r\n    .checkbox-name { white-space: nowrap; }\r\n    mat-error { font-size: 75%; }\r\n  `],\r\n})\r\nexport class MaterialCheckboxesComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  horizontalList = false;\r\n  formArray: AbstractControl;\r\n  checkboxList: TitleMapItem[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\r\n      this.layoutNode.type === 'checkboxbuttons';\r\n    this.jsf.initializeControl(this);\r\n    this.checkboxList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\r\n    );\r\n    if (this.boundControl) {\r\n      const formArray = this.jsf.getFormControl(this);\r\n      for (const checkboxItem of this.checkboxList) {\r\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  get allChecked(): boolean {\r\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\r\n  }\r\n\r\n  get someChecked(): boolean {\r\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\r\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\r\n  }\r\n\r\n  updateValue() {\r\n    this.options.showErrors = true;\r\n    if (this.boundControl) {\r\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\r\n    }\r\n  }\r\n\r\n  updateAllValues(event: any) {\r\n    this.options.showErrors = true;\r\n    this.checkboxList.forEach(t => t.checked = event.checked);\r\n    this.updateValue();\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-chip-list-widget',\r\n  template: ``,\r\n})\r\nexport class MaterialChipListComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport { dateToString, stringToDate } from '../../shared';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-datepicker-widget',\r\n  template: `\r\n    <mat-form-field [style.width]=\"'100%'\">\r\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\r\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\r\n      <input matInput *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [max]=\"options?.maximum\"\r\n        [matDatepicker]=\"picker\"\r\n        [min]=\"options?.minimum\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.title\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        (blur)=\"options.showErrors = true\">\r\n      <input matInput *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [max]=\"options?.maximum\"\r\n        [matDatepicker]=\"picker\"\r\n        [min]=\"options?.minimum\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.title\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [value]=\"dateValue\"\r\n        (blur)=\"options.showErrors = true\"\r\n        (change)=\"updateValue($event)\"\r\n        (input)=\"updateValue($event)\">\r\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\r\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\r\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\r\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    </mat-form-field>\r\n    <mat-datepicker #picker\r\n      (selectedChanged)=\"updateValue($event)\"></mat-datepicker>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\r\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\r\n      .mat-form-field-infix { width: initial; }\r\n  `],\r\n})\r\nexport class MaterialDatepickerComponent implements OnInit, OnChanges {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  dateValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  autoCompleteList: string[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this, !this.options.readonly);\r\n    this.setControlDate(this.controlValue);\r\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\r\n      this.options.description = this.options.placeholder;\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.setControlDate(this.controlValue);\r\n  }\r\n\r\n  setControlDate(dateString: string) {\r\n    this.dateValue = stringToDate(dateString);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, dateToString(event, this.options));\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport _ from 'lodash';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport { isDefined } from '../../shared';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-design-framework',\r\n  template: `\r\n    <div\r\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\r\n      [orderable]=\"isOrderable\"\r\n      [dataIndex]=\"dataIndex\"\r\n      [layoutIndex]=\"layoutIndex\"\r\n      [layoutNode]=\"widgetLayoutNode\">\r\n      <svg *ngIf=\"showRemoveButton\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\r\n        class=\"close-button\"\r\n        (click)=\"removeItem()\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\r\n      </svg>\r\n      <select-widget-widget\r\n        [dataIndex]=\"dataIndex\"\r\n        [layoutIndex]=\"layoutIndex\"\r\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\r\n    </div>\r\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\r\n  styles: [`\r\n    .array-item {\r\n      border-radius: 2px;\r\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\r\n                  0 2px 2px  0   rgba(0,0,0,.14),\r\n                  0 1px 5px  0   rgba(0,0,0,.12);\r\n      padding: 6px;\r\n      position: relative;\r\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\r\n    }\r\n    .close-button {\r\n      cursor: pointer;\r\n      position: absolute;\r\n      top: 6px;\r\n      right: 6px;\r\n      fill: rgba(0,0,0,.4);\r\n      visibility: hidden;\r\n      z-index: 500;\r\n    }\r\n    .close-button:hover { fill: rgba(0,0,0,.8); }\r\n    .array-item:hover > .close-button { visibility: visible; }\r\n    .spacer { margin: 6px 0; }\r\n    [draggable=true]:hover {\r\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\r\n                  0 8px 10px 1px rgba(0,0,0,.14),\r\n                  0 3px 14px 2px rgba(0,0,0,.12);\r\n      cursor: move;\r\n      z-index: 10;\r\n    }\r\n    [draggable=true].drag-target-top {\r\n      box-shadow: 0 -2px 0 #000;\r\n      position: relative; z-index: 20;\r\n    }\r\n    [draggable=true].drag-target-bottom {\r\n      box-shadow: 0 2px 0 #000;\r\n      position: relative; z-index: 20;\r\n    }\r\n  `],\r\n})\r\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\r\n  frameworkInitialized = false;\r\n  inputType: string;\r\n  options: any; // Options used in this framework\r\n  widgetLayoutNode: any; // layoutNode passed to child widget\r\n  widgetOptions: any; // Options passed to child widget\r\n  formControl: any = null;\r\n  parentArray: any = null;\r\n  isOrderable = false;\r\n  dynamicTitle: string = null;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  get showRemoveButton(): boolean {\r\n    if (!this.layoutNode || !this.widgetOptions.removable ||\r\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\r\n    ) { return false; }\r\n    if (this.layoutNode.recursiveReference) { return true; }\r\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\r\n    // If array length <= minItems, don't allow removing any items\r\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\r\n      // For removable list items, allow removing any item\r\n      this.layoutNode.arrayItemType === 'list' ? true :\r\n      // For removable tuple items, only allow removing last item in list\r\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeFramework();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\r\n    if (this.dynamicTitle) { this.updateTitle(); }\r\n  }\r\n\r\n  initializeFramework() {\r\n    if (this.layoutNode) {\r\n      this.options = _.cloneDeep(this.layoutNode.options || {});\r\n      this.widgetLayoutNode = {\r\n        ...this.layoutNode,\r\n        options: _.cloneDeep(this.layoutNode.options || {})\r\n      };\r\n      this.widgetOptions = this.widgetLayoutNode.options;\r\n      this.formControl = this.jsf.getFormControl(this);\r\n\r\n      if (\r\n        isDefined(this.widgetOptions.minimum) &&\r\n        isDefined(this.widgetOptions.maximum) &&\r\n        this.widgetOptions.multipleOf >= 1\r\n      ) {\r\n        this.layoutNode.type = 'range';\r\n      }\r\n\r\n      if (\r\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\r\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\r\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\r\n        /{{.+?}}/.test(this.widgetOptions.title || '')\r\n      ) {\r\n        this.dynamicTitle = this.widgetOptions.title;\r\n        this.updateTitle();\r\n      }\r\n\r\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\r\n        this.parentArray = this.jsf.getParentNode(this);\r\n        if (this.parentArray) {\r\n          this.isOrderable =\r\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\r\n            this.layoutNode.arrayItemType === 'list' &&\r\n            !this.widgetOptions.readonly &&\r\n            this.parentArray.options.orderable;\r\n        }\r\n      }\r\n\r\n      this.frameworkInitialized = true;\r\n    } else {\r\n      this.options = {};\r\n    }\r\n  }\r\n\r\n  updateTitle() {\r\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\r\n      this.dynamicTitle,\r\n      this.jsf.getFormControlValue(this),\r\n      this.jsf.getFormControlGroup(this).value,\r\n      this.dataIndex[this.dataIndex.length - 1]\r\n    );\r\n  }\r\n\r\n  removeItem() {\r\n    this.jsf.removeItem(this);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-file-widget',\r\n  template: ``,\r\n})\r\nexport class MaterialFileComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-input-widget',\r\n  template: `\r\n    <mat-form-field\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\r\n      [style.width]=\"'100%'\">\r\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\r\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\r\n      <input matInput *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [type]=\"layoutNode?.type\"\r\n        (blur)=\"options.showErrors = true\">\r\n      <input matInput *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [type]=\"layoutNode?.type\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\"\r\n        (blur)=\"options.showErrors = true\">\r\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\r\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\r\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\r\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\r\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\r\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\r\n          [value]=\"word\">{{word}}</mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\r\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\r\n      .mat-form-field-infix { width: initial; }\r\n  `],\r\n})\r\nexport class MaterialInputComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: string;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  autoCompleteList: string[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\r\n      this.options.description = this.options.placeholder;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-number-widget',\r\n  template: `\r\n    <mat-form-field\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\r\n      [style.width]=\"'100%'\">\r\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\r\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\r\n      <input matInput *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.max]=\"options?.maximum\"\r\n        [attr.min]=\"options?.minimum\"\r\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [type]=\"'number'\"\r\n        (blur)=\"options.showErrors = true\">\r\n      <input matInput *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.max]=\"options?.maximum\"\r\n        [attr.min]=\"options?.minimum\"\r\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [type]=\"'number'\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\"\r\n        (blur)=\"options.showErrors = true\">\r\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\r\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\r\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\r\n        [innerHTML]=\"controlValue\"></mat-hint>\r\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\r\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\r\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\r\n      .mat-form-field-infix { width: initial; }\r\n  `],\r\n})\r\nexport class MaterialNumberComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  allowNegative = true;\r\n  allowDecimal = true;\r\n  allowExponents = false;\r\n  lastValidNumber = '';\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\r\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\r\n      this.options.description = this.options.placeholder;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-one-of-widget',\r\n  template: ``,\r\n})\r\nexport class MaterialOneOfComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap } from '../../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-radios-widget',\r\n  template: `\r\n    <div>\r\n      <div *ngIf=\"options?.title\">\r\n        <label\r\n          [attr.for]=\"'control' + layoutNode?._id\"\r\n          [class]=\"options?.labelHtmlClass || ''\"\r\n          [style.display]=\"options?.notitle ? 'none' : ''\"\r\n          [innerHTML]=\"options?.title\"></label>\r\n      </div>\r\n      <mat-radio-group *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [style.flex-direction]=\"flexDirection\"\r\n        [name]=\"controlName\"\r\n        (blur)=\"options.showErrors = true\">\r\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\r\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\r\n          [value]=\"radioItem?.value\">\r\n          <span [innerHTML]=\"radioItem?.name\"></span>\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n      <mat-radio-group *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [attr.required]=\"options?.required\"\r\n        [style.flex-direction]=\"flexDirection\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [name]=\"controlName\"\r\n        [value]=\"controlValue\">\r\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\r\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\r\n          [value]=\"radioItem?.value\"\r\n          (click)=\"updateValue(radioItem?.value)\">\r\n          <span [innerHTML]=\"radioItem?.name\"></span>\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\r\n    </div>`,\r\n  styles: [`\r\n    mat-radio-group { display: inline-flex; }\r\n    mat-radio-button { margin: 2px; }\r\n    mat-error { font-size: 75%; }\r\n  `]\r\n})\r\nexport class MaterialRadiosComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  flexDirection = 'column';\r\n  radiosList: any[] = [];\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    if (this.layoutNode.type === 'radios-inline') {\r\n      this.flexDirection = 'row';\r\n    }\r\n    this.radiosList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum, true\r\n    );\r\n    this.jsf.initializeControl(this, !this.options.readonly);\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { buildTitleMap, isArray } from '../../shared';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-select-widget',\r\n  template: `\r\n    <mat-form-field\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\r\n      [style.width]=\"'100%'\">\r\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\r\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\r\n      <mat-select *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.name]=\"controlName\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [multiple]=\"options?.multiple\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        (blur)=\"options.showErrors = true\">\r\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\r\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\r\n            [value]=\"selectItem?.value\">\r\n            <span [innerHTML]=\"selectItem?.name\"></span>\r\n          </mat-option>\r\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\r\n            [label]=\"selectItem?.group\">\r\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\r\n              [value]=\"subItem?.value\">\r\n              <span [innerHTML]=\"subItem?.name\"></span>\r\n            </mat-option>\r\n          </mat-optgroup>\r\n        </ng-template>\r\n      </mat-select>\r\n      <mat-select *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.name]=\"controlName\"\r\n        [disabled]=\"controlDisabled || options?.readonly\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [multiple]=\"options?.multiple\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [required]=\"options?.required\"\r\n        [style.width]=\"'100%'\"\r\n        [value]=\"controlValue\"\r\n        (blur)=\"options.showErrors = true\"\r\n        (change)=\"updateValue($event)\">\r\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\r\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\r\n            [attr.selected]=\"selectItem?.value === controlValue\"\r\n            [value]=\"selectItem?.value\">\r\n            <span [innerHTML]=\"selectItem?.name\"></span>\r\n          </mat-option>\r\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\r\n            [label]=\"selectItem?.group\">\r\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\r\n              [attr.selected]=\"subItem?.value === controlValue\"\r\n              [value]=\"subItem?.value\">\r\n              <span [innerHTML]=\"subItem?.name\"></span>\r\n            </mat-option>\r\n          </mat-optgroup>\r\n        </ng-template>\r\n      </mat-select>\r\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\r\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\r\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\r\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\r\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\r\n      .mat-form-field-infix { width: initial; }\r\n  `],\r\n})\r\nexport class MaterialSelectComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  selectList: any[] = [];\r\n  isArray = isArray;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.selectList = buildTitleMap(\r\n      this.options.titleMap || this.options.enumNames,\r\n      this.options.enum, !!this.options.required, !!this.options.flatList\r\n    );\r\n    this.jsf.initializeControl(this, !this.options.readonly);\r\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\r\n      this.options.description = this.options.placeholder;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, event.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-slider-widget',\r\n  template: `\r\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\r\n      [formControl]=\"formControl\"\r\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      [max]=\"options?.maximum\"\r\n      [min]=\"options?.minimum\"\r\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\r\n      [style.width]=\"'100%'\"\r\n      (blur)=\"options.showErrors = true\"></mat-slider>\r\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\r\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n      [disabled]=\"controlDisabled || options?.readonly\"\r\n      [id]=\"'control' + layoutNode?._id\"\r\n      [max]=\"options?.maximum\"\r\n      [min]=\"options?.minimum\"\r\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\r\n      [style.width]=\"'100%'\"\r\n      [value]=\"controlValue\"\r\n      (blur)=\"options.showErrors = true\"\r\n      (change)=\"updateValue($event)\"></mat-slider>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n    styles: [` mat-error { font-size: 75%; } `],\r\n})\r\nexport class MaterialSliderComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  allowNegative = true;\r\n  allowDecimal = true;\r\n  allowExponents = false;\r\n  lastValidNumber = '';\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this, !this.options.readonly);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.options.showErrors = true;\r\n    this.jsf.updateValue(this, event.value);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n// TODO: Add this control\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-stepper-widget',\r\n  template: ``,\r\n})\r\nexport class MaterialStepperComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-tabs-widget',\r\n  template: `\r\n    <nav mat-tab-nav-bar\r\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\r\n      [style.width]=\"'100%'\">\r\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\r\n          [active]=\"selectedItem === i\"\r\n          (click)=\"select(i)\">\r\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\r\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\r\n        </a>\r\n    </nav>\r\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\r\n      [class]=\"options?.htmlClass || ''\">\r\n      <select-framework-widget *ngIf=\"selectedItem === i\"\r\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\r\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\r\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\r\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\r\n    </div>`,\r\n  styles: [` a { cursor: pointer; } `],\r\n})\r\nexport class MaterialTabsComponent implements OnInit {\r\n  options: any;\r\n  itemCount: number;\r\n  selectedItem = 0;\r\n  showAddTab = true;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.itemCount = this.layoutNode.items.length - 1;\r\n    this.updateControl();\r\n  }\r\n\r\n  select(index) {\r\n    if (this.layoutNode.items[index].type === '$ref') {\r\n      this.jsf.addItem({\r\n        layoutNode: this.layoutNode.items[index],\r\n        layoutIndex: this.layoutIndex.concat(index),\r\n        dataIndex: this.dataIndex.concat(index)\r\n      });\r\n      this.updateControl();\r\n    }\r\n    this.selectedItem = index;\r\n  }\r\n\r\n  updateControl() {\r\n    this.itemCount = this.layoutNode.items.length - 1;\r\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\r\n    this.showAddTab = lastItem.type === '$ref' &&\r\n      this.itemCount < (lastItem.options.maxItems || 1000);\r\n  }\r\n\r\n  setTabTitle(item: any, index: number): string {\r\n    return this.jsf.setArrayItemTitle(this, item, index);\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'material-textarea-widget',\r\n  template: `\r\n    <mat-form-field\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\r\n      [style.width]=\"'100%'\">\r\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\r\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\r\n      <textarea matInput *ngIf=\"boundControl\"\r\n        [formControl]=\"formControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [required]=\"options?.required\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [style.width]=\"'100%'\"\r\n        (blur)=\"options.showErrors = true\"></textarea>\r\n      <textarea matInput *ngIf=\"!boundControl\"\r\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\r\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\r\n        [attr.maxlength]=\"options?.maxLength\"\r\n        [attr.minlength]=\"options?.minLength\"\r\n        [attr.pattern]=\"options?.pattern\"\r\n        [required]=\"options?.required\"\r\n        [disabled]=\"controlDisabled\"\r\n        [id]=\"'control' + layoutNode?._id\"\r\n        [name]=\"controlName\"\r\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\r\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\r\n        [style.width]=\"'100%'\"\r\n        [value]=\"controlValue\"\r\n        (input)=\"updateValue($event)\"\r\n        (blur)=\"options.showErrors = true\"></textarea>\r\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\r\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\r\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\r\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\r\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\r\n  styles: [`\r\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\r\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\r\n      .mat-form-field-infix { width: initial; }\r\n  `],\r\n})\r\nexport class MaterialTextareaComponent implements OnInit {\r\n  formControl: AbstractControl;\r\n  controlName: string;\r\n  controlValue: any;\r\n  controlDisabled = false;\r\n  boundControl = false;\r\n  options: any;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    private jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.options = this.layoutNode.options || {};\r\n    this.jsf.initializeControl(this);\r\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\r\n      this.options.description = this.options.placeholder;\r\n    }\r\n  }\r\n\r\n  updateValue(event) {\r\n    this.jsf.updateValue(this, event.target.value);\r\n  }\r\n}\r\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\r\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\r\nimport { Framework } from '../framework';\r\nimport { Injectable } from '@angular/core';\r\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\r\nimport { MaterialButtonComponent } from './material-button.component';\r\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\r\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\r\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\r\nimport { MaterialChipListComponent } from './material-chip-list.component';\r\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\r\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\r\nimport { MaterialFileComponent } from './material-file.component';\r\nimport { MaterialInputComponent } from './material-input.component';\r\nimport { MaterialNumberComponent } from './material-number.component';\r\nimport { MaterialOneOfComponent } from './material-one-of.component';\r\nimport { MaterialRadiosComponent } from './material-radios.component';\r\nimport { MaterialSelectComponent } from './material-select.component';\r\nimport { MaterialSliderComponent } from './material-slider.component';\r\nimport { MaterialStepperComponent } from './material-stepper.component';\r\nimport { MaterialTabsComponent } from './material-tabs.component';\r\nimport { MaterialTextareaComponent } from './material-textarea.component';\r\n\r\n\r\n// Material Design Framework\r\n// https://github.com/angular/material2\r\n\r\n@Injectable()\r\nexport class MaterialDesignFramework extends Framework {\r\n  name = 'material-design';\r\n\r\n  framework = MaterialDesignFrameworkComponent;\r\n\r\n  stylesheets = [\r\n    '//fonts.googleapis.com/icon?family=Material+Icons',\r\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\r\n  ];\r\n\r\n  widgets = {\r\n    'root':            FlexLayoutRootComponent,\r\n    'section':         FlexLayoutSectionComponent,\r\n    '$ref':            MaterialAddReferenceComponent,\r\n    'button':          MaterialButtonComponent,\r\n    'button-group':    MaterialButtonGroupComponent,\r\n    'checkbox':        MaterialCheckboxComponent,\r\n    'checkboxes':      MaterialCheckboxesComponent,\r\n    'chip-list':       MaterialChipListComponent,\r\n    'date':            MaterialDatepickerComponent,\r\n    'file':            MaterialFileComponent,\r\n    'number':          MaterialNumberComponent,\r\n    'one-of':          MaterialOneOfComponent,\r\n    'radios':          MaterialRadiosComponent,\r\n    'select':          MaterialSelectComponent,\r\n    'slider':          MaterialSliderComponent,\r\n    'stepper':         MaterialStepperComponent,\r\n    'tabs':            MaterialTabsComponent,\r\n    'text':            MaterialInputComponent,\r\n    'textarea':        MaterialTextareaComponent,\r\n    'alt-date':        'date',\r\n    'any-of':          'one-of',\r\n    'card':            'section',\r\n    'color':           'text',\r\n    'expansion-panel': 'section',\r\n    'hidden':          'none',\r\n    'image':           'none',\r\n    'integer':         'number',\r\n    'radiobuttons':    'button-group',\r\n    'range':           'slider',\r\n    'submit':          'button',\r\n    'tagsinput':       'chip-list',\r\n    'wizard':          'stepper',\r\n  };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\r\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, FormsModule, ReactiveFormsModule,\r\n    WidgetLibraryModule, NoFrameworkModule\r\n  ],\r\n  declarations: [JsonSchemaFormComponent],\r\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\r\n})\r\nexport class JsonSchemaFormModule {}\r\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\r\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\r\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\r\nimport { MaterialButtonComponent } from './material-button.component';\r\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\r\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\r\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\r\nimport { MaterialChipListComponent } from './material-chip-list.component';\r\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\r\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\r\nimport { MaterialFileComponent } from './material-file.component';\r\nimport { MaterialInputComponent } from './material-input.component';\r\nimport { MaterialNumberComponent } from './material-number.component';\r\nimport { MaterialOneOfComponent } from './material-one-of.component';\r\nimport { MaterialRadiosComponent } from './material-radios.component';\r\nimport { MaterialSelectComponent } from './material-select.component';\r\nimport { MaterialSliderComponent } from './material-slider.component';\r\nimport { MaterialStepperComponent } from './material-stepper.component';\r\nimport { MaterialTabsComponent } from './material-tabs.component';\r\nimport { MaterialTextareaComponent } from './material-textarea.component';\r\n\r\n\r\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\r\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\r\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\r\n  MaterialButtonComponent, MaterialButtonGroupComponent,\r\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\r\n  MaterialChipListComponent, MaterialDatepickerComponent,\r\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\r\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\r\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\r\n  MaterialDesignFrameworkComponent\r\n];\r\n\r\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\r\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\r\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\r\nexport { MaterialOneOfComponent } from './material-one-of.component';\r\nexport { MaterialButtonComponent } from './material-button.component';\r\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\r\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\r\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\r\nexport { MaterialChipListComponent } from './material-chip-list.component';\r\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\r\nexport { MaterialFileComponent } from './material-file.component';\r\nexport { MaterialInputComponent } from './material-input.component';\r\nexport { MaterialNumberComponent } from './material-number.component';\r\nexport { MaterialRadiosComponent } from './material-radios.component';\r\nexport { MaterialSelectComponent } from './material-select.component';\r\nexport { MaterialSliderComponent } from './material-slider.component';\r\nexport { MaterialStepperComponent } from './material-stepper.component';\r\nexport { MaterialTabsComponent } from './material-tabs.component';\r\nexport { MaterialTextareaComponent } from './material-textarea.component';\r\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\r\n","import { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Framework } from '../framework';\r\nimport { FrameworkLibraryService } from '../framework-library.service';\r\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatNativeDateModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTooltipModule\r\n  } from '@angular/material';\r\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\r\nimport { MaterialDesignFramework } from './material-design.framework';\r\nimport { NgModule } from '@angular/core';\r\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\r\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\r\n/**\r\n * unused @angular/material modules:\r\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\r\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\r\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\r\n * MatToolbarModule,\r\n */\r\nexport const ANGULAR_MATERIAL_MODULES = [\r\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\r\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\r\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\r\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\r\n  MatStepperModule, MatTabsModule, MatTooltipModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\r\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule, JsonSchemaFormModule\r\n  ],\r\n  declarations: [...MATERIAL_FRAMEWORK_COMPONENTS],\r\n  exports: [JsonSchemaFormModule, ...MATERIAL_FRAMEWORK_COMPONENTS],\r\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\r\n    { provide: Framework, useClass: MaterialDesignFramework, multi: true }\r\n  ],\r\n  entryComponents: [...MATERIAL_FRAMEWORK_COMPONENTS]\r\n})\r\nexport class MaterialDesignFrameworkModule { }\r\n","import _ from 'lodash';\r\nimport { addClasses, inArray } from '../../shared';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit\r\n  } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n\r\n\r\n/**\r\n * Bootstrap 3 framework for Angular JSON Schema Form.\r\n *\r\n */\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'bootstrap-3-framework',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\">\r\n\r\n      <button *ngIf=\"showRemoveButton\"\r\n        class=\"close pull-right\"\r\n        type=\"button\"\r\n        (click)=\"removeItem()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        <span class=\"sr-only\">Close</span>\r\n      </button>\r\n      <div *ngIf=\"options?.messageLocation === 'top'\">\r\n          <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n\r\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [class.sr-only]=\"options?.notitle\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\r\n        <strong class=\"text-danger\">*</strong> = required fields\r\n      </p>\r\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\r\n        <span *ngIf=\"options?.fieldAddonLeft\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\r\n\r\n        <select-widget-widget\r\n          [layoutNode]=\"widgetLayoutNode\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\r\n\r\n        <span *ngIf=\"options?.fieldAddonRight\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\r\n      </div>\r\n\r\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\r\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\r\n          (formControl?.dirty || options?.feedbackOnRender)\"\r\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\r\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\r\n        aria-hidden=\"true\"\r\n        class=\"form-control-feedback glyphicon\"></span>\r\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\r\n        <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\r\n  `,\r\n  styles: [`\r\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\r\n    :host /deep/ .checkbox,\r\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\r\n    :host /deep/ .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .radio-inline,\r\n    :host /deep/ .radio-inline,\r\n    :host /deep/ .radio-inline + .radio-inline,\r\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\r\n    :host /deep/ .checkbox-inline:last-child,\r\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\r\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\r\n  `],\r\n})\r\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\r\n  frameworkInitialized = false;\r\n  widgetOptions: any; // Options passed to child widget\r\n  widgetLayoutNode: any; // layoutNode passed to child widget\r\n  options: any; // Options used in this framework\r\n  formControl: any = null;\r\n  debugOutput: any = '';\r\n  debug: any = '';\r\n  parentArray: any = null;\r\n  isOrderable = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    public changeDetector: ChangeDetectorRef,\r\n    public jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  get showRemoveButton(): boolean {\r\n    if (!this.options.removable || this.options.readonly ||\r\n      this.layoutNode.type === '$ref'\r\n    ) { return false; }\r\n    if (this.layoutNode.recursiveReference) { return true; }\r\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\r\n    // If array length <= minItems, don't allow removing any items\r\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\r\n      // For removable list items, allow removing any item\r\n      this.layoutNode.arrayItemType === 'list' ? true :\r\n      // For removable tuple items, only allow removing last item in list\r\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeFramework();\r\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\r\n      this.parentArray = this.jsf.getParentNode(this);\r\n      if (this.parentArray) {\r\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\r\n          !this.options.readonly && this.parentArray.options.orderable;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\r\n  }\r\n\r\n  initializeFramework() {\r\n    if (this.layoutNode) {\r\n      this.options = _.cloneDeep(this.layoutNode.options);\r\n      if (!this.options) {\r\n        this.options = {};\r\n      }\r\n      this.widgetLayoutNode = {\r\n        ...this.layoutNode,\r\n        options: _.cloneDeep(this.layoutNode.options)\r\n      };\r\n      this.widgetOptions = this.widgetLayoutNode.options;\r\n      if (!this.widgetOptions) {\r\n        this.widgetOptions = {};\r\n      }\r\n      this.formControl = this.jsf.getFormControl(this);\r\n\r\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\r\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\r\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\r\n        'image', 'integer', 'month', 'number', 'password', 'radio',\r\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\r\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\r\n      ]);\r\n\r\n      this.options.title = this.setTitle();\r\n\r\n      this.options.htmlClass =\r\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\r\n      if (this.layoutNode.type !== 'flex')  {\r\n          this.options.htmlClass =\r\n            this.layoutNode.type === 'array' ?\r\n              addClasses(this.options.htmlClass, 'list-group') :\r\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\r\n              addClasses(this.options.htmlClass, 'list-group-item') :\r\n              addClasses(this.options.htmlClass, 'form-group');\r\n      }\r\n      this.widgetOptions.htmlClass = '';\r\n      this.options.labelHtmlClass =\r\n        addClasses(this.options.labelHtmlClass, 'control-label');\r\n      this.widgetOptions.activeClass =\r\n        addClasses(this.widgetOptions.activeClass, 'active');\r\n      this.options.fieldAddonLeft =\r\n        this.options.fieldAddonLeft || this.options.prepend;\r\n      this.options.fieldAddonRight =\r\n        this.options.fieldAddonRight || this.options.append;\r\n\r\n      // Add asterisk to titles if required\r\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\r\n        !this.options.notitle && this.options.required  &&\r\n        !this.options.title.includes('*')\r\n      ) {\r\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\r\n      }\r\n      // Set miscelaneous styles and settings for each control type\r\n      switch (this.layoutNode.type) {\r\n        // Checkbox controls\r\n        case 'checkbox': case 'checkboxes':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'checkbox');\r\n        break;\r\n        case 'checkboxes-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'checkbox');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\r\n        break;\r\n        // Radio controls\r\n        case 'radio': case 'radios':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'radio');\r\n        break;\r\n        case 'radios-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'radio');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\r\n        break;\r\n        // Button sets - checkboxbuttons and radiobuttons\r\n        case 'checkboxbuttons': case 'radiobuttons':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'btn-group');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\r\n        break;\r\n        // Single button controls\r\n        case 'button': case 'submit':\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'btn');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\r\n        break;\r\n        // Containers - arrays and fieldsets\r\n        case 'array': case 'fieldset': case 'section': case 'conditional':\r\n        case 'advancedfieldset': case 'authfieldset':\r\n        case 'selectfieldset': case 'optionfieldset':\r\n          this.options.messageLocation = 'top';\r\n        break;\r\n        case 'tabarray': case 'tabs':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'tab-content');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\r\n          this.widgetOptions.labelHtmlClass = addClasses(\r\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\r\n        break;\r\n        // 'Add' buttons - references\r\n        case '$ref':\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\r\n          this.options.icon = 'glyphicon glyphicon-plus';\r\n        break;\r\n        // Default - including regular inputs\r\n        default:\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'form-control');\r\n      }\r\n\r\n      if (this.formControl) {\r\n        this.updateHelpBlock(this.formControl.status);\r\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\r\n\r\n        if (this.options.debug) {\r\n          const vars: any[] = [];\r\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\r\n        }\r\n      }\r\n      this.frameworkInitialized = true;\r\n    }\r\n\r\n  }\r\n\r\n  updateHelpBlock(status) {\r\n    this.options.helpBlock = status === 'INVALID' &&\r\n      this.options.enableErrorState && this.formControl.errors &&\r\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\r\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\r\n        this.options.description || this.options.help || null;\r\n  }\r\n\r\n  setTitle(): string {\r\n    switch (this.layoutNode.type) {\r\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\r\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\r\n        return null;\r\n      case 'advancedfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Advanced options';\r\n        return null;\r\n      case 'authfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Authentication settings';\r\n        return null;\r\n      case 'fieldset':\r\n        this.widgetOptions.title = this.options.title;\r\n        return null;\r\n      default:\r\n        this.widgetOptions.title = null;\r\n        return this.jsf.setItemTitle(this);\r\n    }\r\n  }\r\n\r\n  removeItem() {\r\n    this.jsf.removeItem(this);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Framework } from '../framework';\r\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\r\n\r\n\r\n// Bootstrap 3 Framework\r\n// https://github.com/valor-software/ng2-bootstrap\r\n\r\n@Injectable()\r\nexport class Bootstrap3Framework extends Framework {\r\n  name = 'bootstrap-3';\r\n\r\n  framework = Bootstrap3FrameworkComponent;\r\n\r\n  stylesheets = [\r\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\r\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\r\n  ];\r\n\r\n  scripts = [\r\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\r\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\r\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\r\n  ];\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\r\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\r\nimport { Framework } from '../framework';\r\nimport { FrameworkLibraryService } from '../framework-library.service';\r\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\r\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\r\n  declarations: [Bootstrap3FrameworkComponent],\r\n  exports: [JsonSchemaFormModule, Bootstrap3FrameworkComponent],\r\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\r\n    { provide: Framework, useClass: Bootstrap3Framework, multi: true }\r\n  ],\r\n  entryComponents: [Bootstrap3FrameworkComponent]\r\n})\r\nexport class Bootstrap3FrameworkModule { }\r\n","import _ from 'lodash';\r\nimport { addClasses, inArray } from '../../shared';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit\r\n  } from '@angular/core';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\n\r\n/**\r\n * Bootstrap 4 framework for Angular JSON Schema Form.\r\n *\r\n */\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'bootstrap-4-framework',\r\n  template: `\r\n    <div\r\n      [class]=\"options?.htmlClass || ''\"\r\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\"\r\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\r\n        (formControl?.dirty || options?.feedbackOnRender)\">\r\n\r\n      <button *ngIf=\"showRemoveButton\"\r\n        class=\"close pull-right\"\r\n        type=\"button\"\r\n        (click)=\"removeItem()\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n        <span class=\"sr-only\">Close</span>\r\n      </button>\r\n      <div *ngIf=\"options?.messageLocation === 'top'\">\r\n        <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n\r\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\r\n        [attr.for]=\"'control' + layoutNode?._id\"\r\n        [class]=\"options?.labelHtmlClass || ''\"\r\n        [class.sr-only]=\"options?.notitle\"\r\n        [innerHTML]=\"options?.title\"></label>\r\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\r\n        <strong class=\"text-danger\">*</strong> = required fields\r\n      </p>\r\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\r\n        <span *ngIf=\"options?.fieldAddonLeft\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\r\n\r\n        <select-widget-widget\r\n          [layoutNode]=\"widgetLayoutNode\"\r\n          [dataIndex]=\"dataIndex\"\r\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\r\n\r\n        <span *ngIf=\"options?.fieldAddonRight\"\r\n          class=\"input-group-addon\"\r\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\r\n      </div>\r\n\r\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\r\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\r\n          (formControl?.dirty || options?.feedbackOnRender)\"\r\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\r\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\r\n        aria-hidden=\"true\"\r\n        class=\"form-control-feedback glyphicon\"></span>\r\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\r\n        <p *ngIf=\"options?.helpBlock\"\r\n          class=\"help-block\"\r\n          [innerHTML]=\"options?.helpBlock\"></p>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\r\n  `,\r\n  styles: [`\r\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\r\n    :host /deep/ .checkbox,\r\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\r\n    :host /deep/ .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .checkbox-inline,\r\n    :host /deep/ .checkbox-inline + .radio-inline,\r\n    :host /deep/ .radio-inline,\r\n    :host /deep/ .radio-inline + .radio-inline,\r\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\r\n    :host /deep/ .checkbox-inline:last-child,\r\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\r\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\r\n  `],\r\n})\r\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\r\n  frameworkInitialized = false;\r\n  widgetOptions: any; // Options passed to child widget\r\n  widgetLayoutNode: any; // layoutNode passed to child widget\r\n  options: any; // Options used in this framework\r\n  formControl: any = null;\r\n  debugOutput: any = '';\r\n  debug: any = '';\r\n  parentArray: any = null;\r\n  isOrderable = false;\r\n  @Input() layoutNode: any;\r\n  @Input() layoutIndex: number[];\r\n  @Input() dataIndex: number[];\r\n\r\n  constructor(\r\n    public changeDetector: ChangeDetectorRef,\r\n    public jsf: JsonSchemaFormService\r\n  ) { }\r\n\r\n  get showRemoveButton(): boolean {\r\n    if (!this.options.removable || this.options.readonly ||\r\n      this.layoutNode.type === '$ref'\r\n    ) { return false; }\r\n    if (this.layoutNode.recursiveReference) { return true; }\r\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\r\n    // If array length <= minItems, don't allow removing any items\r\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\r\n      // For removable list items, allow removing any item\r\n      this.layoutNode.arrayItemType === 'list' ? true :\r\n        // For removable tuple items, only allow removing last item in list\r\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeFramework();\r\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\r\n      this.parentArray = this.jsf.getParentNode(this);\r\n      if (this.parentArray) {\r\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\r\n          !this.options.readonly && this.parentArray.options.orderable;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\r\n  }\r\n\r\n  initializeFramework() {\r\n    if (this.layoutNode) {\r\n      this.options = _.cloneDeep(this.layoutNode.options);\r\n      if (!this.options) {\r\n        this.options = {};\r\n      }\r\n      this.widgetLayoutNode = {\r\n        ...this.layoutNode,\r\n        options: _.cloneDeep(this.layoutNode.options)\r\n      };\r\n      this.widgetOptions = this.widgetLayoutNode.options;\r\n      if (!this.widgetOptions) {\r\n        this.widgetOptions = {};\r\n      }\r\n      this.formControl = this.jsf.getFormControl(this);\r\n\r\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\r\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\r\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\r\n        'image', 'integer', 'month', 'number', 'password', 'radio',\r\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\r\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\r\n      ]);\r\n\r\n      this.options.title = this.setTitle();\r\n\r\n      this.options.htmlClass =\r\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\r\n      this.options.htmlClass =\r\n        this.layoutNode.type === 'array' ?\r\n          addClasses(this.options.htmlClass, 'list-group') :\r\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\r\n            addClasses(this.options.htmlClass, 'list-group-item') :\r\n            addClasses(this.options.htmlClass, 'form-group');\r\n      this.widgetOptions.htmlClass = '';\r\n      this.options.labelHtmlClass =\r\n        addClasses(this.options.labelHtmlClass, 'control-label');\r\n      this.widgetOptions.activeClass =\r\n        addClasses(this.widgetOptions.activeClass, 'active');\r\n      this.options.fieldAddonLeft =\r\n        this.options.fieldAddonLeft || this.options.prepend;\r\n      this.options.fieldAddonRight =\r\n        this.options.fieldAddonRight || this.options.append;\r\n\r\n      // Add asterisk to titles if required\r\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\r\n        !this.options.notitle && this.options.required  &&\r\n        !this.options.title.includes('*')\r\n      ) {\r\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\r\n      }\r\n      // Set miscelaneous styles and settings for each control type\r\n      switch (this.layoutNode.type) {\r\n        // Checkbox controls\r\n        case 'checkbox': case 'checkboxes':\r\n        this.widgetOptions.htmlClass = addClasses(\r\n          this.widgetOptions.htmlClass, 'checkbox');\r\n        break;\r\n        case 'checkboxes-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'checkbox');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\r\n          break;\r\n        // Radio controls\r\n        case 'radio': case 'radios':\r\n        this.widgetOptions.htmlClass = addClasses(\r\n          this.widgetOptions.htmlClass, 'radio');\r\n        break;\r\n        case 'radios-inline':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'radio');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\r\n          break;\r\n        // Button sets - checkboxbuttons and radiobuttons\r\n        case 'checkboxbuttons': case 'radiobuttons':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'btn-group');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\r\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\r\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\r\n        break;\r\n        // Single button controls\r\n        case 'button': case 'submit':\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'btn');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\r\n        break;\r\n        // Containers - arrays and fieldsets\r\n        case 'array': case 'fieldset': case 'section': case 'conditional':\r\n        case 'advancedfieldset': case 'authfieldset':\r\n        case 'selectfieldset': case 'optionfieldset':\r\n          this.options.messageLocation = 'top';\r\n        break;\r\n        case 'tabarray': case 'tabs':\r\n          this.widgetOptions.htmlClass = addClasses(\r\n            this.widgetOptions.htmlClass, 'tab-content');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\r\n          this.widgetOptions.labelHtmlClass = addClasses(\r\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\r\n        break;\r\n        // 'Add' buttons - references\r\n        case '$ref':\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\r\n          this.options.icon = 'glyphicon glyphicon-plus';\r\n        break;\r\n        // Default - including regular inputs\r\n        default:\r\n          this.widgetOptions.fieldHtmlClass = addClasses(\r\n            this.widgetOptions.fieldHtmlClass, 'form-control');\r\n      }\r\n\r\n      if (this.formControl) {\r\n        this.updateHelpBlock(this.formControl.status);\r\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\r\n\r\n        if (this.options.debug) {\r\n          const vars: any[] = [];\r\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\r\n        }\r\n      }\r\n      this.frameworkInitialized = true;\r\n    }\r\n\r\n  }\r\n\r\n  updateHelpBlock(status) {\r\n    this.options.helpBlock = status === 'INVALID' &&\r\n      this.options.enableErrorState && this.formControl.errors &&\r\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\r\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\r\n        this.options.description || this.options.help || null;\r\n  }\r\n\r\n  setTitle(): string {\r\n    switch (this.layoutNode.type) {\r\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\r\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\r\n        return null;\r\n      case 'advancedfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Advanced options';\r\n        return null;\r\n      case 'authfieldset':\r\n        this.widgetOptions.expandable = true;\r\n        this.widgetOptions.title = 'Authentication settings';\r\n        return null;\r\n      case 'fieldset':\r\n        this.widgetOptions.title = this.options.title;\r\n        return null;\r\n      default:\r\n        this.widgetOptions.title = null;\r\n        return this.jsf.setItemTitle(this);\r\n    }\r\n  }\r\n\r\n  removeItem() {\r\n    this.jsf.removeItem(this);\r\n  }\r\n}\r\n","import { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\r\nimport { Framework } from '../framework';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// Bootstrap 4 Framework\r\n// https://github.com/ng-bootstrap/ng-bootstrap\r\n\r\n@Injectable()\r\nexport class Bootstrap4Framework extends Framework {\r\n  name = 'bootstrap-4';\r\n\r\n  framework = Bootstrap4FrameworkComponent;\r\n\r\n  stylesheets = [\r\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\r\n  ];\r\n\r\n  scripts = [\r\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\r\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\r\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\r\n  ];\r\n}\r\n","import { Bootstrap4Framework } from './bootstrap-4.framework';\r\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Framework } from '../framework';\r\nimport { FrameworkLibraryService } from '../framework-library.service';\r\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\r\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\r\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\r\n  declarations: [Bootstrap4FrameworkComponent],\r\n  exports: [JsonSchemaFormModule, Bootstrap4FrameworkComponent],\r\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\r\n    { provide: Framework, useClass: Bootstrap4Framework, multi: true }\r\n  ],\r\n  entryComponents: [Bootstrap4FrameworkComponent]\r\n})\r\nexport class Bootstrap4FrameworkModule { }\r\n"]}